{"version":3,"file":"wavesurfer.js","mappings":"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AAhB;AACAL,EAAAA,GAAG,CAACK,MAAJ;AACH;;;;;;;;;;;;;;;;;;;;AClCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS1W,KAAT,CAAeF,EAAf,EAAmBC,MAAnB,EAA2B;AACtCiN,EAAAA,MAAM,CAACC,IAAP,CAAYlN,MAAZ,EAAoBtD,OAApB,CAA4B,UAAAuY,IAAI,EAAI;AAChC,QAAIlV,EAAE,CAACE,KAAH,CAASgV,IAAT,MAAmBjV,MAAM,CAACiV,IAAD,CAA7B,EAAqC;AACjClV,MAAAA,EAAE,CAACE,KAAH,CAASgV,IAAT,IAAiBjV,MAAM,CAACiV,IAAD,CAAvB;AACH;AACJ,GAJD;AAKA,SAAOlV,EAAP;AACH;;;;;;;;;;;;;;;;;;;;;;ACfD;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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,WAAK/b,SAAL,CAAe,OAAf;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB;AACb,aAAO,KAAKid,KAAL,CAAWvS,cAAX,CAA0BhD,IAA1B,CAA+B,IAA/B,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,2BAAkB;AACd,aAAO,KAAK0B,YAAZ;AACH;AAED;AACJ;AACA;AACA;AACA;;;;WACI,yBAAgBrP,KAAhB,EAAuB;AACnB,WAAKqP,YAAL,GAAoBrP,KAAK,IAAI,CAA7B;AACA,WAAKgjB,MAAL,IAAe,KAAKA,MAAL,CAAY3T,YAAZ,CAAyB4V,cAAzB,CACX,KAAK5V,YADM,EAEX,KAAKT,EAAL,CAAQM,WAFG,CAAf;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAW5Q,GAAX,EAAgB;AACZ,WAAKkkB,cAAL,GAAsBlkB,GAAtB;AACH;;;;EA5uBiCyE,IAAI,CAACkF;;;;gBAAtB0K,8BAES;;;;;;;;;;;;ACd9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;UCrEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/absMax.js","webpack://WaveSurfer/./src/util/clamp.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/orientation.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/silence-mode.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, function() {\nreturn ","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport style from './util/style';\r\nimport getId from './util/get-id';\r\n\r\n/**\r\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\r\n * and an (optional) progress wave `canvas`.\r\n *\r\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\r\n * render a waveform, depending on the zoom level.\r\n */\r\nexport default class CanvasEntry {\r\n    constructor() {\r\n        /**\r\n         * The wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.wave = null;\r\n        /**\r\n         * The wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.waveCtx = null;\r\n        /**\r\n         * The (optional) progress wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.progress = null;\r\n        /**\r\n         * The (optional) progress wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.progressCtx = null;\r\n        /**\r\n         * Start of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.start = 0;\r\n        /**\r\n         * End of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.end = 1;\r\n        /**\r\n         * Unique identifier for this entry\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.id = getId(\r\n            typeof this.constructor.name !== 'undefined'\r\n                ? this.constructor.name.toLowerCase() + '_'\r\n                : 'canvasentry_'\r\n        );\r\n        /**\r\n         * Canvas 2d context attributes\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = {};\r\n    }\r\n\r\n    /**\r\n     * Store the wave canvas element and create the 2D rendering context\r\n     *\r\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\r\n     */\r\n    initWave(element) {\r\n        this.wave = element;\r\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\r\n    }\r\n\r\n    /**\r\n     * Store the progress wave canvas element and create the 2D rendering\r\n     * context\r\n     *\r\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\r\n     */\r\n    initProgress(element) {\r\n        this.progress = element;\r\n        this.progressCtx = this.progress.getContext(\r\n            '2d',\r\n            this.canvasContextAttributes\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions\r\n     *\r\n     * @param {number} elementWidth Width of the entry\r\n     * @param {number} totalWidth Total width of the multi canvas renderer\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(elementWidth, totalWidth, width, height) {\r\n        // where the canvas starts and ends in the waveform, represented as a\r\n        // decimal between 0 and 1\r\n        this.start = this.wave.offsetLeft / totalWidth || 0;\r\n        this.end = this.start + elementWidth / totalWidth;\r\n\r\n        // set wave canvas dimensions\r\n        this.wave.width = width;\r\n        this.wave.height = height;\r\n        let elementSize = { width: elementWidth + 'px' };\r\n        style(this.wave, elementSize);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            // set progress canvas dimensions\r\n            this.progress.width = width;\r\n            this.progress.height = height;\r\n            style(this.progress, elementSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear the wave and progress rendering contexts\r\n     */\r\n    clearWave() {\r\n        // wave\r\n        this.waveCtx.clearRect(\r\n            0,\r\n            0,\r\n            this.waveCtx.canvas.width,\r\n            this.waveCtx.canvas.height\r\n        );\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.clearRect(\r\n                0,\r\n                0,\r\n                this.progressCtx.canvas.width,\r\n                this.progressCtx.canvas.height\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for wave and progress\r\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\r\n     * or an array of colors to apply as a gradient\r\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\r\n     * or an array of colors to apply as a gradient\r\n     */\r\n    setFillStyles(waveColor, progressColor) {\r\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility function to handle wave color arguments\r\n     *\r\n     * When the color argument type is a string, it will be returned as is.\r\n     * Otherwise, it will be treated as an array, and a canvas gradient will\r\n     * be returned\r\n     *\r\n     * @since 5.3.0\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {string|string[]} color Fill color for the wave canvas, or an array of colors to apply as a gradient\r\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a canvas gradient\r\n     */\r\n    getFillStyle(ctx, color) {\r\n        if (typeof color == 'string') {\r\n            return color;\r\n        }\r\n\r\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\r\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\r\n\r\n        return waveGradient;\r\n    }\r\n\r\n    /**\r\n     * Set the canvas transforms for wave and progress\r\n     *\r\n     * @param {boolean} vertical Whether to render vertically\r\n     */\r\n    applyCanvasTransforms(vertical) {\r\n        if (vertical) {\r\n            // Reflect the waveform across the line y = -x\r\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\r\n\r\n            if (this.hasProgressCanvas) {\r\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle for wave and progress\r\n     *\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRects(x, y, width, height, radius) {\r\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.fillRectToContext(\r\n                this.progressCtx,\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                radius\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the actual rectangle on a `canvas` element\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRectToContext(ctx, x, y, width, height, radius) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        if (radius) {\r\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\r\n        } else {\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rounded rectangle on Canvas\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Canvas context\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     *\r\n     * @return {void}\r\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\r\n     */\r\n    drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        if (height === 0) {\r\n            return;\r\n        }\r\n        // peaks are float values from -1 to 1. Use absolute height values in\r\n        // order to correctly calculate rounded rectangle coordinates\r\n        if (height < 0) {\r\n            height *= -1;\r\n            y -= height;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(\r\n            x + width,\r\n            y + height,\r\n            x + width - radius,\r\n            y + height\r\n        );\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Render the actual wave and progress lines\r\n     *\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\r\n        this.drawLineToContext(\r\n            this.waveCtx,\r\n            peaks,\r\n            absmax,\r\n            halfH,\r\n            offsetY,\r\n            start,\r\n            end\r\n        );\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.drawLineToContext(\r\n                this.progressCtx,\r\n                peaks,\r\n                absmax,\r\n                halfH,\r\n                offsetY,\r\n                start,\r\n                end\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the actual waveform line on a `canvas` element\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        const length = peaks.length / 2;\r\n        const first = Math.round(length * this.start);\r\n\r\n        // use one more peak value to make sure we join peaks at ends -- unless,\r\n        // of course, this is the last canvas\r\n        const last = Math.round(length * this.end) + 1;\r\n\r\n        const canvasStart = first;\r\n        const canvasEnd = last;\r\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\r\n\r\n        // optimization\r\n        const halfOffset = halfH + offsetY;\r\n        const absmaxHalf = absmax / halfH;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\r\n        );\r\n\r\n        let i, peak, h;\r\n        for (i = canvasStart; i < canvasEnd; i++) {\r\n            peak = peaks[2 * i] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        // draw the bottom edge going backwards, to make a single\r\n        // closed hull to fill\r\n        let j = canvasEnd - 1;\r\n        for (j; j >= canvasStart; j--) {\r\n            peak = peaks[2 * j + 1] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset -\r\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\r\n        );\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Destroys this entry\r\n     */\r\n    destroy() {\r\n        this.waveCtx = null;\r\n        this.wave = null;\r\n\r\n        this.progressCtx = null;\r\n        this.progress = null;\r\n    }\r\n\r\n    /**\r\n     * Return image data of the wave `canvas` element\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise` that\r\n     * resolves with a `Blob` instance.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\r\n     * returns a data URL. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with a `Blob` instance.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return new Promise(resolve => {\r\n                this.wave.toBlob(resolve, format, quality);\r\n            });\r\n        } else if (type === 'dataURL') {\r\n            return this.wave.toDataURL(format, quality);\r\n        }\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n/**\r\n * Parent class for renderers\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class Drawer extends util.Observer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super();\r\n\r\n        this.container = util.withOrientation(container, params.vertical);\r\n        /**\r\n         * @type {WavesurferParams}\r\n         */\r\n        this.params = params;\r\n        /**\r\n         * The width of the renderer\r\n         * @type {number}\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * The height of the renderer\r\n         * @type {number}\r\n         */\r\n        this.height = params.height * this.params.pixelRatio;\r\n\r\n        this.lastPos = 0;\r\n        /**\r\n         * The `<wave>` element which is added to the container\r\n         * @type {HTMLElement}\r\n         */\r\n        this.wrapper = null;\r\n    }\r\n\r\n    /**\r\n     * Alias of `util.style`\r\n     *\r\n     * @param {HTMLElement} el The element that the styles will be applied to\r\n     * @param {Object} styles The map of propName: attribute, both are used as-is\r\n     * @return {HTMLElement} el\r\n     */\r\n    style(el, styles) {\r\n        return util.style(el, styles);\r\n    }\r\n\r\n    /**\r\n     * Create the wrapper `<wave>` element, style it and set up the events for\r\n     * interaction\r\n     */\r\n    createWrapper() {\r\n        this.wrapper = util.withOrientation(\r\n            this.container.appendChild(document.createElement('wave')),\r\n            this.params.vertical\r\n        );\r\n\r\n        this.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: this.params.height + 'px'\r\n        });\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: '100%',\r\n                cursor: this.params.hideCursor ? 'none' : 'auto',\r\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n\r\n        this.setupWrapperEvents();\r\n    }\r\n\r\n    /**\r\n     * Handle click event\r\n     *\r\n     * @param {Event} e Click event\r\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\r\n     * @return {number} Playback position from 0 to 1\r\n     */\r\n    handleEvent(e, noPrevent) {\r\n        !noPrevent && e.preventDefault();\r\n\r\n        const clientX = util.withOrientation(\r\n            e.targetTouches ? e.targetTouches[0] : e,\r\n            this.params.vertical\r\n        ).clientX;\r\n        const bbox = this.wrapper.getBoundingClientRect();\r\n\r\n        const nominalWidth = this.width;\r\n        const parentWidth = this.getWidth();\r\n        const progressPixels = this.getProgressPixels(bbox, clientX);\r\n\r\n        let progress;\r\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\r\n            progress = progressPixels *\r\n                (this.params.pixelRatio / nominalWidth) || 0;\r\n        } else {\r\n            progress = (progressPixels + this.wrapper.scrollLeft) /\r\n                this.wrapper.scrollWidth || 0;\r\n        }\r\n\r\n        return util.clamp(progress, 0, 1);\r\n    }\r\n\r\n    getProgressPixels(wrapperBbox, clientX) {\r\n        if (this.params.rtl) {\r\n            return wrapperBbox.right - clientX;\r\n        } else {\r\n            return clientX - wrapperBbox.left;\r\n        }\r\n    }\r\n\r\n    setupWrapperEvents() {\r\n        this.wrapper.addEventListener('click', e => {\r\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\r\n            const scrollbarHeight = this.wrapper.offsetHeight -\r\n                  this.wrapper.clientHeight;\r\n\r\n            if (scrollbarHeight !== 0) {\r\n                // scrollbar is visible.  Check if click was on it\r\n                const bbox = this.wrapper.getBoundingClientRect();\r\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\r\n                    // ignore mousedown as it was on the scrollbar\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.params.interact) {\r\n                this.fireEvent('click', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('dblclick', e => {\r\n            if (this.params.interact) {\r\n                this.fireEvent('dblclick', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('scroll', e =>\r\n            this.fireEvent('scroll', e)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw peaks on the canvas\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} length The width of the area that should be drawn\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawPeaks(peaks, length, start, end) {\r\n        if (!this.setWidth(length)) {\r\n            this.clearWave();\r\n        }\r\n\r\n        this.params.barWidth\r\n            ? this.drawBars(peaks, 0, start, end)\r\n            : this.drawWave(peaks, 0, start, end);\r\n    }\r\n\r\n    /**\r\n     * Scroll to the beginning\r\n     */\r\n    resetScroll() {\r\n        if (this.wrapper !== null) {\r\n            this.wrapper.scrollLeft = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port at a certain percent of the waveform\r\n     *\r\n     * @param {number} percent Value from 0 to 1 on the waveform\r\n     */\r\n    recenter(percent) {\r\n        const position = this.wrapper.scrollWidth * percent;\r\n        this.recenterOnPosition(position, true);\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port on a position, either scroll there immediately or\r\n     * in steps of 5 pixels\r\n     *\r\n     * @param {number} position X-offset in pixels\r\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\r\n     */\r\n    recenterOnPosition(position, immediate) {\r\n        const scrollLeft = this.wrapper.scrollLeft;\r\n        const half = ~~(this.wrapper.clientWidth / 2);\r\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n        let target = position - half;\r\n        let offset = target - scrollLeft;\r\n\r\n        if (maxScroll == 0) {\r\n            // no need to continue if scrollbar is not there\r\n            return;\r\n        }\r\n\r\n        // if the cursor is currently visible...\r\n        if (!immediate && -half <= offset && offset < half) {\r\n            // set rate at which waveform is centered\r\n            let rate = this.params.autoCenterRate;\r\n\r\n            // make rate depend on width of view and length of waveform\r\n            rate /= half;\r\n            rate *= maxScroll;\r\n\r\n            offset = Math.max(-rate, Math.min(rate, offset));\r\n            target = scrollLeft + offset;\r\n        }\r\n\r\n        // limit target to valid range (0 to maxScroll)\r\n        target = Math.max(0, Math.min(maxScroll, target));\r\n        // no use attempting to scroll if we're not moving\r\n        if (target != scrollLeft) {\r\n            this.wrapper.scrollLeft = target;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current scroll position in pixels\r\n     *\r\n     * @return {number} Horizontal scroll position in pixels\r\n     */\r\n    getScrollX() {\r\n        let x = 0;\r\n        if (this.wrapper) {\r\n            const pixelRatio = this.params.pixelRatio;\r\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\r\n\r\n            // In cases of elastic scroll (safari with mouse wheel) you can\r\n            // scroll beyond the limits of the container\r\n            // Calculate and floor the scrollable extent to make sure an out\r\n            // of bounds value is not returned\r\n            // Ticket #1312\r\n            if (this.params.scrollParent) {\r\n                const maxScroll = ~~(\r\n                    this.wrapper.scrollWidth * pixelRatio -\r\n                    this.getWidth()\r\n                );\r\n                x = Math.min(maxScroll, Math.max(0, x));\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Get the width of the container\r\n     *\r\n     * @return {number} The width of the container\r\n     */\r\n    getWidth() {\r\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\r\n    }\r\n\r\n    /**\r\n     * Set the width of the container\r\n     *\r\n     * @param {number} width The new width of the container\r\n     * @return {boolean} Whether the width of the container was updated or not\r\n     */\r\n    setWidth(width) {\r\n        if (this.width == width) {\r\n            return false;\r\n        }\r\n\r\n        this.width = width;\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: ''\r\n            });\r\n        } else {\r\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\r\n            this.style(this.wrapper, {\r\n                width: newWidth\r\n            });\r\n        }\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the container\r\n     *\r\n     * @param {number} height The new height of the container.\r\n     * @return {boolean} Whether the height of the container was updated or not\r\n     */\r\n    setHeight(height) {\r\n        if (height == this.height) {\r\n            return false;\r\n        }\r\n        this.height = height;\r\n\r\n        this.style(this.wrapper, {\r\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\r\n        });\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called by wavesurfer when progress should be rendered\r\n     *\r\n     * @param {number} progress From 0 to 1\r\n     */\r\n    progress(progress) {\r\n        const minPxDelta = 1 / this.params.pixelRatio;\r\n        const pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n            this.lastPos = pos;\r\n\r\n            if (this.params.scrollParent && this.params.autoCenter) {\r\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\r\n                this.recenterOnPosition(\r\n                    newPos,\r\n                    this.params.autoCenterImmediately\r\n                );\r\n            }\r\n\r\n            this.updateProgress(pos);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        this.unAll();\r\n        if (this.wrapper) {\r\n            if (this.wrapper.parentNode == this.container.domElement) {\r\n                this.container.removeChild(this.wrapper.domElement);\r\n            }\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    /* Renderer-specific methods */\r\n\r\n    /**\r\n     * Called after cursor related params have changed.\r\n     *\r\n     * @abstract\r\n     */\r\n    updateCursor() {}\r\n\r\n    /**\r\n     * Called when the size of the container changes so the renderer can adjust\r\n     *\r\n     * @abstract\r\n     */\r\n    updateSize() {}\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Clear the waveform\r\n     *\r\n     * @abstract\r\n     */\r\n    clearWave() {}\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @abstract\r\n     * @param {number} position X-Offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {}\r\n}\r\n","import Drawer from './drawer';\r\nimport * as util from './util';\r\nimport CanvasEntry from './drawer.canvasentry';\r\n\r\n/**\r\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\r\n * builtin renderer.\r\n *\r\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\r\n * on the zoom level.\r\n */\r\nexport default class MultiCanvas extends Drawer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super(container, params);\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasWidth = params.maxCanvasWidth;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasElementWidth = Math.round(\r\n            params.maxCanvasWidth / params.pixelRatio\r\n        );\r\n\r\n        /**\r\n         * Whether or not the progress wave is rendered. If the `waveColor`\r\n         * and `progressColor` are the same color it is not.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.halfPixel = 0.5 / params.pixelRatio;\r\n\r\n        /**\r\n         * List of `CanvasEntry` instances.\r\n         *\r\n         * @type {Array}\r\n         */\r\n        this.canvases = [];\r\n\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        this.progressWave = null;\r\n\r\n        /**\r\n         * Class used to generate entries.\r\n         *\r\n         * @type {function}\r\n         */\r\n        this.EntryClass = CanvasEntry;\r\n\r\n        /**\r\n         * Canvas 2d context attributes.\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = params.drawingContextAttributes;\r\n\r\n        /**\r\n         * Overlap added between entries to prevent vertical white stripes\r\n         * between `canvas` elements.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\r\n\r\n        /**\r\n         * The radius of the wave bars. Makes bars rounded\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.barRadius = params.barRadius || 0;\r\n\r\n        /**\r\n         * Whether to render the waveform vertically. Defaults to false.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.vertical = params.vertical;\r\n    }\r\n\r\n    /**\r\n     * Initialize the drawer\r\n     */\r\n    init() {\r\n        this.createWrapper();\r\n        this.createElements();\r\n    }\r\n\r\n    /**\r\n     * Create the canvas elements and style them\r\n     *\r\n     */\r\n    createElements() {\r\n        this.progressWave = util.withOrientation(\r\n            this.wrapper.appendChild(document.createElement('wave')),\r\n            this.params.vertical\r\n        );\r\n        this.style(this.progressWave, {\r\n            position: 'absolute',\r\n            zIndex: 3,\r\n            left: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            overflow: 'hidden',\r\n            width: '0',\r\n            display: 'none',\r\n            boxSizing: 'border-box',\r\n            borderRightStyle: 'solid',\r\n            pointerEvents: 'none'\r\n        });\r\n\r\n        this.addCanvas();\r\n        this.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Update cursor style\r\n     */\r\n    updateCursor() {\r\n        this.style(this.progressWave, {\r\n            borderRightWidth: this.params.cursorWidth + 'px',\r\n            borderRightColor: this.params.cursorColor\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adjust to the updated size by adding or removing canvases\r\n     */\r\n    updateSize() {\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n        const requiredCanvases = Math.ceil(\r\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\r\n        );\r\n\r\n        // add required canvases\r\n        while (this.canvases.length < requiredCanvases) {\r\n            this.addCanvas();\r\n        }\r\n\r\n        // remove older existing canvases, if any\r\n        while (this.canvases.length > requiredCanvases) {\r\n            this.removeCanvas();\r\n        }\r\n\r\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\r\n        const lastCanvas = this.canvases.length - 1;\r\n        this.canvases.forEach((entry, i) => {\r\n            if (i == lastCanvas) {\r\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\r\n            }\r\n            this.updateDimensions(entry, canvasWidth, this.height);\r\n\r\n            entry.clearWave();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add a canvas to the canvas list\r\n     *\r\n     */\r\n    addCanvas() {\r\n        const entry = new this.EntryClass();\r\n        entry.canvasContextAttributes = this.canvasContextAttributes;\r\n        entry.hasProgressCanvas = this.hasProgressCanvas;\r\n        entry.halfPixel = this.halfPixel;\r\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\r\n\r\n        // wave\r\n        let wave = util.withOrientation(\r\n            this.wrapper.appendChild(document.createElement('canvas')),\r\n            this.params.vertical\r\n        );\r\n        this.style(wave, {\r\n            position: 'absolute',\r\n            zIndex: 2,\r\n            left: leftOffset + 'px',\r\n            top: 0,\r\n            bottom: 0,\r\n            height: '100%',\r\n            pointerEvents: 'none'\r\n        });\r\n        entry.initWave(wave);\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            let progress = util.withOrientation(\r\n                this.progressWave.appendChild(document.createElement('canvas')),\r\n                this.params.vertical\r\n            );\r\n            this.style(progress, {\r\n                position: 'absolute',\r\n                left: leftOffset + 'px',\r\n                top: 0,\r\n                bottom: 0,\r\n                height: '100%'\r\n            });\r\n            entry.initProgress(progress);\r\n        }\r\n\r\n        this.canvases.push(entry);\r\n    }\r\n\r\n    /**\r\n     * Pop single canvas from the list\r\n     *\r\n     */\r\n    removeCanvas() {\r\n        let lastEntry = this.canvases[this.canvases.length - 1];\r\n\r\n        // wave\r\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\r\n        }\r\n\r\n        // cleanup\r\n        if (lastEntry) {\r\n            lastEntry.destroy();\r\n            lastEntry = null;\r\n        }\r\n\r\n        this.canvases.pop();\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions of a canvas element\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(entry, width, height) {\r\n        const elementWidth = Math.round(width / this.params.pixelRatio);\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n\r\n        // update canvas dimensions\r\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\r\n\r\n        // style element\r\n        this.style(this.progressWave, { display: 'block' });\r\n    }\r\n\r\n    /**\r\n     * Clear the whole multi-canvas\r\n     */\r\n    clearWave() {\r\n        util.frame(() => {\r\n            this.canvases.forEach(entry => entry.clearWave());\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0. Must be an integer.\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\r\n                // if drawBars was called within ws.empty we don't pass a start and\r\n                // don't want anything to happen\r\n                if (start === undefined) {\r\n                    return;\r\n                }\r\n                // Skip every other value if there are negatives.\r\n                const peakIndexScale = hasMinVals ? 2 : 1;\r\n                const length = peaks.length / peakIndexScale;\r\n                const bar = this.params.barWidth * this.params.pixelRatio;\r\n                const gap =\r\n                    this.params.barGap === null\r\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\r\n                        : Math.max(\r\n                            this.params.pixelRatio,\r\n                            this.params.barGap * this.params.pixelRatio\r\n                        );\r\n                const step = bar + gap;\r\n\r\n                const scale = length / this.width;\r\n                const first = start;\r\n                const last = end;\r\n                let i = first;\r\n\r\n                for (i; i < last; i += step) {\r\n                    const peak =\r\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\r\n                    let h = Math.round((peak / absmax) * halfH);\r\n\r\n                    /* in case of silences, allow the user to specify that we\r\n                     * always draw *something* (normally a 1px high bar) */\r\n                    if (h == 0 && this.params.barMinHeight) {\r\n                        h = this.params.barMinHeight;\r\n                    }\r\n\r\n                    this.fillRect(\r\n                        i + this.halfPixel,\r\n                        halfH - h + offsetY,\r\n                        bar + this.halfPixel,\r\n                        h * 2,\r\n                        this.barRadius,\r\n                        ch\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered (If this isn't set only a flat line is rendered)\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\r\n                if (!hasMinVals) {\r\n                    const reflectedPeaks = [];\r\n                    const len = peaks.length;\r\n                    let i = 0;\r\n                    for (i; i < len; i++) {\r\n                        reflectedPeaks[2 * i] = peaks[i];\r\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\r\n                    }\r\n                    peaks = reflectedPeaks;\r\n                }\r\n\r\n                // if drawWave was called within ws.empty we don't pass a start and\r\n                // end and simply want a flat line\r\n                if (start !== undefined) {\r\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\r\n                }\r\n\r\n                // always draw a median line\r\n                this.fillRect(\r\n                    0,\r\n                    halfH + offsetY - this.halfPixel,\r\n                    this.width,\r\n                    this.halfPixel,\r\n                    this.barRadius,\r\n                    channelIndex\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Tell the canvas entries to render their portion of the waveform\r\n     *\r\n     * @param {number[]} peaks Peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     * @param {channelIndex} channelIndex The channel index of the line drawn\r\n     */\r\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\r\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\r\n        this.canvases.forEach((entry, i) => {\r\n            this.setFillStyles(entry, waveColor, progressColor);\r\n            this.applyCanvasTransforms(entry, this.params.vertical);\r\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle on the multi-canvas\r\n     *\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\r\n     */\r\n    fillRect(x, y, width, height, radius, channelIndex) {\r\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\r\n        const endCanvas = Math.min(\r\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\r\n            this.canvases.length\r\n        );\r\n        let i = startCanvas;\r\n        for (i; i < endCanvas; i++) {\r\n            const entry = this.canvases[i];\r\n            const leftOffset = i * this.maxCanvasWidth;\r\n\r\n            const intersection = {\r\n                x1: Math.max(x, i * this.maxCanvasWidth),\r\n                y1: y,\r\n                x2: Math.min(\r\n                    x + width,\r\n                    i * this.maxCanvasWidth + entry.wave.width\r\n                ),\r\n                y2: y + height\r\n            };\r\n\r\n            if (intersection.x1 < intersection.x2) {\r\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\r\n                this.setFillStyles(entry, waveColor, progressColor);\r\n                this.applyCanvasTransforms(entry, this.params.vertical);\r\n\r\n                entry.fillRects(\r\n                    intersection.x1 - leftOffset,\r\n                    intersection.y1,\r\n                    intersection.x2 - intersection.x1,\r\n                    intersection.y2 - intersection.y1,\r\n                    radius\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether to hide the channel from being drawn based on params.\r\n     *\r\n     * @param {number} channelIndex The index of the current channel.\r\n     * @returns {bool} True to hide the channel, false to draw.\r\n     */\r\n    hideChannel(channelIndex) {\r\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\r\n    }\r\n\r\n    /**\r\n     * Performs preparation tasks and calculations which are shared by `drawBars`\r\n     * and `drawWave`\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\r\n     * split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered. If this isn't set only a flat line is rendered\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @param {function} fn The render function to call, e.g. `drawWave`\r\n     * @param {number} drawIndex The index of the current channel after filtering.\r\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\r\n     * @returns {void}\r\n     */\r\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\r\n        return util.frame(() => {\r\n            // Split channels and call this function with the channelIndex set\r\n            if (peaks[0] instanceof Array) {\r\n                const channels = peaks;\r\n\r\n                if (this.params.splitChannels) {\r\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\r\n                    if (!this.params.splitChannelsOptions.overlay) {\r\n                        this.setHeight(\r\n                            Math.max(filteredChannels.length, 1) *\r\n                                this.params.height *\r\n                                this.params.pixelRatio\r\n                        );\r\n                    }\r\n\r\n                    let overallAbsMax;\r\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\r\n                        // calculate maximum peak across channels to use for normalization\r\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\r\n                    }\r\n\r\n\r\n                    return channels.forEach((channelPeaks, i) =>\r\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\r\n                    );\r\n                }\r\n                peaks = channels[0];\r\n            }\r\n\r\n            // Return and do not draw channel peaks if hidden.\r\n            if (this.hideChannel(channelIndex)) {\r\n                return;\r\n            }\r\n\r\n            // calculate maximum modulation value, either from the barHeight\r\n            // parameter or if normalize=true from the largest value in the peak\r\n            // set\r\n            let absmax = 1 / this.params.barHeight;\r\n            if (this.params.normalize) {\r\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\r\n            }\r\n\r\n            // Bar wave draws the bottom only as a reflection of the top,\r\n            // so we don't need negative values\r\n            const hasMinVals = [].some.call(peaks, val => val < 0);\r\n            const height = this.params.height * this.params.pixelRatio;\r\n            const halfH = height / 2;\r\n\r\n            let offsetY = height * drawIndex || 0;\r\n\r\n            // Override offsetY if overlay is true\r\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\r\n                offsetY = 0;\r\n            }\r\n\r\n            return fn({\r\n                absmax: absmax,\r\n                hasMinVals: hasMinVals,\r\n                height: height,\r\n                offsetY: offsetY,\r\n                halfH: halfH,\r\n                peaks: peaks,\r\n                channelIndex: channelIndex\r\n            });\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for a certain entry (wave and progress)\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {string} waveColor Wave color to draw this entry\r\n     * @param {string} progressColor Progress color to draw this entry\r\n     */\r\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\r\n        entry.setFillStyles(waveColor, progressColor);\r\n    }\r\n\r\n    /**\r\n     * Set the canvas transforms for a certain entry (wave and progress)\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {boolean} vertical Whether to render the waveform vertically\r\n     */\r\n    applyCanvasTransforms(entry, vertical = false) {\r\n        entry.applyCanvasTransforms(vertical);\r\n    }\r\n\r\n    /**\r\n     * Return image data of the multi-canvas\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise`.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\r\n     * `type` this returns a single data URL or an array of data URLs,\r\n     * one for each canvas. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with an array of `Blob` instances, one for each\r\n     * canvas.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return Promise.all(\r\n                this.canvases.map(entry => {\r\n                    return entry.getImage(format, quality, type);\r\n                })\r\n            );\r\n        } else if (type === 'dataURL') {\r\n            let images = this.canvases.map(entry =>\r\n                entry.getImage(format, quality, type)\r\n            );\r\n            return images.length > 1 ? images : images[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @param {number} position X-offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {\r\n        this.style(this.progressWave, { width: position + 'px' });\r\n    }\r\n}\r\n","import MediaElement from './mediaelement';\r\n\r\n/**\r\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\r\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\r\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\r\n * of the webaudio API.\r\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\r\n *\r\n * @since 3.2.0\r\n */\r\nexport default class MediaElementWebAudio extends MediaElement {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n        /** @private */\r\n        this.sourceMediaElement = null;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n    }\r\n    /**\r\n     * Private method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @private\r\n     */\r\n    _load(media, peaks, preload) {\r\n        super._load(media, peaks, preload);\r\n        this.createMediaElementSource(media);\r\n    }\r\n\r\n    /**\r\n     * Create MediaElementSource node\r\n     *\r\n     * @since 3.2.0\r\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\r\n     */\r\n    createMediaElementSource(mediaElement) {\r\n        this.sourceMediaElement = this.ac.createMediaElementSource(\r\n            mediaElement\r\n        );\r\n        this.sourceMediaElement.connect(this.analyser);\r\n    }\r\n\r\n    play(start, end) {\r\n        this.resumeAudioContext();\r\n        return super.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this.destroyWebAudio();\r\n    }\r\n}\r\n","import WebAudio from './webaudio';\r\nimport * as util from './util';\r\n\r\n/**\r\n * MediaElement backend\r\n */\r\nexport default class MediaElement extends WebAudio {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n\r\n        /**\r\n         * Initially a dummy media element to catch errors. Once `_load` is\r\n         * called, this will contain the actual `HTMLMediaElement`.\r\n         * @private\r\n         */\r\n        this.media = {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            paused: true,\r\n            playbackRate: 1,\r\n            play() {},\r\n            pause() {},\r\n            volume: 0\r\n        };\r\n\r\n        /** @private */\r\n        this.mediaType = params.mediaType.toLowerCase();\r\n        /** @private */\r\n        this.elementPosition = params.elementPosition;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** @private */\r\n        this.volume = 1;\r\n        /** @private */\r\n        this.isMuted = false;\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.onPlayEnd = null;\r\n        /** @private */\r\n        this.mediaListeners = {};\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n    }\r\n\r\n    /**\r\n     * Attach event listeners to media element.\r\n     */\r\n    _setupMediaListeners() {\r\n        this.mediaListeners.error = () => {\r\n            this.fireEvent('error', 'Error loading media element');\r\n        };\r\n        this.mediaListeners.canplay = () => {\r\n            this.fireEvent('canplay');\r\n        };\r\n        this.mediaListeners.ended = () => {\r\n            this.fireEvent('finish');\r\n        };\r\n        // listen to and relay play, pause and seeked events to enable\r\n        // playback control from the external media element\r\n        this.mediaListeners.play = () => {\r\n            this.fireEvent('play');\r\n        };\r\n        this.mediaListeners.pause = () => {\r\n            this.fireEvent('pause');\r\n        };\r\n        this.mediaListeners.seeked = event => {\r\n            this.fireEvent('seek');\r\n        };\r\n        this.mediaListeners.volumechange = event => {\r\n            this.isMuted = this.media.muted;\r\n            if (this.isMuted) {\r\n                this.volume = 0;\r\n            } else {\r\n                this.volume = this.media.volume;\r\n            }\r\n            this.fireEvent('volume');\r\n        };\r\n\r\n        // reset event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            this.media.addEventListener(id, this.mediaListeners[id]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a timer to provide a more precise `audioprocess` event.\r\n     */\r\n    createTimer() {\r\n        const onAudioProcess = () => {\r\n            if (this.isPaused()) {\r\n                return;\r\n            }\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n\r\n            // Call again in the next frame\r\n            util.frame(onAudioProcess)();\r\n        };\r\n\r\n        this.on('play', onAudioProcess);\r\n\r\n        // Update the progress one more time to prevent it from being stuck in\r\n        // case of lower framerates\r\n        this.on('pause', () => {\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create media element with url as its source,\r\n     * and append to container element.\r\n     *\r\n     * @param {string} url Path to media file\r\n     * @param {HTMLElement} container HTML element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `url` argument is not a valid media\r\n     * element.\r\n     */\r\n    load(url, container, peaks, preload) {\r\n        const media = document.createElement(this.mediaType);\r\n        media.controls = this.params.mediaControls;\r\n        media.autoplay = this.params.autoplay || false;\r\n        media.preload = preload == null ? 'auto' : preload;\r\n        media.src = url;\r\n        media.style.width = '100%';\r\n\r\n        const prevMedia = container.querySelector(this.mediaType);\r\n        if (prevMedia) {\r\n            container.removeChild(prevMedia);\r\n        }\r\n        container.appendChild(media);\r\n\r\n        this._load(media, peaks, preload);\r\n    }\r\n\r\n    /**\r\n     * Load existing media element.\r\n     *\r\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     */\r\n    loadElt(elt, peaks) {\r\n        elt.controls = this.params.mediaControls;\r\n        elt.autoplay = this.params.autoplay || false;\r\n\r\n        this._load(elt, peaks, elt.preload);\r\n    }\r\n\r\n    /**\r\n     * Method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `media` argument is not a valid media\r\n     * element.\r\n     * @private\r\n     */\r\n    _load(media, peaks, preload) {\r\n        // verify media element is valid\r\n        if (\r\n            !(media instanceof HTMLMediaElement) ||\r\n            typeof media.addEventListener === 'undefined'\r\n        ) {\r\n            throw new Error('media parameter is not a valid media element');\r\n        }\r\n\r\n        // load must be called manually on iOS, otherwise peaks won't draw\r\n        // until a user interaction triggers load --> 'ready' event\r\n        //\r\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\r\n        // as this almost always triggers some browser fetch of the media.\r\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\r\n            // Resets the media element and restarts the media resource. Any\r\n            // pending events are discarded. How much media data is fetched is\r\n            // still affected by the preload attribute.\r\n            media.load();\r\n        }\r\n\r\n        this.media = media;\r\n        this._setupMediaListeners();\r\n        this.peaks = peaks;\r\n        this.onPlayEnd = null;\r\n        this.buffer = null;\r\n        this.isMuted = media.muted;\r\n        this.setPlaybackRate(this.playbackRate);\r\n        this.setVolume(this.volume);\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Media paused or not\r\n     */\r\n    isPaused() {\r\n        return !this.media || this.media.paused;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        let duration = (this.buffer || this.media).duration;\r\n        if (duration >= Infinity) {\r\n            // streaming audio\r\n            duration = this.media.seekable.end(0);\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} Current time\r\n     */\r\n    getCurrentTime() {\r\n        return this.media && this.media.currentTime;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Current position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.getCurrentTime() / this.getDuration() || 0;\r\n    }\r\n\r\n    /**\r\n     * Get the audio source playback rate.\r\n     *\r\n     * @return {number} Playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate || this.media.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value Playback rate\r\n     */\r\n    setPlaybackRate(value) {\r\n        this.playbackRate = value || 1;\r\n        this.media.playbackRate = this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     */\r\n    seekTo(start) {\r\n        if (start != null) {\r\n            this.media.currentTime = start;\r\n        }\r\n        this.clearPlayEnd();\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop, relative to the beginning of a clip.\r\n     * @emits MediaElement#play\r\n     * @return {Promise} Result\r\n     */\r\n    play(start, end) {\r\n        this.seekTo(start);\r\n        const promise = this.media.play();\r\n        end && this.setPlayEnd(end);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     *\r\n     * @emits MediaElement#pause\r\n     * @return {Promise} Result\r\n     */\r\n    pause() {\r\n        let promise;\r\n\r\n        if (this.media) {\r\n            promise = this.media.pause();\r\n        }\r\n        this.clearPlayEnd();\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Set the play end\r\n     *\r\n     * @param {number} end Where to end\r\n     */\r\n    setPlayEnd(end) {\r\n        this.clearPlayEnd();\r\n\r\n        this._onPlayEnd = time => {\r\n            if (time >= end) {\r\n                this.pause();\r\n                this.seekTo(end);\r\n            }\r\n        };\r\n        this.on('audioprocess', this._onPlayEnd);\r\n    }\r\n\r\n    /** @private */\r\n    clearPlayEnd() {\r\n        if (this._onPlayEnd) {\r\n            this.un('audioprocess', this._onPlayEnd);\r\n            this._onPlayEnd = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into\r\n     * <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\r\n     * arrays of peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.buffer) {\r\n            return super.getPeaks(length, first, last);\r\n        }\r\n        return this.peaks || [];\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            if (!this.media.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            return this.media.setSinkId(deviceId);\r\n        }\r\n\r\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.volume;\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.volume = value;\r\n        // no need to change when it's already at that volume\r\n        if (this.media.volume !== this.volume) {\r\n            this.media.volume = this.volume;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @since 4.0.0\r\n     * @param {boolean} muted Specify `true` to mute audio.\r\n     */\r\n    setMute(muted) {\r\n        // This causes a volume change to be emitted too through the\r\n        // volumechange event listener.\r\n        this.isMuted = this.media.muted = muted;\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        this.pause();\r\n        this.unAll();\r\n        this.destroyed = true;\r\n\r\n        // cleanup media event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            if (this.media) {\r\n                this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            }\r\n        });\r\n\r\n        if (\r\n            this.params.removeMediaElementOnDestroy &&\r\n            this.media &&\r\n            this.media.parentNode\r\n        ) {\r\n            this.media.parentNode.removeChild(this.media);\r\n        }\r\n\r\n        this.media = null;\r\n    }\r\n}\r\n","/**\r\n * Caches the decoded peaks data to improve rendering speed for large audio\r\n *\r\n * Is used if the option parameter `partialRender` is set to `true`\r\n */\r\nexport default class PeakCache {\r\n    /**\r\n     * Instantiate cache\r\n     */\r\n    constructor() {\r\n        this.clearPeakCache();\r\n    }\r\n\r\n    /**\r\n     * Empty the cache\r\n     */\r\n    clearPeakCache() {\r\n        /**\r\n         * Flat array with entries that are always in pairs to mark the\r\n         * beginning and end of each subrange.  This is a convenience so we can\r\n         * iterate over the pairs for easy set difference operations.\r\n         * @private\r\n         */\r\n        this.peakCacheRanges = [];\r\n        /**\r\n         * Length of the entire cachable region, used for resetting the cache\r\n         * when this changes (zoom events, for instance).\r\n         * @private\r\n         */\r\n        this.peakCacheLength = -1;\r\n    }\r\n\r\n    /**\r\n     * Add a range of peaks to the cache\r\n     *\r\n     * @param {number} length The length of the range\r\n     * @param {number} start The x offset of the start of the range\r\n     * @param {number} end The x offset of the end of the range\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    addRangeToPeakCache(length, start, end) {\r\n        if (length != this.peakCacheLength) {\r\n            this.clearPeakCache();\r\n            this.peakCacheLength = length;\r\n        }\r\n\r\n        // Return ranges that weren't in the cache before the call.\r\n        let uncachedRanges = [];\r\n        let i = 0;\r\n        // Skip ranges before the current start.\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] < start\r\n        ) {\r\n            i++;\r\n        }\r\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\r\n        // |start| falls between an existing range, and the uncached region\r\n        // starts when we encounter the next node in |peakCacheRanges| or\r\n        // |end|, whichever comes first.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(start);\r\n        }\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] <= end\r\n        ) {\r\n            uncachedRanges.push(this.peakCacheRanges[i]);\r\n            i++;\r\n        }\r\n        // If |i| is even, |end| is after all existing ranges.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(end);\r\n        }\r\n\r\n        // Filter out the 0-length ranges.\r\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\r\n            if (pos == 0) {\r\n                return item != arr[pos + 1];\r\n            } else if (pos == arr.length - 1) {\r\n                return item != arr[pos - 1];\r\n            }\r\n            return item != arr[pos - 1] && item != arr[pos + 1];\r\n        });\r\n\r\n        // Merge the two ranges together, uncachedRanges will either contain\r\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\r\n        // duplicates are detected, remove both and extend the range.\r\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\r\n        this.peakCacheRanges = this.peakCacheRanges\r\n            .sort((a, b) => a - b)\r\n            .filter((item, pos, arr) => {\r\n                if (pos == 0) {\r\n                    return item != arr[pos + 1];\r\n                } else if (pos == arr.length - 1) {\r\n                    return item != arr[pos - 1];\r\n                }\r\n                return item != arr[pos - 1] && item != arr[pos + 1];\r\n            });\r\n\r\n        // Push the uncached ranges into an array of arrays for ease of\r\n        // iteration in the functions that call this.\r\n        const uncachedRangePairs = [];\r\n        for (i = 0; i < uncachedRanges.length; i += 2) {\r\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\r\n        }\r\n\r\n        return uncachedRangePairs;\r\n    }\r\n\r\n    /**\r\n     * For testing\r\n     *\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    getCacheRanges() {\r\n        const peakCacheRangePairs = [];\r\n        let i;\r\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\r\n            peakCacheRangePairs.push([\r\n                this.peakCacheRanges[i],\r\n                this.peakCacheRanges[i + 1]\r\n            ]);\r\n        }\r\n        return peakCacheRangePairs;\r\n    }\r\n}\r\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\r\n * Returns a number limited to the given range.\r\n *\r\n * @param {number} val The number to be limited to a range\r\n * @param {number} min The lower boundary of the limit range\r\n * @param {number} max The upper boundary of the limit range\r\n * @returns {number} A number in the range [min, max]\r\n */\r\nexport default function clamp(val, min, max) {\r\n    return Math.min(Math.max(min, val), max);\r\n}\r\n","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport Observer from './observer';\r\n\r\nclass ProgressHandler {\r\n    /**\r\n     * Instantiate ProgressHandler\r\n     *\r\n     * @param {Observer} instance The `fetchFile` observer instance.\r\n     * @param {Number} contentLength Content length.\r\n     * @param {Response} response Response object.\r\n     */\r\n    constructor(instance, contentLength, response) {\r\n        this.instance = instance;\r\n        this.instance._reader = response.body.getReader();\r\n\r\n        this.total = parseInt(contentLength, 10);\r\n        this.loaded = 0;\r\n    }\r\n\r\n    /**\r\n     * A method that is called once, immediately after the `ReadableStream``\r\n     * is constructed.\r\n     *\r\n     * @param {ReadableStreamDefaultController} controller Controller instance\r\n     *     used to control the stream.\r\n     */\r\n    start(controller) {\r\n        const read = () => {\r\n            // instance._reader.read() returns a promise that resolves\r\n            // when a value has been received\r\n            this.instance._reader\r\n                .read()\r\n                .then(({ done, value }) => {\r\n                    // result objects contain two properties:\r\n                    // done  - true if the stream has already given you all its data.\r\n                    // value - some data. Always undefined when done is true.\r\n                    if (done) {\r\n                        // ensure onProgress called when content-length=0\r\n                        if (this.total === 0) {\r\n                            this.instance.onProgress.call(this.instance, {\r\n                                loaded: this.loaded,\r\n                                total: this.total,\r\n                                lengthComputable: false\r\n                            });\r\n                        }\r\n                        // no more data needs to be consumed, close the stream\r\n                        controller.close();\r\n                        return;\r\n                    }\r\n\r\n                    this.loaded += value.byteLength;\r\n                    this.instance.onProgress.call(this.instance, {\r\n                        loaded: this.loaded,\r\n                        total: this.total,\r\n                        lengthComputable: !(this.total === 0)\r\n                    });\r\n                    // enqueue the next data chunk into our target stream\r\n                    controller.enqueue(value);\r\n                    read();\r\n                })\r\n                .catch(error => {\r\n                    controller.error(error);\r\n                });\r\n        };\r\n\r\n        read();\r\n    }\r\n}\r\n\r\n/**\r\n * Load a file using `fetch`.\r\n *\r\n * @param {object} options Request options to use. See example below.\r\n * @returns {Observer} Observer instance\r\n * @example\r\n * // default options\r\n * let options = {\r\n *     url: undefined,\r\n *     method: 'GET',\r\n *     mode: 'cors',\r\n *     credentials: 'same-origin',\r\n *     cache: 'default',\r\n *     responseType: 'json',\r\n *     requestHeaders: [],\r\n *     redirect: 'follow',\r\n *     referrer: 'client'\r\n * };\r\n *\r\n * // override some options\r\n * options.url = '../media/demo.wav';\r\n\r\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\r\n * options.responseType = 'arraybuffer';\r\n *\r\n * // make fetch call\r\n * let request = util.fetchFile(options);\r\n *\r\n * // listen for events\r\n * request.on('progress', e => {\r\n *     console.log('progress', e);\r\n * });\r\n *\r\n * request.on('success', data => {\r\n *     console.log('success!', data);\r\n * });\r\n *\r\n * request.on('error', e => {\r\n *     console.warn('fetchFile error: ', e);\r\n * });\r\n */\r\nexport default function fetchFile(options) {\r\n    if (!options) {\r\n        throw new Error('fetch options missing');\r\n    } else if (!options.url) {\r\n        throw new Error('fetch url missing');\r\n    }\r\n    const instance = new Observer();\r\n    const fetchHeaders = new Headers();\r\n    const fetchRequest = new Request(options.url);\r\n\r\n    // add ability to abort\r\n    instance.controller = new AbortController();\r\n\r\n    // check if headers have to be added\r\n    if (options && options.requestHeaders) {\r\n        // add custom request headers\r\n        options.requestHeaders.forEach(header => {\r\n            fetchHeaders.append(header.key, header.value);\r\n        });\r\n    }\r\n\r\n    // parse fetch options\r\n    const responseType = options.responseType || 'json';\r\n    const fetchOptions = {\r\n        method: options.method || 'GET',\r\n        headers: fetchHeaders,\r\n        mode: options.mode || 'cors',\r\n        credentials: options.credentials || 'same-origin',\r\n        cache: options.cache || 'default',\r\n        redirect: options.redirect || 'follow',\r\n        referrer: options.referrer || 'client',\r\n        signal: instance.controller.signal\r\n    };\r\n\r\n    fetch(fetchRequest, fetchOptions)\r\n        .then(response => {\r\n            // store response reference\r\n            instance.response = response;\r\n\r\n            let progressAvailable = true;\r\n            if (!response.body) {\r\n                // ReadableStream is not yet supported in this browser\r\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\r\n                progressAvailable = false;\r\n            }\r\n\r\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\r\n            const contentLength = response.headers.get('content-length');\r\n            if (contentLength === null) {\r\n                // Content-Length server response header missing.\r\n                // Don't evaluate download progress if we can't compare against a total size\r\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\r\n                progressAvailable = false;\r\n            }\r\n\r\n            if (!progressAvailable) {\r\n                // not able to check download progress so skip it\r\n                return response;\r\n            }\r\n\r\n            // fire progress event when during load\r\n            instance.onProgress = e => {\r\n                instance.fireEvent('progress', e);\r\n            };\r\n\r\n            return new Response(\r\n                new ReadableStream(\r\n                    new ProgressHandler(instance, contentLength, response)\r\n                ),\r\n                fetchOptions\r\n            );\r\n        })\r\n        .then(response => {\r\n            let errMsg;\r\n            if (response.ok) {\r\n                switch (responseType) {\r\n                    case 'arraybuffer':\r\n                        return response.arrayBuffer();\r\n\r\n                    case 'json':\r\n                        return response.json();\r\n\r\n                    case 'blob':\r\n                        return response.blob();\r\n\r\n                    case 'text':\r\n                        return response.text();\r\n\r\n                    default:\r\n                        errMsg = 'Unknown responseType: ' + responseType;\r\n                        break;\r\n                }\r\n            }\r\n            if (!errMsg) {\r\n                errMsg = 'HTTP error status: ' + response.status;\r\n            }\r\n            throw new Error(errMsg);\r\n        })\r\n        .then(response => {\r\n            instance.fireEvent('success', response);\r\n        })\r\n        .catch(error => {\r\n            instance.fireEvent('error', error);\r\n        });\r\n\r\n    // return the fetch request\r\n    instance.fetchRequest = fetchRequest;\r\n    return instance;\r\n}\r\n","import reqAnimationFrame from './request-animation-frame';\r\n\r\n/**\r\n * Create a function which will be called at the next requestAnimationFrame\r\n * cycle\r\n *\r\n * @param {function} func The function to call\r\n *\r\n * @return {func} The function wrapped within a requestAnimationFrame\r\n */\r\nexport default function frame(func) {\r\n    return (...args) => reqAnimationFrame(() => func(...args));\r\n}\r\n","/**\r\n * Get a random prefixed ID\r\n *\r\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\r\n * @returns {String} Random prefixed ID\r\n * @example\r\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\r\n *\r\n * let prefix = 'foo-';\r\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\r\n */\r\nexport default function getId(prefix) {\r\n    if (prefix === undefined) {\r\n        prefix = 'wavesurfer_';\r\n    }\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(32)\r\n            .substring(2)\r\n    );\r\n}\r\n","export { default as getId } from './get-id';\r\nexport { default as max } from './max';\r\nexport { default as min } from './min';\r\nexport { default as absMax } from './absMax';\r\nexport { default as Observer } from './observer';\r\nexport { default as style } from './style';\r\nexport { default as requestAnimationFrame } from './request-animation-frame';\r\nexport { default as frame } from './frame';\r\nexport { default as debounce } from 'debounce';\r\nexport { default as preventClick } from './prevent-click';\r\nexport { default as fetchFile } from './fetch';\r\nexport { default as clamp } from './clamp';\r\nexport { default as withOrientation } from './orientation';\r\nexport { default as ignoreSilenceMode } from './silence-mode';\r\n","/**\r\n * Get the largest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([1, 2, 3])); // logs 3\r\n */\r\nexport default function max(values) {\r\n    let largest = -Infinity;\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] > largest) {\r\n            largest = values[i];\r\n        }\r\n    });\r\n    return largest;\r\n}\r\n","/**\r\n * Get the smallest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Smallest number found\r\n * @example console.log(min([1, 2, 3])); // logs 1\r\n */\r\nexport default function min(values) {\r\n    let smallest = Number(Infinity);\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] < smallest) {\r\n            smallest = values[i];\r\n        }\r\n    });\r\n    return smallest;\r\n}\r\n","/**\r\n * @typedef {Object} ListenerDescriptor\r\n * @property {string} name The name of the event\r\n * @property {function} callback The callback\r\n * @property {function} un The function to call to remove the listener\r\n */\r\n\r\n/**\r\n * Observer class\r\n */\r\nexport default class Observer {\r\n    /**\r\n     * Instantiate Observer\r\n     */\r\n    constructor() {\r\n        /**\r\n         * @private\r\n         * @todo Initialise the handlers here already and remove the conditional\r\n         * assignment in `on()`\r\n         */\r\n        this._disabledEventEmissions = [];\r\n        this.handlers = null;\r\n    }\r\n    /**\r\n     * Attach a handler function for an event.\r\n     *\r\n     * @param {string} event Name of the event to listen to\r\n     * @param {function} fn The callback to trigger when the event is fired\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    on(event, fn) {\r\n        if (!this.handlers) {\r\n            this.handlers = {};\r\n        }\r\n\r\n        let handlers = this.handlers[event];\r\n        if (!handlers) {\r\n            handlers = this.handlers[event] = [];\r\n        }\r\n        handlers.push(fn);\r\n\r\n        // Return an event descriptor\r\n        return {\r\n            name: event,\r\n            callback: fn,\r\n            un: (e, fn) => this.un(e, fn)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove an event handler.\r\n     *\r\n     * @param {string} event Name of the event the listener that should be\r\n     * removed listens to\r\n     * @param {function} fn The callback that should be removed\r\n     */\r\n    un(event, fn) {\r\n        if (!this.handlers) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        let i;\r\n        if (handlers) {\r\n            if (fn) {\r\n                for (i = handlers.length - 1; i >= 0; i--) {\r\n                    if (handlers[i] == fn) {\r\n                        handlers.splice(i, 1);\r\n                    }\r\n                }\r\n            } else {\r\n                handlers.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all event handlers.\r\n     */\r\n    unAll() {\r\n        this.handlers = null;\r\n    }\r\n\r\n    /**\r\n     * Attach a handler to an event. The handler is executed at most once per\r\n     * event type.\r\n     *\r\n     * @param {string} event The event to listen to\r\n     * @param {function} handler The callback that is only to be called once\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    once(event, handler) {\r\n        const fn = (...args) => {\r\n            /*  eslint-disable no-invalid-this */\r\n            handler.apply(this, args);\r\n            /*  eslint-enable no-invalid-this */\r\n            setTimeout(() => {\r\n                this.un(event, fn);\r\n            }, 0);\r\n        };\r\n        return this.on(event, fn);\r\n    }\r\n\r\n    /**\r\n     * Disable firing a list of events by name. When specified, event handlers for any event type\r\n     * passed in here will not be called.\r\n     *\r\n     * @since 4.0.0\r\n     * @param {string[]} eventNames an array of event names to disable emissions for\r\n     * @example\r\n     * // disable seek and interaction events\r\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\r\n     */\r\n    setDisabledEventEmissions(eventNames) {\r\n        this._disabledEventEmissions = eventNames;\r\n    }\r\n\r\n    /**\r\n     * plugins borrow part of this class without calling the constructor,\r\n     * so we have to be careful about _disabledEventEmissions\r\n     */\r\n\r\n    _isDisabledEventEmission(event) {\r\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\r\n    }\r\n\r\n    /**\r\n     * Manually fire an event\r\n     *\r\n     * @param {string} event The event to fire manually\r\n     * @param {...any} args The arguments with which to call the listeners\r\n     */\r\n    fireEvent(event, ...args) {\r\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        handlers &&\r\n            handlers.forEach(fn => {\r\n                fn(...args);\r\n            });\r\n    }\r\n}\r\n","const verticalPropMap = {\r\n    width: 'height',\r\n    height: 'width',\r\n\r\n    overflowX: 'overflowY',\r\n    overflowY: 'overflowX',\r\n\r\n    clientWidth: 'clientHeight',\r\n    clientHeight: 'clientWidth',\r\n\r\n    clientX: 'clientY',\r\n    clientY: 'clientX',\r\n\r\n    scrollWidth: 'scrollHeight',\r\n    scrollLeft: 'scrollTop',\r\n\r\n    offsetLeft: 'offsetTop',\r\n    offsetTop: 'offsetLeft',\r\n    offsetHeight: 'offsetWidth',\r\n    offsetWidth: 'offsetHeight',\r\n\r\n    left: 'top',\r\n    right: 'bottom',\r\n    top: 'left',\r\n    bottom: 'right',\r\n\r\n    borderRightStyle: 'borderBottomStyle',\r\n    borderRightWidth: 'borderBottomWidth',\r\n    borderRightColor: 'borderBottomColor'\r\n};\r\n\r\n/**\r\n * Convert a horizontally-oriented property name to a vertical one.\r\n *\r\n * @param {string} prop A property name\r\n * @param {bool} vertical Whether the element is oriented vertically\r\n * @returns {string} prop, converted appropriately\r\n */\r\nfunction mapProp(prop, vertical) {\r\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\r\n        return vertical ? verticalPropMap[prop] : prop;\r\n    } else {\r\n        return prop;\r\n    }\r\n}\r\n\r\nconst isProxy = Symbol(\"isProxy\");\r\n\r\n/**\r\n * Returns an appropriately oriented object based on vertical.\r\n * If vertical is true, attribute getting and setting will be mapped through\r\n * verticalPropMap, so that e.g. getting the object's .width will give its\r\n * .height instead.\r\n * Certain methods of an oriented object will return oriented objects as well.\r\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\r\n * and thus fail typechecks. Use domElement to get the actual element for this.\r\n *\r\n * @param {object} target The object to be wrapped and oriented\r\n * @param {bool} vertical Whether the element is oriented vertically\r\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\r\n * @since 5.0.0\r\n */\r\nexport default function withOrientation(target, vertical) {\r\n    if (target[isProxy]) {\r\n        return target;\r\n    } else {\r\n        return new Proxy(\r\n            target, {\r\n                get: function(obj, prop, receiver) {\r\n                    if (prop === isProxy) {\r\n                        return true;\r\n                    } else if (prop === 'domElement') {\r\n                        return obj;\r\n                    } else if (prop === 'style') {\r\n                        return withOrientation(obj.style, vertical);\r\n                    } else if (prop === 'canvas') {\r\n                        return withOrientation(obj.canvas, vertical);\r\n                    } else if (prop === 'getBoundingClientRect') {\r\n                        return function(...args) {\r\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\r\n                        };\r\n                    } else if (prop === 'getContext') {\r\n                        return function(...args) {\r\n                            return withOrientation(obj.getContext(...args), vertical);\r\n                        };\r\n                    } else {\r\n                        let value = obj[mapProp(prop, vertical)];\r\n                        return typeof value == 'function' ? value.bind(obj) : value;\r\n                    }\r\n                },\r\n                set: function(obj, prop, value) {\r\n                    obj[mapProp(prop, vertical)] = value;\r\n                    return true;\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Stops propagation of click event and removes event listener\r\n *\r\n * @private\r\n * @param {object} event The click event\r\n */\r\nfunction preventClickHandler(event) {\r\n    event.stopPropagation();\r\n    document.body.removeEventListener('click', preventClickHandler, true);\r\n}\r\n\r\n/**\r\n * Starts listening for click event and prevent propagation\r\n *\r\n * @param {object} values Values\r\n */\r\nexport default function preventClick(values) {\r\n    document.body.addEventListener('click', preventClickHandler, true);\r\n}\r\n","/* eslint-disable valid-jsdoc */\r\n/**\r\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\r\n * `setTimeout` if the function is not found\r\n *\r\n * @return {function} Available `requestAnimationFrame` function for the browser\r\n */\r\nexport default (\r\n    window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    ((callback, element) => setTimeout(callback, 1000 / 60))\r\n).bind(window);\r\n","/**\r\n * Ignores device silence mode when using the `WebAudio` backend.\r\n *\r\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\r\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\r\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\r\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\r\n * when muting the device ringer.\r\n *\r\n * @since 5.2.0\r\n */\r\nexport default function ignoreSilenceMode() {\r\n    // Set the src to a short bit of url encoded as a silent mp3\r\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\r\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\r\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\r\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\r\n\r\n    // disable iOS Airplay (setting the attribute in js doesn't work)\r\n    let tmp = document.createElement(\"div\");\r\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\r\n\r\n    let audioSilentMode = tmp.children.item(0);\r\n    audioSilentMode.src = audioData;\r\n    audioSilentMode.preload = \"auto\";\r\n    audioSilentMode.type = \"audio/mpeg\";\r\n    audioSilentMode.disableRemotePlayback = true;\r\n\r\n    // play\r\n    audioSilentMode.play();\r\n\r\n    // cleanup\r\n    audioSilentMode.remove();\r\n    tmp.remove();\r\n}\r\n","/**\r\n * Apply a map of styles to an element\r\n *\r\n * @param {HTMLElement} el The element that the styles will be applied to\r\n * @param {Object} styles The map of propName: attribute, both are used as-is\r\n *\r\n * @return {HTMLElement} el\r\n */\r\nexport default function style(el, styles) {\r\n    Object.keys(styles).forEach(prop => {\r\n        if (el.style[prop] !== styles[prop]) {\r\n            el.style[prop] = styles[prop];\r\n        }\r\n    });\r\n    return el;\r\n}\r\n","import * as util from './util';\r\nimport MultiCanvas from './drawer.multicanvas';\r\nimport WebAudio from './webaudio';\r\nimport MediaElement from './mediaelement';\r\nimport PeakCache from './peakcache';\r\nimport MediaElementWebAudio from './mediaelement-webaudio';\r\n\r\n/*\r\n * This work is licensed under a BSD-3-Clause License.\r\n */\r\n\r\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\r\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\r\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\r\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\r\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\r\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\r\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\r\n\r\n/**\r\n * @typedef {Object} WavesurferParams\r\n * @property {AudioContext} audioContext=null Use your own previously\r\n * initialized AudioContext or leave blank.\r\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\r\n * slower.\r\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\r\n * initialized ScriptProcessorNode or leave blank.\r\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\r\n * waveform on current progress\r\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\r\n * waveform is centered\r\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\r\n * center waveform on current progress\r\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\r\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\r\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\r\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\r\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\r\n * also with audio with big duration. For example:\r\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\r\n *   wavesurfer.play();\r\n *   wavesurfer.setFilter(customFilter);\r\n * `\r\n * @property {string} backgroundColor=null Change background color of the\r\n * waveform container.\r\n * @property {number} barHeight=1 The height of the wave bars.\r\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\r\n * @property {number} barGap=null The optional spacing between bars of the wave,\r\n * if not provided will be calculated in legacy format.\r\n * @property {number} barWidth=null Draw the waveform using bars.\r\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\r\n * eliminating waveform gaps\r\n * @property {boolean} closeAudioContext=false Close and nullify all audio\r\n * contexts when the destroy method is called.\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the waveform should be drawn. This is the only required parameter.\r\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\r\n * the playhead position.\r\n * @property {number} cursorWidth=1 Measured in pixels.\r\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\r\n * attributes.\r\n * @property {number} duration=null Optional audio length so pre-rendered peaks\r\n * can be display immediately for example.\r\n * @property {boolean} fillParent=true Whether to fill the entire container or\r\n * draw only according to `minPxPerSec`.\r\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\r\n * when zooming to get a more detailed waveform.\r\n * @property {number} height=128 The height of the waveform. Measured in\r\n * pixels.\r\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\r\n * scrollbar when one would normally be shown.\r\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\r\n * when one would normally be shown by default.\r\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\r\n * when using the `WebAudio` backend.\r\n * @property {boolean} interact=true Whether the mouse interaction will be\r\n * enabled at initialization. You can switch this parameter at any time later\r\n * on.\r\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\r\n * looping of selected regions\r\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\r\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\r\n * even integer). If the waveform is longer than this value, additional canvases\r\n * will be used to render the waveform, which is useful for very large waveforms\r\n * that may be too wide for browsers to draw on a single canvas.\r\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * this enables the native controls for the media element\r\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * `'audio'|'video'` ('video' only for `MediaElement`)\r\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\r\n * audio.\r\n * @property {boolean} normalize=false If true, normalize by the maximum peak\r\n * instead of 1.0.\r\n * @property {boolean} partialRender=false Use the PeakCache to improve\r\n * rendering speed of large waveforms\r\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\r\n * calculate display\r\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\r\n * register during instantiation, they will be directly initialised unless they\r\n * are added with the `deferInit` property set to true.\r\n * @property {string} progressColor='#555' The fill color of the part of the\r\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\r\n * the progress wave is not rendered at all.\r\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\r\n * media element in the DOM when the player is destroyed. This is useful when\r\n * reusing an existing media element via the `loadMediaElement` method.\r\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\r\n * renderer.\r\n * @property {boolean|number} responsive=false If set to `true` resize the\r\n * waveform, when the window is resized. This is debounced with a `100ms`\r\n * timeout by default. If this parameter is a number it represents that timeout.\r\n * @property {boolean} rtl=false If set to `true`, renders waveform from\r\n * right-to-left.\r\n * @property {boolean} scrollParent=false Whether to scroll the container with a\r\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\r\n * (see fillParent).\r\n * @property {number} skipLength=2 Number of seconds to skip with the\r\n * skipForward() and skipBackward() methods.\r\n * @property {boolean} splitChannels=false Render with separate waveforms for\r\n * the channels of the audio\r\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\r\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\r\n * @property {string} waveColor='#999' The fill color of the waveform after the\r\n * cursor.\r\n * @property {object} xhr={} XHR options. For example:\r\n * `let xhr = {\r\n *     cache: 'default',\r\n *     mode: 'cors',\r\n *     method: 'GET',\r\n *     credentials: 'same-origin',\r\n *     redirect: 'follow',\r\n *     referrer: 'client',\r\n *     requestHeaders: [\r\n *         {\r\n *             key: 'Authorization',\r\n *             value: 'my-token'\r\n *         }\r\n *     ]\r\n * };`\r\n */\r\n\r\n/**\r\n * @typedef {Object} PluginDefinition\r\n * @desc The Object used to describe a plugin\r\n * @example wavesurfer.addPlugin(pluginDefinition);\r\n * @property {string} name The name of the plugin, the plugin instance will be\r\n * added as a property to the wavesurfer instance under this name\r\n * @property {?Object} staticProps The properties that should be added to the\r\n * wavesurfer instance as static properties\r\n * @property {?boolean} deferInit Don't initialise plugin\r\n * automatically\r\n * @property {Object} params={} The plugin parameters, they are the first parameter\r\n * passed to the plugin class constructor function\r\n * @property {PluginClass} instance The plugin instance factory, is called with\r\n * the dependency specified in extends. Returns the plugin class.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SplitChannelOptions\r\n * @desc parameters applied when splitChannels option is true\r\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\r\n * @property {object} channelColors={} object describing color for each channel. Example:\r\n * {\r\n *     0: {\r\n *         progressColor: 'green',\r\n *         waveColor: 'pink'\r\n *     },\r\n *     1: {\r\n *         progressColor: 'orange',\r\n *         waveColor: 'purple'\r\n *     }\r\n * }\r\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\r\n * @property {boolean} relativeNormalization=false determines whether\r\n * normalization is done per channel or maintains proportionality between\r\n * channels. Only applied when normalize and splitChannels are both true.\r\n * @since 4.3.0\r\n */\r\n\r\n/**\r\n * @interface PluginClass\r\n *\r\n * @desc This is the interface which is implemented by all plugin classes. Note\r\n * that this only turns into an observer after being passed through\r\n * `wavesurfer.addPlugin`.\r\n *\r\n * @extends {Observer}\r\n */\r\nclass PluginClass {\r\n    /**\r\n     * Plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * It returns a `PluginDefinition` object representing the plugin.\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     */\r\n    create(params) {}\r\n    /**\r\n     * Construct the plugin\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     * @param {Object} ws The wavesurfer instance\r\n     */\r\n    constructor(params, ws) {}\r\n    /**\r\n     * Initialise the plugin\r\n     *\r\n     * Start doing something. This is called by\r\n     * `wavesurfer.initPlugin(pluginName)`\r\n     */\r\n    init() {}\r\n    /**\r\n     * Destroy the plugin instance\r\n     *\r\n     * Stop doing something. This is called by\r\n     * `wavesurfer.destroyPlugin(pluginName)`\r\n     */\r\n    destroy() {}\r\n}\r\n\r\n/**\r\n * WaveSurfer core library class\r\n *\r\n * @extends {Observer}\r\n * @example\r\n * const params = {\r\n *   container: '#waveform',\r\n *   waveColor: 'violet',\r\n *   progressColor: 'purple'\r\n * };\r\n *\r\n * // initialise like this\r\n * const wavesurfer = WaveSurfer.create(params);\r\n *\r\n * // or like this ...\r\n * const wavesurfer = new WaveSurfer(params);\r\n * wavesurfer.init();\r\n *\r\n * // load audio file\r\n * wavesurfer.load('example/media/demo.wav');\r\n */\r\nexport default class WaveSurfer extends util.Observer {\r\n    /** @private */\r\n    defaultParams = {\r\n        audioContext: null,\r\n        audioScriptProcessor: null,\r\n        audioRate: 1,\r\n        autoCenter: true,\r\n        autoCenterRate: 5,\r\n        autoCenterImmediately: false,\r\n        backend: 'WebAudio',\r\n        backgroundColor: null,\r\n        barHeight: 1,\r\n        barRadius: 0,\r\n        barGap: null,\r\n        barMinHeight: null,\r\n        container: null,\r\n        cursorColor: '#333',\r\n        cursorWidth: 1,\r\n        dragSelection: true,\r\n        drawingContextAttributes: {\r\n            // Boolean that hints the user agent to reduce the latency\r\n            // by desynchronizing the canvas paint cycle from the event\r\n            // loop\r\n            desynchronized: false\r\n        },\r\n        duration: null,\r\n        fillParent: true,\r\n        forceDecode: false,\r\n        height: 128,\r\n        hideScrollbar: false,\r\n        hideCursor: false,\r\n        ignoreSilenceMode: false,\r\n        interact: true,\r\n        loopSelection: true,\r\n        maxCanvasWidth: 4000,\r\n        mediaContainer: null,\r\n        mediaControls: false,\r\n        mediaType: 'audio',\r\n        minPxPerSec: 20,\r\n        normalize: false,\r\n        partialRender: false,\r\n        pixelRatio:\r\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\r\n        plugins: [],\r\n        progressColor: '#555',\r\n        removeMediaElementOnDestroy: true,\r\n        renderer: MultiCanvas,\r\n        responsive: false,\r\n        rtl: false,\r\n        scrollParent: false,\r\n        skipLength: 2,\r\n        splitChannels: false,\r\n        splitChannelsOptions: {\r\n            overlay: false,\r\n            channelColors: {},\r\n            filterChannels: [],\r\n            relativeNormalization: false\r\n        },\r\n        vertical: false,\r\n        waveColor: '#999',\r\n        xhr: {}\r\n    };\r\n\r\n    /** @private */\r\n    backends = {\r\n        MediaElement,\r\n        WebAudio,\r\n        MediaElementWebAudio\r\n    };\r\n\r\n    /**\r\n     * Instantiate this class, call its `init` function and returns it\r\n     *\r\n     * @param {WavesurferParams} params The wavesurfer parameters\r\n     * @return {Object} WaveSurfer instance\r\n     * @example const wavesurfer = WaveSurfer.create(params);\r\n     */\r\n    static create(params) {\r\n        const wavesurfer = new WaveSurfer(params);\r\n        return wavesurfer.init();\r\n    }\r\n\r\n    /**\r\n     * The library version number is available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {String}\r\n     * @example\r\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\r\n     */\r\n    static VERSION = __VERSION__;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a prototype property to\r\n     * all instances\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * const wavesurfer = WaveSurfer.create(params);\r\n     * wavesurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    util = util;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    static util = util;\r\n\r\n    /**\r\n     * Initialise wavesurfer instance\r\n     *\r\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\r\n     * @example\r\n     * const wavesurfer = new WaveSurfer(params);\r\n     * @returns {this} Wavesurfer instance\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /**\r\n         * Extract relevant parameters (or defaults)\r\n         * @private\r\n         */\r\n        this.params = Object.assign({}, this.defaultParams, params);\r\n        this.params.splitChannelsOptions = Object.assign(\r\n            {},\r\n            this.defaultParams.splitChannelsOptions,\r\n            params.splitChannelsOptions\r\n        );\r\n        /** @private */\r\n        this.container =\r\n            'string' == typeof params.container\r\n                ? document.querySelector(this.params.container)\r\n                : this.params.container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('Container element not found');\r\n        }\r\n\r\n        if (this.params.mediaContainer == null) {\r\n            /** @private */\r\n            this.mediaContainer = this.container;\r\n        } else if (typeof this.params.mediaContainer == 'string') {\r\n            /** @private */\r\n            this.mediaContainer = document.querySelector(\r\n                this.params.mediaContainer\r\n            );\r\n        } else {\r\n            /** @private */\r\n            this.mediaContainer = this.params.mediaContainer;\r\n        }\r\n\r\n        if (!this.mediaContainer) {\r\n            throw new Error('Media Container element not found');\r\n        }\r\n\r\n        if (this.params.maxCanvasWidth <= 1) {\r\n            throw new Error('maxCanvasWidth must be greater than 1');\r\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\r\n            throw new Error('maxCanvasWidth must be an even number');\r\n        }\r\n\r\n        if (this.params.rtl === true) {\r\n            if (this.params.vertical === true) {\r\n                util.style(this.container, { transform: 'rotateX(180deg)' });\r\n            } else {\r\n                util.style(this.container, { transform: 'rotateY(180deg)' });\r\n            }\r\n        }\r\n\r\n        if (this.params.backgroundColor) {\r\n            this.setBackgroundColor(this.params.backgroundColor);\r\n        }\r\n\r\n        /**\r\n         * @private Used to save the current volume when muting so we can\r\n         * restore once unmuted\r\n         * @type {number}\r\n         */\r\n        this.savedVolume = 0;\r\n\r\n        /**\r\n         * @private The current muted state\r\n         * @type {boolean}\r\n         */\r\n        this.isMuted = false;\r\n\r\n        /**\r\n         * @private Will hold a list of event descriptors that need to be\r\n         * canceled on subsequent loads of audio\r\n         * @type {Object[]}\r\n         */\r\n        this.tmpEvents = [];\r\n\r\n        /**\r\n         * @private Holds any running audio downloads\r\n         * @type {Observer}\r\n         */\r\n        this.currentRequest = null;\r\n        /** @private */\r\n        this.arraybuffer = null;\r\n        /** @private */\r\n        this.drawer = null;\r\n        /** @private */\r\n        this.backend = null;\r\n        /** @private */\r\n        this.peakCache = null;\r\n\r\n        // cache constructor objects\r\n        if (typeof this.params.renderer !== 'function') {\r\n            throw new Error('Renderer parameter is invalid');\r\n        }\r\n        /**\r\n         * @private The uninitialised Drawer class\r\n         */\r\n        this.Drawer = this.params.renderer;\r\n        /**\r\n         * @private The uninitialised Backend class\r\n         */\r\n        // Back compat\r\n        if (this.params.backend == 'AudioElement') {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n\r\n        if (\r\n            (this.params.backend == 'WebAudio' ||\r\n                this.params.backend === 'MediaElementWebAudio') &&\r\n            !WebAudio.prototype.supportsWebAudio.call(null)\r\n        ) {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n        this.Backend = this.backends[this.params.backend];\r\n\r\n        /**\r\n         * @private map of plugin names that are currently initialised\r\n         */\r\n        this.initialisedPluginList = {};\r\n        /** @private */\r\n        this.isDestroyed = false;\r\n\r\n        /**\r\n         * Get the current ready status.\r\n         *\r\n         * @example const isReady = wavesurfer.isReady;\r\n         * @return {boolean}\r\n         */\r\n        this.isReady = false;\r\n\r\n        // responsive debounced event listener. If this.params.responsive is not\r\n        // set, this is never called. Use 100ms or this.params.responsive as\r\n        // timeout for the debounce function.\r\n        let prevWidth = 0;\r\n        this._onResize = util.debounce(\r\n            () => {\r\n                if (\r\n                    prevWidth != this.drawer.wrapper.clientWidth &&\r\n                    !this.params.scrollParent\r\n                ) {\r\n                    prevWidth = this.drawer.wrapper.clientWidth;\r\n                    this.drawer.fireEvent('redraw');\r\n                }\r\n            },\r\n            typeof this.params.responsive === 'number'\r\n                ? this.params.responsive\r\n                : 100\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise the wave\r\n     *\r\n     * @example\r\n     * var wavesurfer = new WaveSurfer(params);\r\n     * wavesurfer.init();\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    init() {\r\n        this.registerPlugins(this.params.plugins);\r\n        this.createDrawer();\r\n        this.createBackend();\r\n        this.createPeakCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\r\n     * this function is called in the init function of wavesurfer\r\n     *\r\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\r\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    registerPlugins(plugins) {\r\n        // first instantiate all the plugins\r\n        plugins.forEach(plugin => this.addPlugin(plugin));\r\n\r\n        // now run the init functions\r\n        plugins.forEach(plugin => {\r\n            // call init function of the plugin if deferInit is falsey\r\n            // in that case you would manually use initPlugins()\r\n            if (!plugin.deferInit) {\r\n                this.initPlugin(plugin.name);\r\n            }\r\n        });\r\n        this.fireEvent('plugins-registered', plugins);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get a map of plugin names that are currently initialised\r\n     *\r\n     * @example wavesurfer.getPlugins();\r\n     * @return {Object} Object with plugin names\r\n     */\r\n    getActivePlugins() {\r\n        return this.initialisedPluginList;\r\n    }\r\n\r\n    /**\r\n     * Add a plugin object to wavesurfer\r\n     *\r\n     * @param {PluginDefinition} plugin A plugin definition\r\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\r\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    addPlugin(plugin) {\r\n        if (!plugin.name) {\r\n            throw new Error('Plugin does not have a name!');\r\n        }\r\n        if (!plugin.instance) {\r\n            throw new Error(\r\n                `Plugin ${plugin.name} does not have an instance property!`\r\n            );\r\n        }\r\n\r\n        // staticProps properties are applied to wavesurfer instance\r\n        if (plugin.staticProps) {\r\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\r\n                /**\r\n                 * Properties defined in a plugin definition's `staticProps` property are added as\r\n                 * staticProps properties of the WaveSurfer instance\r\n                 */\r\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\r\n            });\r\n        }\r\n\r\n        const Instance = plugin.instance;\r\n\r\n        // turn the plugin instance into an observer\r\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n            util.Observer.prototype\r\n        );\r\n        observerPrototypeKeys.forEach(key => {\r\n            Instance.prototype[key] = util.Observer.prototype[key];\r\n        });\r\n\r\n        /**\r\n         * Instantiated plugin classes are added as a property of the wavesurfer\r\n         * instance\r\n         * @type {Object}\r\n         */\r\n        this[plugin.name] = new Instance(plugin.params || {}, this);\r\n        this.fireEvent('plugin-added', plugin.name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-initialised\r\n     * @example wavesurfer.initPlugin('minimap');\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    initPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(`Plugin ${name} has not been added yet!`);\r\n        }\r\n        if (this.initialisedPluginList[name]) {\r\n            // destroy any already initialised plugins\r\n            this.destroyPlugin(name);\r\n        }\r\n        this[name].init();\r\n        this.initialisedPluginList[name] = true;\r\n        this.fireEvent('plugin-initialised', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-destroyed\r\n     * @example wavesurfer.destroyPlugin('minimap');\r\n     * @returns {this} The wavesurfer instance\r\n     */\r\n    destroyPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (!this.initialisedPluginList[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} is not active and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (typeof this[name].destroy !== 'function') {\r\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\r\n        }\r\n\r\n        this[name].destroy();\r\n        delete this.initialisedPluginList[name];\r\n        this.fireEvent('plugin-destroyed', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy all initialised plugins. Convenience function to use when\r\n     * wavesurfer is removed\r\n     *\r\n     * @private\r\n     */\r\n    destroyAllPlugins() {\r\n        Object.keys(this.initialisedPluginList).forEach(name =>\r\n            this.destroyPlugin(name)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create the drawer and draw the waveform\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#drawer-created\r\n     */\r\n    createDrawer() {\r\n        this.drawer = new this.Drawer(this.container, this.params);\r\n        this.drawer.init();\r\n        this.fireEvent('drawer-created', this.drawer);\r\n\r\n        if (this.params.responsive !== false) {\r\n            window.addEventListener('resize', this._onResize, true);\r\n            window.addEventListener('orientationchange', this._onResize, true);\r\n        }\r\n\r\n        this.drawer.on('redraw', () => {\r\n            this.drawBuffer();\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n        });\r\n\r\n        // Click-to-seek\r\n        this.drawer.on('click', (e, progress) => {\r\n            setTimeout(() => this.seekTo(progress), 0);\r\n        });\r\n\r\n        // Relay the scroll event from the drawer\r\n        this.drawer.on('scroll', e => {\r\n            if (this.params.partialRender) {\r\n                this.drawBuffer();\r\n            }\r\n            this.fireEvent('scroll', e);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the backend\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#backend-created\r\n     */\r\n    createBackend() {\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n        }\r\n\r\n        this.backend = new this.Backend(this.params);\r\n        this.backend.init();\r\n        this.fireEvent('backend-created', this.backend);\r\n\r\n        this.backend.on('finish', () => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('finish');\r\n        });\r\n        this.backend.on('play', () => this.fireEvent('play'));\r\n        this.backend.on('pause', () => this.fireEvent('pause'));\r\n\r\n        this.backend.on('audioprocess', time => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('audioprocess', time);\r\n        });\r\n\r\n        // only needed for MediaElement and MediaElementWebAudio backend\r\n        if (\r\n            this.params.backend === 'MediaElement' ||\r\n            this.params.backend === 'MediaElementWebAudio'\r\n        ) {\r\n            this.backend.on('seek', () => {\r\n                this.drawer.progress(this.backend.getPlayedPercents());\r\n            });\r\n\r\n            this.backend.on('volume', () => {\r\n                let newVolume = this.getVolume();\r\n                this.fireEvent('volume', newVolume);\r\n\r\n                if (this.backend.isMuted !== this.isMuted) {\r\n                    this.isMuted = this.backend.isMuted;\r\n                    this.fireEvent('mute', this.isMuted);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the peak cache\r\n     *\r\n     * @private\r\n     */\r\n    createPeakCache() {\r\n        if (this.params.partialRender) {\r\n            this.peakCache = new PeakCache();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the duration of the audio clip\r\n     *\r\n     * @example const duration = wavesurfer.getDuration();\r\n     * @return {number} Duration in seconds\r\n     */\r\n    getDuration() {\r\n        return this.backend.getDuration();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback position\r\n     *\r\n     * @example const currentTime = wavesurfer.getCurrentTime();\r\n     * @return {number} Playback position in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.backend.getCurrentTime();\r\n    }\r\n\r\n    /**\r\n     * Set the current play time in seconds.\r\n     *\r\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\r\n     * seconds, 60 means 1 minute\r\n     */\r\n    setCurrentTime(seconds) {\r\n        if (seconds >= this.getDuration()) {\r\n            this.seekTo(1);\r\n        } else {\r\n            this.seekTo(seconds / this.getDuration());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts playback from the current position. Optional start and end\r\n     * measured in seconds can be used to set the range of audio to play.\r\n     *\r\n     * @param {?number} start Position to start at\r\n     * @param {?number} end Position to end at\r\n     * @emits WaveSurfer#interaction\r\n     * @return {Promise} Result of the backend play method\r\n     * @example\r\n     * // play from second 1 to 5\r\n     * wavesurfer.play(1, 5);\r\n     */\r\n    play(start, end) {\r\n        if (this.params.ignoreSilenceMode) {\r\n            // ignores device hardware silence mode\r\n            util.ignoreSilenceMode();\r\n        }\r\n\r\n        this.fireEvent('interaction', () => this.play(start, end));\r\n        return this.backend.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} position Position (in seconds) to stop at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(position) {\r\n        this.backend.setPlayEnd(position);\r\n    }\r\n\r\n    /**\r\n     * Stops and pauses playback\r\n     *\r\n     * @example wavesurfer.pause();\r\n     * @return {Promise} Result of the backend pause method\r\n     */\r\n    pause() {\r\n        if (!this.backend.isPaused()) {\r\n            return this.backend.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle playback\r\n     *\r\n     * @example wavesurfer.playPause();\r\n     * @return {Promise} Result of the backend play or pause method\r\n     */\r\n    playPause() {\r\n        return this.backend.isPaused() ? this.play() : this.pause();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback state\r\n     *\r\n     * @example const isPlaying = wavesurfer.isPlaying();\r\n     * @return {boolean} False if paused, true if playing\r\n     */\r\n    isPlaying() {\r\n        return !this.backend.isPaused();\r\n    }\r\n\r\n    /**\r\n     * Skip backward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipBackward();\r\n     */\r\n    skipBackward(seconds) {\r\n        this.skip(-seconds || -this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip forward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipForward();\r\n     */\r\n    skipForward(seconds) {\r\n        this.skip(seconds || this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip a number of seconds from the current position (use a negative value\r\n     * to go backwards).\r\n     *\r\n     * @param {number} offset Amount to skip back or forwards\r\n     * @example\r\n     * // go back 2 seconds\r\n     * wavesurfer.skip(-2);\r\n     */\r\n    skip(offset) {\r\n        const duration = this.getDuration() || 1;\r\n        let position = this.getCurrentTime() || 0;\r\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\r\n        this.seekAndCenter(position / duration);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position and centers the view\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @example\r\n     * // seek and go to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekAndCenter(progress) {\r\n        this.seekTo(progress);\r\n        this.drawer.recenter(progress);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @emits WaveSurfer#interaction\r\n     * @emits WaveSurfer#seek\r\n     * @example\r\n     * // seek to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekTo(progress) {\r\n        // return an error if progress is not a number between 0 and 1\r\n        if (\r\n            typeof progress !== 'number' ||\r\n            !isFinite(progress) ||\r\n            progress < 0 ||\r\n            progress > 1\r\n        ) {\r\n            throw new Error(\r\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\r\n            );\r\n        }\r\n        this.fireEvent('interaction', () => this.seekTo(progress));\r\n\r\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\r\n        const paused = this.backend.isPaused();\r\n\r\n        if (isWebAudioBackend && !paused) {\r\n            this.backend.pause();\r\n        }\r\n\r\n        // avoid small scrolls while paused seeking\r\n        const oldScrollParent = this.params.scrollParent;\r\n        this.params.scrollParent = false;\r\n        this.backend.seekTo(progress * this.getDuration());\r\n        this.drawer.progress(progress);\r\n\r\n        if (isWebAudioBackend && !paused) {\r\n            this.backend.play();\r\n        }\r\n\r\n        this.params.scrollParent = oldScrollParent;\r\n        this.fireEvent('seek', progress);\r\n    }\r\n\r\n    /**\r\n     * Stops and goes to the beginning.\r\n     *\r\n     * @example wavesurfer.stop();\r\n     */\r\n    stop() {\r\n        this.pause();\r\n        this.seekTo(0);\r\n        this.drawer.progress(0);\r\n    }\r\n\r\n    /**\r\n     * Sets the ID of the audio device to use for output and returns a Promise.\r\n     *\r\n     * @param {string} deviceId String value representing underlying output\r\n     * device\r\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\r\n     * no errors detected.\r\n     */\r\n    setSinkId(deviceId) {\r\n        return this.backend.setSinkId(deviceId);\r\n    }\r\n\r\n    /**\r\n     * Set the playback volume.\r\n     *\r\n     * @param {number} newVolume A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     * @emits WaveSurfer#volume\r\n     */\r\n    setVolume(newVolume) {\r\n        this.backend.setVolume(newVolume);\r\n        this.fireEvent('volume', newVolume);\r\n    }\r\n\r\n    /**\r\n     * Get the playback volume.\r\n     *\r\n     * @return {number} A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     */\r\n    getVolume() {\r\n        return this.backend.getVolume();\r\n    }\r\n\r\n    /**\r\n     * Set the playback rate.\r\n     *\r\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\r\n     * speed, 2 means double speed and so on.\r\n     * @example wavesurfer.setPlaybackRate(2);\r\n     */\r\n    setPlaybackRate(rate) {\r\n        this.backend.setPlaybackRate(rate);\r\n    }\r\n\r\n    /**\r\n     * Get the playback rate.\r\n     *\r\n     * @return {number} The current playback rate.\r\n     */\r\n    getPlaybackRate() {\r\n        return this.backend.getPlaybackRate();\r\n    }\r\n\r\n    /**\r\n     * Toggle the volume on and off. If not currently muted it will save the\r\n     * current volume value and turn the volume off. If currently muted then it\r\n     * will restore the volume to the saved value, and then rest the saved\r\n     * value.\r\n     *\r\n     * @example wavesurfer.toggleMute();\r\n     */\r\n    toggleMute() {\r\n        this.setMute(!this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @param {boolean} mute Specify `true` to mute audio.\r\n     * @emits WaveSurfer#volume\r\n     * @emits WaveSurfer#mute\r\n     * @example\r\n     * // unmute\r\n     * wavesurfer.setMute(false);\r\n     * console.log(wavesurfer.getMute()) // logs false\r\n     */\r\n    setMute(mute) {\r\n        // ignore all muting requests if the audio is already in that state\r\n        if (mute === this.isMuted) {\r\n            this.fireEvent('mute', this.isMuted);\r\n            return;\r\n        }\r\n\r\n        if (this.backend.setMute) {\r\n            // Backends such as the MediaElement backend have their own handling\r\n            // of mute, let them handle it.\r\n            this.backend.setMute(mute);\r\n            this.isMuted = mute;\r\n        } else {\r\n            if (mute) {\r\n                // If currently not muted then save current volume,\r\n                // turn off the volume and update the mute properties\r\n                this.savedVolume = this.backend.getVolume();\r\n                this.backend.setVolume(0);\r\n                this.isMuted = true;\r\n                this.fireEvent('volume', 0);\r\n            } else {\r\n                // If currently muted then restore to the saved volume\r\n                // and update the mute properties\r\n                this.backend.setVolume(this.savedVolume);\r\n                this.isMuted = false;\r\n                this.fireEvent('volume', this.savedVolume);\r\n            }\r\n        }\r\n        this.fireEvent('mute', this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Get the current mute status.\r\n     *\r\n     * @example const isMuted = wavesurfer.getMute();\r\n     * @return {boolean} Current mute status\r\n     */\r\n    getMute() {\r\n        return this.isMuted;\r\n    }\r\n\r\n    /**\r\n     * Get the list of current set filters as an array.\r\n     *\r\n     * Filters must be set with setFilters method first\r\n     *\r\n     * @return {array} List of enabled filters\r\n     */\r\n    getFilters() {\r\n        return this.backend.filters || [];\r\n    }\r\n\r\n    /**\r\n     * Toggles `scrollParent` and redraws\r\n     *\r\n     * @example wavesurfer.toggleScroll();\r\n     */\r\n    toggleScroll() {\r\n        this.params.scrollParent = !this.params.scrollParent;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Toggle mouse interaction\r\n     *\r\n     * @example wavesurfer.toggleInteraction();\r\n     */\r\n    toggleInteraction() {\r\n        this.params.interact = !this.params.interact;\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform after the cursor.\r\n     *\r\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\r\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\r\n     */\r\n    getWaveColor(channelIdx = null) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\r\n        }\r\n        return this.params.waveColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform after the cursor.\r\n     *\r\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\r\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\r\n     * @example wavesurfer.setWaveColor('#ddd');\r\n     */\r\n    setWaveColor(color, channelIdx = null) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\r\n        } else {\r\n            this.params.waveColor = color;\r\n        }\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform behind the cursor.\r\n     *\r\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\r\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\r\n     */\r\n    getProgressColor(channelIdx = null) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\r\n        }\r\n        return this.params.progressColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform behind the cursor.\r\n     *\r\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\r\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\r\n     * @example wavesurfer.setProgressColor('#400');\r\n     */\r\n    setProgressColor(color, channelIdx) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\r\n        } else {\r\n            this.params.progressColor = color;\r\n        }\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the background color of the waveform container.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getBackgroundColor() {\r\n        return this.params.backgroundColor;\r\n    }\r\n\r\n    /**\r\n     * Set the background color of the waveform container.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\r\n     */\r\n    setBackgroundColor(color) {\r\n        this.params.backgroundColor = color;\r\n        util.style(this.container, { background: this.params.backgroundColor });\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getCursorColor() {\r\n        return this.params.cursorColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setCursorColor('#222');\r\n     */\r\n    setCursorColor(color) {\r\n        this.params.cursorColor = color;\r\n        this.drawer.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Get the height of the waveform.\r\n     *\r\n     * @return {number} Height measured in pixels.\r\n     */\r\n    getHeight() {\r\n        return this.params.height;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the waveform.\r\n     *\r\n     * @param {number} height Height measured in pixels.\r\n     * @example wavesurfer.setHeight(200);\r\n     */\r\n    setHeight(height) {\r\n        this.params.height = height;\r\n        this.drawer.setHeight(height * this.params.pixelRatio);\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Hide channels from being drawn on the waveform if splitting channels.\r\n     *\r\n     * For example, if we want to draw only the peaks for the right stereo channel:\r\n     *\r\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\r\n     * wavesurfer.load('stereo_audio.mp3');\r\n     *\r\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\r\n     *\r\n     * @param {array} channelIndices Channels to be filtered out from drawing.\r\n     * @version 4.0.0\r\n     */\r\n    setFilteredChannels(channelIndices) {\r\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the correct peaks for current wave view-port and render wave\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#redraw\r\n     */\r\n    drawBuffer() {\r\n        const nominalWidth = Math.round(\r\n            this.getDuration() *\r\n                this.params.minPxPerSec *\r\n                this.params.pixelRatio\r\n        );\r\n        const parentWidth = this.drawer.getWidth();\r\n        let width = nominalWidth;\r\n        // always start at 0 after zooming for scrolling : issue redraw left part\r\n        let start = 0;\r\n        let end = Math.max(start + parentWidth, width);\r\n        // Fill container\r\n        if (\r\n            this.params.fillParent &&\r\n            (!this.params.scrollParent || nominalWidth < parentWidth)\r\n        ) {\r\n            width = parentWidth;\r\n            start = 0;\r\n            end = width;\r\n        }\r\n\r\n        let peaks;\r\n        if (this.params.partialRender) {\r\n            const newRanges = this.peakCache.addRangeToPeakCache(\r\n                width,\r\n                start,\r\n                end\r\n            );\r\n            let i;\r\n            for (i = 0; i < newRanges.length; i++) {\r\n                peaks = this.backend.getPeaks(\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n                this.drawer.drawPeaks(\r\n                    peaks,\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n            }\r\n        } else {\r\n            peaks = this.backend.getPeaks(width, start, end);\r\n            this.drawer.drawPeaks(peaks, width, start, end);\r\n        }\r\n        this.fireEvent('redraw', peaks, width);\r\n    }\r\n\r\n    /**\r\n     * Horizontally zooms the waveform in and out. It also changes the parameter\r\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\r\n     * with a falsey parameter will reset the zoom state.\r\n     *\r\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\r\n     * audio, if none is set the waveform returns to unzoomed state\r\n     * @emits WaveSurfer#zoom\r\n     * @example wavesurfer.zoom(20);\r\n     */\r\n    zoom(pxPerSec) {\r\n        if (!pxPerSec) {\r\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\r\n            this.params.scrollParent = false;\r\n        } else {\r\n            this.params.minPxPerSec = pxPerSec;\r\n            this.params.scrollParent = true;\r\n        }\r\n\r\n        this.drawBuffer();\r\n        this.drawer.progress(this.backend.getPlayedPercents());\r\n\r\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\r\n        this.fireEvent('zoom', pxPerSec);\r\n    }\r\n\r\n    /**\r\n     * Decode buffer and load\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer Buffer to process\r\n     */\r\n    loadArrayBuffer(arraybuffer) {\r\n        this.decodeArrayBuffer(arraybuffer, data => {\r\n            if (!this.isDestroyed) {\r\n                this.loadDecodedBuffer(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Directly load an externally decoded AudioBuffer\r\n     *\r\n     * @private\r\n     * @param {AudioBuffer} buffer Buffer to process\r\n     * @emits WaveSurfer#ready\r\n     */\r\n    loadDecodedBuffer(buffer) {\r\n        this.backend.load(buffer);\r\n        this.drawBuffer();\r\n        this.isReady = true;\r\n        this.fireEvent('ready');\r\n    }\r\n\r\n    /**\r\n     * Loads audio data from a Blob or File object\r\n     *\r\n     * @param {Blob|File} blob Audio data\r\n     * @example\r\n     */\r\n    loadBlob(blob) {\r\n        // Create file reader\r\n        const reader = new FileReader();\r\n        reader.addEventListener('progress', e => this.onProgress(e));\r\n        reader.addEventListener('load', e =>\r\n            this.loadArrayBuffer(e.target.result)\r\n        );\r\n        reader.addEventListener('error', () =>\r\n            this.fireEvent('error', 'Error reading file')\r\n        );\r\n        reader.readAsArrayBuffer(blob);\r\n        this.empty();\r\n    }\r\n\r\n    /**\r\n     * Loads audio and re-renders the waveform.\r\n     *\r\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\r\n     * audio element with the audio\r\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\r\n     * the audio to render the waveform if this is specified\r\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\r\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\r\n     * @param {?number} duration The duration of the audio. This is used to\r\n     * render the peaks data in the correct size for the audio duration (as\r\n     * befits the current `minPxPerSec` and zoom value) without having to decode\r\n     * the audio.\r\n     * @returns {void}\r\n     * @throws Will throw an error if the `url` argument is empty.\r\n     * @example\r\n     * // uses fetch or media element to load file (depending on backend)\r\n     * wavesurfer.load('http://example.com/demo.wav');\r\n     *\r\n     * // setting preload attribute with media element backend and supplying\r\n     * // peaks\r\n     * wavesurfer.load(\r\n     *   'http://example.com/demo.wav',\r\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\r\n     *   true\r\n     * );\r\n     */\r\n    load(url, peaks, preload, duration) {\r\n        if (!url) {\r\n            throw new Error('url parameter cannot be empty');\r\n        }\r\n        this.empty();\r\n        if (preload) {\r\n            // check whether the preload attribute will be usable and if not log\r\n            // a warning listing the reasons why not and nullify the variable\r\n            const preloadIgnoreReasons = {\r\n                \"Preload is not 'auto', 'none' or 'metadata'\":\r\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\r\n                'Peaks are not provided': !peaks,\r\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\r\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\r\n                        this.params.backend\r\n                    ) === -1,\r\n                'Url is not of type string': typeof url !== 'string'\r\n            };\r\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\r\n                reason => preloadIgnoreReasons[reason]\r\n            );\r\n            if (activeReasons.length) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\r\n                        activeReasons.join('\\n\\t- ')\r\n                );\r\n                // stop invalid values from being used\r\n                preload = null;\r\n            }\r\n        }\r\n\r\n        // loadBuffer(url, peaks, duration) requires that url is a string\r\n        // but users can pass in a HTMLMediaElement to WaveSurfer\r\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\r\n            url = url.src;\r\n        }\r\n\r\n        switch (this.params.backend) {\r\n            case 'WebAudio':\r\n                return this.loadBuffer(url, peaks, duration);\r\n            case 'MediaElement':\r\n            case 'MediaElementWebAudio':\r\n                return this.loadMediaElement(url, peaks, preload, duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads audio using Web Audio buffer backend.\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#waveform-ready\r\n     * @param {string} url URL of audio file\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Optional duration of audio file\r\n     * @returns {void}\r\n     */\r\n    loadBuffer(url, peaks, duration) {\r\n        const load = action => {\r\n            if (action) {\r\n                this.tmpEvents.push(this.once('ready', action));\r\n            }\r\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\r\n        };\r\n\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n            this.fireEvent('waveform-ready');\r\n            this.tmpEvents.push(this.once('interaction', load));\r\n        } else {\r\n            return load();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Either create a media element, or load an existing media element.\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#waveform-ready\r\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\r\n     * existing HTML5 Audio/Video Element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\r\n     * dependency\r\n     * @param {?boolean} preload Set to true if the preload attribute of the\r\n     * audio element should be enabled\r\n     * @param {?number} duration Optional duration of audio file\r\n     */\r\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\r\n        let url = urlOrElt;\r\n\r\n        if (typeof urlOrElt === 'string') {\r\n            this.backend.load(url, this.mediaContainer, peaks, preload);\r\n        } else {\r\n            const elt = urlOrElt;\r\n            this.backend.loadElt(elt, peaks);\r\n\r\n            // If peaks are not provided,\r\n            // url = element.src so we can get peaks with web audio\r\n            url = elt.src;\r\n        }\r\n\r\n        this.tmpEvents.push(\r\n            this.backend.once('canplay', () => {\r\n                // ignore when backend was already destroyed\r\n                if (!this.backend.destroyed) {\r\n                    this.drawBuffer();\r\n                    this.isReady = true;\r\n                    this.fireEvent('ready');\r\n                }\r\n            }),\r\n            this.backend.once('error', err => this.fireEvent('error', err))\r\n        );\r\n\r\n        // If peaks are provided, render them and fire the `waveform-ready` event.\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n            this.fireEvent('waveform-ready');\r\n        }\r\n\r\n        // If no pre-decoded peaks are provided, or are provided with\r\n        // forceDecode flag, attempt to download the audio file and decode it\r\n        // with Web Audio.\r\n        if (\r\n            (!peaks || this.params.forceDecode) &&\r\n            this.backend.supportsWebAudio()\r\n        ) {\r\n            this.getArrayBuffer(url, arraybuffer => {\r\n                this.decodeArrayBuffer(arraybuffer, buffer => {\r\n                    this.backend.buffer = buffer;\r\n                    this.backend.setPeaks(null);\r\n                    this.drawBuffer();\r\n                    this.fireEvent('waveform-ready');\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {Object} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback) {\r\n        if (!this.isDestroyed) {\r\n            this.arraybuffer = arraybuffer;\r\n            this.backend.decodeArrayBuffer(\r\n                arraybuffer,\r\n                data => {\r\n                    // Only use the decoded data if we haven't been destroyed or\r\n                    // another decode started in the meantime\r\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\r\n                        callback(data);\r\n                        this.arraybuffer = null;\r\n                    }\r\n                },\r\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load an array buffer using fetch and pass the result to a callback\r\n     *\r\n     * @param {string} url The URL of the file object\r\n     * @param {function} callback The function to call on complete\r\n     * @returns {util.fetchFile} fetch call\r\n     * @private\r\n     */\r\n    getArrayBuffer(url, callback) {\r\n        let options = Object.assign(\r\n            {\r\n                url: url,\r\n                responseType: 'arraybuffer'\r\n            },\r\n            this.params.xhr\r\n        );\r\n        const request = util.fetchFile(options);\r\n\r\n        this.currentRequest = request;\r\n\r\n        this.tmpEvents.push(\r\n            request.on('progress', e => {\r\n                this.onProgress(e);\r\n            }),\r\n            request.on('success', data => {\r\n                callback(data);\r\n                this.currentRequest = null;\r\n            }),\r\n            request.on('error', e => {\r\n                this.fireEvent('error', e);\r\n                this.currentRequest = null;\r\n            })\r\n        );\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Called while the audio file is loading\r\n     *\r\n     * @private\r\n     * @param {Event} e Progress event\r\n     * @emits WaveSurfer#loading\r\n     */\r\n    onProgress(e) {\r\n        let percentComplete;\r\n        if (e.lengthComputable) {\r\n            percentComplete = e.loaded / e.total;\r\n        } else {\r\n            // Approximate progress with an asymptotic\r\n            // function, and assume downloads in the 1-3 MB range.\r\n            percentComplete = e.loaded / (e.loaded + 1000000);\r\n        }\r\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\r\n    }\r\n\r\n    /**\r\n     * Exports PCM data into a JSON array and optionally opens in a new window\r\n     * as valid JSON Blob instance.\r\n     *\r\n     * @param {number} length=1024 The scale in which to export the peaks\r\n     * @param {number} accuracy=10000\r\n     * @param {?boolean} noWindow Set to true to disable opening a new\r\n     * window with the JSON\r\n     * @param {number} start Start index\r\n     * @param {number} end End index\r\n     * @return {Promise} Promise that resolves with array of peaks\r\n     */\r\n    exportPCM(length, accuracy, noWindow, start, end) {\r\n        length = length || 1024;\r\n        start = start || 0;\r\n        accuracy = accuracy || 10000;\r\n        noWindow = noWindow || false;\r\n        const peaks = this.backend.getPeaks(length, start, end);\r\n        const arr = [].map.call(\r\n            peaks,\r\n            val => Math.round(val * accuracy) / accuracy\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            if (!noWindow){\r\n                const blobJSON = new Blob(\r\n                    [JSON.stringify(arr)],\r\n                    {type: 'application/json;charset=utf-8'}\r\n                );\r\n                const objURL = URL.createObjectURL(blobJSON);\r\n                window.open(objURL);\r\n                URL.revokeObjectURL(objURL);\r\n            }\r\n            resolve(arr);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save waveform image as data URI.\r\n     *\r\n     * The default format is `'image/png'`. Other supported types are\r\n     * `'image/jpeg'` and `'image/webp'`.\r\n     *\r\n     * @param {string} format='image/png' A string indicating the image format.\r\n     * The default format type is `'image/png'`.\r\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\r\n     * quality to use for image formats that use lossy compression such as\r\n     * `'image/jpeg'`` and `'image/webp'`.\r\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\r\n     * or 'blob'.\r\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\r\n     * a single data URL or an array of data URLs, one for each canvas. When using\r\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\r\n     * instances, one for each canvas.\r\n     */\r\n    exportImage(format, quality, type) {\r\n        if (!format) {\r\n            format = 'image/png';\r\n        }\r\n        if (!quality) {\r\n            quality = 1;\r\n        }\r\n        if (!type) {\r\n            type = 'dataURL';\r\n        }\r\n\r\n        return this.drawer.getImage(format, quality, type);\r\n    }\r\n\r\n    /**\r\n     * Cancel any fetch request currently in progress\r\n     */\r\n    cancelAjax() {\r\n        if (this.currentRequest && this.currentRequest.controller) {\r\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\r\n            // See: Wavesurfer issue #2042\r\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\r\n            if (this.currentRequest._reader) {\r\n                // Ignoring exceptions thrown by call to cancel()\r\n                this.currentRequest._reader.cancel().catch(err => {});\r\n            }\r\n\r\n            this.currentRequest.controller.abort();\r\n            this.currentRequest = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    clearTmpEvents() {\r\n        this.tmpEvents.forEach(e => e.un());\r\n    }\r\n\r\n    /**\r\n     * Display empty waveform.\r\n     */\r\n    empty() {\r\n        if (!this.backend.isPaused()) {\r\n            this.stop();\r\n            this.backend.disconnectSource();\r\n        }\r\n        this.isReady = false;\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n\r\n        // empty drawer\r\n        this.drawer.progress(0);\r\n        this.drawer.setWidth(0);\r\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\r\n    }\r\n\r\n    /**\r\n     * Remove events, elements and disconnect WebAudio nodes.\r\n     *\r\n     * @emits WaveSurfer#destroy\r\n     */\r\n    destroy() {\r\n        this.destroyAllPlugins();\r\n        this.fireEvent('destroy');\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n        this.unAll();\r\n        if (this.params.responsive !== false) {\r\n            window.removeEventListener('resize', this._onResize, true);\r\n            window.removeEventListener(\r\n                'orientationchange',\r\n                this._onResize,\r\n                true\r\n            );\r\n        }\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n            // clears memory usage\r\n            this.backend = null;\r\n        }\r\n        if (this.drawer) {\r\n            this.drawer.destroy();\r\n        }\r\n        this.isDestroyed = true;\r\n        this.isReady = false;\r\n        this.arraybuffer = null;\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n// using constants to prevent someone writing the string wrong\r\nconst PLAYING = 'playing';\r\nconst PAUSED = 'paused';\r\nconst FINISHED = 'finished';\r\n\r\n/**\r\n * WebAudio backend\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class WebAudio extends util.Observer {\r\n    /** scriptBufferSize: size of the processing buffer */\r\n    static scriptBufferSize = 256;\r\n    /** audioContext: allows to process audio with WebAudio API */\r\n    audioContext = null;\r\n    /** @private */\r\n    offlineAudioContext = null;\r\n    /** @private */\r\n    stateBehaviors = {\r\n        [PLAYING]: {\r\n            init() {\r\n                this.addOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition + this.getPlayedTime();\r\n            }\r\n        },\r\n        [PAUSED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition;\r\n            }\r\n        },\r\n        [FINISHED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n                this.fireEvent('finish');\r\n            },\r\n            getPlayedPercents() {\r\n                return 1;\r\n            },\r\n            getCurrentTime() {\r\n                return this.getDuration();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Does the browser support this backend\r\n     *\r\n     * @return {boolean} Whether or not this browser supports this backend\r\n     */\r\n    supportsWebAudio() {\r\n        return !!(window.AudioContext || window.webkitAudioContext);\r\n    }\r\n\r\n    /**\r\n     * Get the audio context used by this backend or create one\r\n     *\r\n     * @return {AudioContext} Existing audio context, or creates a new one\r\n     */\r\n    getAudioContext() {\r\n        if (!window.WaveSurferAudioContext) {\r\n            window.WaveSurferAudioContext = new (window.AudioContext ||\r\n                window.webkitAudioContext)();\r\n        }\r\n        return window.WaveSurferAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Get the offline audio context used by this backend or create one\r\n     *\r\n     * @param {number} sampleRate The sample rate to use\r\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\r\n     * a new one\r\n     */\r\n    getOfflineAudioContext(sampleRate) {\r\n        if (!window.WaveSurferOfflineAudioContext) {\r\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\r\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\r\n        }\r\n        return window.WaveSurferOfflineAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /** @private */\r\n        this.params = params;\r\n        /** ac: Audio Context instance */\r\n        this.ac =\r\n            params.audioContext ||\r\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\r\n        /**@private */\r\n        this.lastPlay = this.ac.currentTime;\r\n        /** @private */\r\n        this.startPosition = 0;\r\n        /** @private */\r\n        this.scheduledPause = null;\r\n        /** @private */\r\n        this.states = {\r\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\r\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\r\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\r\n        };\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.filters = [];\r\n        /** gainNode: allows to control audio volume */\r\n        this.gainNode = null;\r\n        /** @private */\r\n        this.mergedPeaks = null;\r\n        /** @private */\r\n        this.offlineAc = null;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** analyser: provides audio analysis information */\r\n        this.analyser = null;\r\n        /** scriptNode: allows processing audio */\r\n        this.scriptNode = null;\r\n        /** @private */\r\n        this.source = null;\r\n        /** @private */\r\n        this.splitPeaks = [];\r\n        /** @private */\r\n        this.state = null;\r\n        /** @private */\r\n        this.explicitDuration = params.duration;\r\n        /**\r\n         * Boolean indicating if the backend was destroyed.\r\n         */\r\n        this.destroyed = false;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n\r\n        this.setState(PAUSED);\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.setLength(0);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectFilters() {\r\n        if (this.filters) {\r\n            this.filters.forEach(filter => {\r\n                filter && filter.disconnect();\r\n            });\r\n            this.filters = null;\r\n            // Reconnect direct path\r\n            this.analyser.connect(this.gainNode);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param {string} state The new state\r\n     */\r\n    setState(state) {\r\n        if (this.state !== this.states[state]) {\r\n            this.state = this.states[state];\r\n            this.state.init.call(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unpacked `setFilters()`\r\n     *\r\n     * @param {...AudioNode} filters One or more filters to set\r\n     */\r\n    setFilter(...filters) {\r\n        this.setFilters(filters);\r\n    }\r\n\r\n    /**\r\n     * Insert custom Web Audio nodes into the graph\r\n     *\r\n     * @param {AudioNode[]} filters Packed filters array\r\n     * @example\r\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\r\n     * wavesurfer.backend.setFilter(lowpass);\r\n     */\r\n    setFilters(filters) {\r\n        // Remove existing filters\r\n        this.disconnectFilters();\r\n\r\n        // Insert filters if filter array not empty\r\n        if (filters && filters.length) {\r\n            this.filters = filters;\r\n\r\n            // Disconnect direct path before inserting filters\r\n            this.analyser.disconnect();\r\n\r\n            // Connect each filter in turn\r\n            filters\r\n                .reduce((prev, curr) => {\r\n                    prev.connect(curr);\r\n                    return curr;\r\n                }, this.analyser)\r\n                .connect(this.gainNode);\r\n        }\r\n    }\r\n    /** Create ScriptProcessorNode to process audio */\r\n    createScriptNode() {\r\n        if (this.params.audioScriptProcessor) {\r\n            this.scriptNode = this.params.audioScriptProcessor;\r\n        } else {\r\n            if (this.ac.createScriptProcessor) {\r\n                this.scriptNode = this.ac.createScriptProcessor(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            } else {\r\n                this.scriptNode = this.ac.createJavaScriptNode(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            }\r\n        }\r\n        this.scriptNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /** @private */\r\n    addOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = () => {\r\n            const time = this.getCurrentTime();\r\n\r\n            if (time >= this.getDuration()) {\r\n                this.setState(FINISHED);\r\n                this.fireEvent('pause');\r\n            } else if (time >= this.scheduledPause) {\r\n                this.pause();\r\n            } else if (this.state === this.states[PLAYING]) {\r\n                this.fireEvent('audioprocess', time);\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @private */\r\n    removeOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = null;\r\n    }\r\n    /** Create analyser node to perform audio analysis */\r\n    createAnalyserNode() {\r\n        this.analyser = this.ac.createAnalyser();\r\n        this.analyser.connect(this.gainNode);\r\n    }\r\n\r\n    /**\r\n     * Create the gain node needed to control the playback volume.\r\n     *\r\n     */\r\n    createVolumeNode() {\r\n        // Create gain node using the AudioContext\r\n        if (this.ac.createGain) {\r\n            this.gainNode = this.ac.createGain();\r\n        } else {\r\n            this.gainNode = this.ac.createGainNode();\r\n        }\r\n        // Add the gain node to the graph\r\n        this.gainNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            /**\r\n             * The webaudio API doesn't currently support setting the device\r\n             * output. Here we create an HTMLAudioElement, connect the\r\n             * webaudio stream to that element and setSinkId there.\r\n             */\r\n            let audio = new window.Audio();\r\n            if (!audio.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            audio.autoplay = true;\r\n            const dest = this.ac.createMediaStreamDestination();\r\n            this.gainNode.disconnect();\r\n            this.gainNode.connect(dest);\r\n            audio.srcObject = dest.stream;\r\n\r\n            return audio.setSinkId(deviceId);\r\n        } else {\r\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.gainNode.gain.value;\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete.\r\n     * @param {function} errback The function to call on error.\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback, errback) {\r\n        if (!this.offlineAc) {\r\n            this.offlineAc = this.getOfflineAudioContext(\r\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\r\n            );\r\n        }\r\n        if ('webkitAudioContext' in window) {\r\n            // Safari: no support for Promise-based decodeAudioData enabled\r\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\r\n            this.offlineAc.decodeAudioData(\r\n                arraybuffer,\r\n                data => callback(data),\r\n                errback\r\n            );\r\n        } else {\r\n            this.offlineAc.decodeAudioData(arraybuffer).then(\r\n                (data) => callback(data)\r\n            ).catch(\r\n                (err) => errback(err)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set pre-decoded peaks\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Explicit duration\r\n     */\r\n    setPeaks(peaks, duration) {\r\n        if (duration != null) {\r\n            this.explicitDuration = duration;\r\n        }\r\n        this.peaks = peaks;\r\n    }\r\n\r\n    /**\r\n     * Set the rendered length (different from the length of the audio)\r\n     *\r\n     * @param {number} length The rendered length\r\n     */\r\n    setLength(length) {\r\n        // No resize, we can preserve the cached peaks.\r\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\r\n            return;\r\n        }\r\n\r\n        this.splitPeaks = [];\r\n        this.mergedPeaks = [];\r\n        // Set the last element of the sparse array so the peak arrays are\r\n        // appropriately sized for other calculations.\r\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\r\n        let c;\r\n        for (c = 0; c < channels; c++) {\r\n            this.splitPeaks[c] = [];\r\n            this.splitPeaks[c][2 * (length - 1)] = 0;\r\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\r\n        }\r\n        this.mergedPeaks[2 * (length - 1)] = 0;\r\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\r\n     * peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.peaks) {\r\n            return this.peaks;\r\n        }\r\n        if (!this.buffer) {\r\n            return [];\r\n        }\r\n\r\n        first = first || 0;\r\n        last = last || length - 1;\r\n\r\n        this.setLength(length);\r\n\r\n        if (!this.buffer) {\r\n            return this.params.splitChannels\r\n                ? this.splitPeaks\r\n                : this.mergedPeaks;\r\n        }\r\n\r\n        /**\r\n         * The following snippet fixes a buffering data issue on the Safari\r\n         * browser which returned undefined It creates the missing buffer based\r\n         * on 1 channel, 4096 samples and the sampleRate from the current\r\n         * webaudio context 4096 samples seemed to be the best fit for rendering\r\n         * will review this code once a stable version of Safari TP is out\r\n         */\r\n        if (!this.buffer.length) {\r\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\r\n            this.buffer = newBuffer.buffer;\r\n        }\r\n\r\n        const sampleSize = this.buffer.length / length;\r\n        const sampleStep = ~~(sampleSize / 10) || 1;\r\n        const channels = this.buffer.numberOfChannels;\r\n        let c;\r\n\r\n        for (c = 0; c < channels; c++) {\r\n            const peaks = this.splitPeaks[c];\r\n            const chan = this.buffer.getChannelData(c);\r\n            let i;\r\n\r\n            for (i = first; i <= last; i++) {\r\n                const start = ~~(i * sampleSize);\r\n                const end = ~~(start + sampleSize);\r\n                /**\r\n                 * Initialize the max and min to the first sample of this\r\n                 * subrange, so that even if the samples are entirely\r\n                 * on one side of zero, we still return the true max and\r\n                 * min values in the subrange.\r\n                 */\r\n                let min = chan[start];\r\n                let max = min;\r\n                let j;\r\n\r\n                for (j = start; j < end; j += sampleStep) {\r\n                    const value = chan[j];\r\n\r\n                    if (value > max) {\r\n                        max = value;\r\n                    }\r\n\r\n                    if (value < min) {\r\n                        min = value;\r\n                    }\r\n                }\r\n\r\n                peaks[2 * i] = max;\r\n                peaks[2 * i + 1] = min;\r\n\r\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\r\n                    this.mergedPeaks[2 * i] = max;\r\n                }\r\n\r\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\r\n                    this.mergedPeaks[2 * i + 1] = min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.state.getPlayedPercents.call(this);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectSource() {\r\n        if (this.source) {\r\n            this.source.disconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\r\n     */\r\n    destroyWebAudio() {\r\n        this.disconnectFilters();\r\n        this.disconnectSource();\r\n        this.gainNode.disconnect();\r\n        this.scriptNode.disconnect();\r\n        this.analyser.disconnect();\r\n\r\n        // close the audioContext if closeAudioContext option is set to true\r\n        if (this.params.closeAudioContext) {\r\n            // check if browser supports AudioContext.close()\r\n            if (\r\n                typeof this.ac.close === 'function' &&\r\n                this.ac.state != 'closed'\r\n            ) {\r\n                this.ac.close();\r\n            }\r\n            // clear the reference to the audiocontext\r\n            this.ac = null;\r\n            // clear the actual audiocontext, either passed as param or the\r\n            // global singleton\r\n            if (!this.params.audioContext) {\r\n                window.WaveSurferAudioContext = null;\r\n            } else {\r\n                this.params.audioContext = null;\r\n            }\r\n            // clear the offlineAudioContext\r\n            window.WaveSurferOfflineAudioContext = null;\r\n        }\r\n    }\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        if (!this.isPaused()) {\r\n            this.pause();\r\n        }\r\n        this.unAll();\r\n        this.buffer = null;\r\n        this.destroyed = true;\r\n\r\n        this.destroyWebAudio();\r\n    }\r\n\r\n    /**\r\n     * Loaded a decoded audio buffer\r\n     *\r\n     * @param {Object} buffer Decoded audio buffer to load\r\n     */\r\n    load(buffer) {\r\n        this.startPosition = 0;\r\n        this.lastPlay = this.ac.currentTime;\r\n        this.buffer = buffer;\r\n        this.createSource();\r\n    }\r\n\r\n    /** @private */\r\n    createSource() {\r\n        this.disconnectSource();\r\n        this.source = this.ac.createBufferSource();\r\n\r\n        // adjust for old browsers\r\n        this.source.start = this.source.start || this.source.noteGrainOn;\r\n        this.source.stop = this.source.stop || this.source.noteOff;\r\n\r\n        this.setPlaybackRate(this.playbackRate);\r\n        this.source.buffer = this.buffer;\r\n        this.source.connect(this.analyser);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * some browsers require an explicit call to #resume before they will play back audio\r\n     */\r\n    resumeAudioContext() {\r\n        if (this.ac.state == 'suspended') {\r\n            this.ac.resume && this.ac.resume();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Whether or not this backend is currently paused\r\n     */\r\n    isPaused() {\r\n        return this.state !== this.states[PLAYING];\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration of loaded buffer\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        if (!this.buffer) {\r\n            return 0;\r\n        }\r\n        return this.buffer.duration;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     * @param {number} end Position to end at in seconds\r\n     * @return {{start: number, end: number}} Object containing start and end\r\n     * positions\r\n     */\r\n    seekTo(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        this.scheduledPause = null;\r\n\r\n        if (start == null) {\r\n            start = this.getCurrentTime();\r\n            if (start >= this.getDuration()) {\r\n                start = 0;\r\n            }\r\n        }\r\n        if (end == null) {\r\n            end = this.getDuration();\r\n        }\r\n\r\n        this.startPosition = start;\r\n        this.lastPlay = this.ac.currentTime;\r\n\r\n        if (this.state === this.states[FINISHED]) {\r\n            this.setState(PAUSED);\r\n        }\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the playback position in seconds\r\n     *\r\n     * @return {number} The playback position in seconds\r\n     */\r\n    getPlayedTime() {\r\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop relative to the beginning of a clip.\r\n     */\r\n    play(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        // need to re-create source on each playback\r\n        this.createSource();\r\n\r\n        const adjustedTime = this.seekTo(start, end);\r\n\r\n        start = adjustedTime.start;\r\n        end = adjustedTime.end;\r\n\r\n        this.scheduledPause = end;\r\n\r\n        this.source.start(0, start);\r\n\r\n        this.resumeAudioContext();\r\n\r\n        this.setState(PLAYING);\r\n\r\n        this.fireEvent('play');\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     */\r\n    pause() {\r\n        this.scheduledPause = null;\r\n\r\n        this.startPosition += this.getPlayedTime();\r\n        try {\r\n            this.source && this.source.stop(0);\r\n        } catch (err) {\r\n            // Calling stop can throw the following 2 errors:\r\n            // - RangeError (The value specified for when is negative.)\r\n            // - InvalidStateNode (The node has not been started by calling start().)\r\n            // We can safely ignore both errors, because:\r\n            // - The range is surely correct\r\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\r\n        }\r\n\r\n        this.setState(PAUSED);\r\n\r\n        this.fireEvent('pause');\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} The current time in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.state.getCurrentTime.call(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\r\n     *\r\n     * @return {number} The current playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value The playback rate to use\r\n     */\r\n    setPlaybackRate(value) {\r\n        this.playbackRate = value || 1;\r\n        this.source && this.source.playbackRate.setValueAtTime(\r\n            this.playbackRate,\r\n            this.ac.currentTime\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} end Position to end at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(end) {\r\n        this.scheduledPause = end;\r\n    }\r\n}\r\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",""],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","getFillStyle","ctx","color","waveGradient","createLinearGradient","forEach","value","index","addColorStop","length","vertical","setTransform","x","y","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","util","withOrientation","pixelRatio","lastPos","wrapper","el","styles","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","newWidth","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","frame","prepareDraw","hasMinVals","ch","undefined","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","setFillStyles","applyCanvasTransforms","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","Array","channels","filteredChannels","filter","c","hideChannel","overlay","setHeight","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","call","val","all","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","resumeAudioContext","destroyWebAudio","MediaElement","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","values","ProgressHandler","instance","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","key","responseType","fetchOptions","method","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","func","args","getId","prefix","random","toString","substring","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","handler","apply","setTimeout","eventNames","_isDisabledEventEmission","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","prototype","hasOwnProperty","isProxy","Symbol","Proxy","obj","receiver","bind","set","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","PluginClass","ws","WaveSurfer","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","xhr","assign","defaultParams","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","backends","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","init","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","isWebAudioBackend","oldScrollParent","getPlaybackRate","setMute","mute","filters","channelIdx","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","cancel","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","wavesurfer","__VERSION__","PLAYING","PAUSED","FINISHED","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","stateBehaviors","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"sourceRoot":""}