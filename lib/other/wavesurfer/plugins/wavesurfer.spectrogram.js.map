{"version":3,"file":"wavesurfer.spectrogram.js","mappings":"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","sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/spectrogram/fft.js","webpack://WaveSurfer.[name]/./src/plugin/spectrogram/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/before-startup","webpack://WaveSurfer.[name]/webpack/startup","webpack://WaveSurfer.[name]/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(self, function() {\nreturn ","/* eslint-disable complexity, no-redeclare, no-var, one-var */\r\n\r\n/**\r\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\r\n *\r\n * @param {Number} bufferSize Buffer size\r\n * @param {Number} sampleRate Sample rate\r\n * @param {Function} windowFunc Window function\r\n * @param {Number} alpha Alpha channel\r\n */\r\nexport default function FFT(bufferSize, sampleRate, windowFunc, alpha) {\r\n    this.bufferSize = bufferSize;\r\n    this.sampleRate = sampleRate;\r\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\r\n\r\n    this.sinTable = new Float32Array(bufferSize);\r\n    this.cosTable = new Float32Array(bufferSize);\r\n    this.windowValues = new Float32Array(bufferSize);\r\n    this.reverseTable = new Uint32Array(bufferSize);\r\n\r\n    this.peakBand = 0;\r\n    this.peak = 0;\r\n\r\n    var i;\r\n    switch (windowFunc) {\r\n        case 'bartlett':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    (2 / (bufferSize - 1)) *\r\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\r\n            }\r\n            break;\r\n        case 'bartlettHann':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    0.62 -\r\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\r\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\r\n            }\r\n            break;\r\n        case 'blackman':\r\n            alpha = alpha || 0.16;\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    (1 - alpha) / 2 -\r\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\r\n                    (alpha / 2) *\r\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\r\n            }\r\n            break;\r\n        case 'cosine':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] = Math.cos(\r\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\r\n                );\r\n            }\r\n            break;\r\n        case 'gauss':\r\n            alpha = alpha || 0.25;\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] = Math.pow(\r\n                    Math.E,\r\n                    -0.5 *\r\n                        Math.pow(\r\n                            (i - (bufferSize - 1) / 2) /\r\n                                ((alpha * (bufferSize - 1)) / 2),\r\n                            2\r\n                        )\r\n                );\r\n            }\r\n            break;\r\n        case 'hamming':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    0.54 -\r\n                    0.46 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\r\n            }\r\n            break;\r\n        case 'hann':\r\n        case undefined:\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\r\n            }\r\n            break;\r\n        case 'lanczoz':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\r\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\r\n            }\r\n            break;\r\n        case 'rectangular':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] = 1;\r\n            }\r\n            break;\r\n        case 'triangular':\r\n            for (i = 0; i < bufferSize; i++) {\r\n                this.windowValues[i] =\r\n                    (2 / bufferSize) *\r\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\r\n            }\r\n            break;\r\n        default:\r\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\r\n    }\r\n\r\n    var limit = 1;\r\n    var bit = bufferSize >> 1;\r\n    var i;\r\n\r\n    while (limit < bufferSize) {\r\n        for (i = 0; i < limit; i++) {\r\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\r\n        }\r\n\r\n        limit = limit << 1;\r\n        bit = bit >> 1;\r\n    }\r\n\r\n    for (i = 0; i < bufferSize; i++) {\r\n        this.sinTable[i] = Math.sin(-Math.PI / i);\r\n        this.cosTable[i] = Math.cos(-Math.PI / i);\r\n    }\r\n\r\n    this.calculateSpectrum = function(buffer) {\r\n        // Locally scope variables for speed up\r\n        var bufferSize = this.bufferSize,\r\n            cosTable = this.cosTable,\r\n            sinTable = this.sinTable,\r\n            reverseTable = this.reverseTable,\r\n            real = new Float32Array(bufferSize),\r\n            imag = new Float32Array(bufferSize),\r\n            bSi = 2 / this.bufferSize,\r\n            sqrt = Math.sqrt,\r\n            rval,\r\n            ival,\r\n            mag,\r\n            spectrum = new Float32Array(bufferSize / 2);\r\n\r\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\r\n\r\n        if (Math.pow(2, k) !== bufferSize) {\r\n            throw 'Invalid buffer size, must be a power of 2.';\r\n        }\r\n        if (bufferSize !== buffer.length) {\r\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\r\n                bufferSize +\r\n                ' Buffer Size: ' +\r\n                buffer.length;\r\n        }\r\n\r\n        var halfSize = 1,\r\n            phaseShiftStepReal,\r\n            phaseShiftStepImag,\r\n            currentPhaseShiftReal,\r\n            currentPhaseShiftImag,\r\n            off,\r\n            tr,\r\n            ti,\r\n            tmpReal;\r\n\r\n        for (var i = 0; i < bufferSize; i++) {\r\n            real[i] =\r\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\r\n            imag[i] = 0;\r\n        }\r\n\r\n        while (halfSize < bufferSize) {\r\n            phaseShiftStepReal = cosTable[halfSize];\r\n            phaseShiftStepImag = sinTable[halfSize];\r\n\r\n            currentPhaseShiftReal = 1;\r\n            currentPhaseShiftImag = 0;\r\n\r\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\r\n                var i = fftStep;\r\n\r\n                while (i < bufferSize) {\r\n                    off = i + halfSize;\r\n                    tr =\r\n                        currentPhaseShiftReal * real[off] -\r\n                        currentPhaseShiftImag * imag[off];\r\n                    ti =\r\n                        currentPhaseShiftReal * imag[off] +\r\n                        currentPhaseShiftImag * real[off];\r\n\r\n                    real[off] = real[i] - tr;\r\n                    imag[off] = imag[i] - ti;\r\n                    real[i] += tr;\r\n                    imag[i] += ti;\r\n\r\n                    i += halfSize << 1;\r\n                }\r\n\r\n                tmpReal = currentPhaseShiftReal;\r\n                currentPhaseShiftReal =\r\n                    tmpReal * phaseShiftStepReal -\r\n                    currentPhaseShiftImag * phaseShiftStepImag;\r\n                currentPhaseShiftImag =\r\n                    tmpReal * phaseShiftStepImag +\r\n                    currentPhaseShiftImag * phaseShiftStepReal;\r\n            }\r\n\r\n            halfSize = halfSize << 1;\r\n        }\r\n\r\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\r\n            rval = real[i];\r\n            ival = imag[i];\r\n            mag = bSi * sqrt(rval * rval + ival * ival);\r\n\r\n            if (mag > this.peak) {\r\n                this.peakBand = i;\r\n                this.peak = mag;\r\n            }\r\n            spectrum[i] = mag;\r\n        }\r\n        return spectrum;\r\n    };\r\n}\r\n","/* eslint-enable complexity, no-redeclare, no-var, one-var */\r\n\r\nimport FFT from './fft';\r\n\r\n/**\r\n * @typedef {Object} SpectrogramPluginParams\r\n * @property {string|HTMLElement} container Selector of element or element in\r\n * which to render\r\n * @property {number} fftSamples=512 Number of samples to fetch to FFT. Must be\r\n * a power of 2.\r\n * @property {boolean} labels Set to true to display frequency labels.\r\n * @property {number} noverlap Size of the overlapping window. Must be <\r\n * fftSamples. Auto deduced from canvas size by default.\r\n * @property {string} windowFunc='hann' The window function to be used. One of\r\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\r\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\r\n * @property {?number} alpha Some window functions have this extra value.\r\n * (Between 0 and 1)\r\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\r\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\r\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * `initPlugin('spectrogram')`\r\n * @property {?number[][]} colorMap A 256 long array of 4-element arrays.\r\n * Each entry should contain a float between 0 and 1 and specify\r\n * r, g, b, and alpha.\r\n */\r\n\r\n/**\r\n * Render a spectrogram visualisation of the audio.\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n * @example\r\n * // es6\r\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\r\n *\r\n * // commonjs\r\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\r\n *\r\n * // if you are using <script> tags\r\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     SpectrogramPlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class SpectrogramPlugin {\r\n    /**\r\n     * Spectrogram plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param  {SpectrogramPluginParams} params Parameters used to initialise the plugin\r\n     * @return {PluginDefinition} An object representing the plugin.\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'spectrogram',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            staticProps: {\r\n                FFT: FFT\r\n            },\r\n            instance: SpectrogramPlugin\r\n        };\r\n    }\r\n\r\n    constructor(params, ws) {\r\n        this.params = params;\r\n        this.wavesurfer = ws;\r\n        this.util = ws.util;\r\n\r\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\r\n        this._onScroll = e => {\r\n            this.updateScroll(e);\r\n        };\r\n        this._onRender = () => {\r\n            this.render();\r\n        };\r\n        this._onWrapperClick = e => {\r\n            this._wrapperClickHandler(e);\r\n        };\r\n        this._onReady = () => {\r\n            const drawer = (this.drawer = ws.drawer);\r\n\r\n            this.container =\r\n                'string' == typeof params.container\r\n                    ? document.querySelector(params.container)\r\n                    : params.container;\r\n\r\n            if (!this.container) {\r\n                throw Error('No container for WaveSurfer spectrogram');\r\n            }\r\n            if (params.colorMap) {\r\n                if (params.colorMap.length < 256) {\r\n                    throw new Error('Colormap must contain 256 elements');\r\n                }\r\n                for (let i = 0; i < params.colorMap.length; i++) {\r\n                    const cmEntry = params.colorMap[i];\r\n                    if (cmEntry.length !== 4) {\r\n                        throw new Error(\r\n                            'ColorMap entries must contain 4 values'\r\n                        );\r\n                    }\r\n                }\r\n                this.colorMap = params.colorMap;\r\n            } else {\r\n                this.colorMap = [];\r\n                for (let i = 0; i < 256; i++) {\r\n                    const val = (255 - i) / 256;\r\n                    this.colorMap.push([val, val, val, 1]);\r\n                }\r\n            }\r\n            this.width = drawer.width;\r\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\r\n            this.fftSamples =\r\n                this.params.fftSamples || ws.params.fftSamples || 512;\r\n            this.height = this.fftSamples / 2;\r\n            this.noverlap = params.noverlap;\r\n            this.windowFunc = params.windowFunc;\r\n            this.alpha = params.alpha;\r\n\r\n            this.createWrapper();\r\n            this.createCanvas();\r\n            this.render();\r\n\r\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\r\n            ws.on('redraw', this._onRender);\r\n        };\r\n    }\r\n\r\n    init() {\r\n        // Check if wavesurfer is ready\r\n        if (this.wavesurfer.isReady) {\r\n            this._onReady();\r\n        } else {\r\n            this.wavesurfer.once('ready', this._onReady);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.unAll();\r\n        this.wavesurfer.un('ready', this._onReady);\r\n        this.wavesurfer.un('redraw', this._onRender);\r\n        this.drawer && this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\r\n        this.wavesurfer = null;\r\n        this.util = null;\r\n        this.params = null;\r\n        if (this.wrapper) {\r\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\r\n            this.wrapper.parentNode.removeChild(this.wrapper);\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    createWrapper() {\r\n        const prevSpectrogram = this.container.querySelector('spectrogram');\r\n        if (prevSpectrogram) {\r\n            this.container.removeChild(prevSpectrogram);\r\n        }\r\n        const wsParams = this.wavesurfer.params;\r\n        this.wrapper = document.createElement('spectrogram');\r\n        // if labels are active\r\n        if (this.params.labels) {\r\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\r\n            labelsEl.classList.add('spec-labels');\r\n            this.drawer.style(labelsEl, {\r\n                left: 0,\r\n                position: 'absolute',\r\n                zIndex: 9,\r\n                height: `${this.height / this.pixelRatio}px`,\r\n                width: `${55 / this.pixelRatio}px`\r\n            });\r\n            this.wrapper.appendChild(labelsEl);\r\n            this.loadLabels(\r\n                'rgba(68,68,68,0.5)',\r\n                '12px',\r\n                '10px',\r\n                '',\r\n                '#fff',\r\n                '#f7f7f7',\r\n                'center',\r\n                '#specLabels'\r\n            );\r\n        }\r\n\r\n        this.drawer.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: `${this.height / this.pixelRatio}px`\r\n        });\r\n\r\n        if (wsParams.fillParent || wsParams.scrollParent) {\r\n            this.drawer.style(this.wrapper, {\r\n                width: '100%',\r\n                overflowX: 'hidden',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n        this.container.appendChild(this.wrapper);\r\n\r\n        this.wrapper.addEventListener('click', this._onWrapperClick);\r\n    }\r\n\r\n    _wrapperClickHandler(event) {\r\n        event.preventDefault();\r\n        const relX = 'offsetX' in event ? event.offsetX : event.layerX;\r\n        this.fireEvent('click', relX / this.width || 0);\r\n    }\r\n\r\n    createCanvas() {\r\n        const canvas = (this.canvas = this.wrapper.appendChild(\r\n            document.createElement('canvas')\r\n        ));\r\n\r\n        this.spectrCc = canvas.getContext('2d');\r\n\r\n        this.util.style(canvas, {\r\n            position: 'absolute',\r\n            zIndex: 4\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.updateCanvasStyle();\r\n\r\n        if (this.frequenciesDataUrl) {\r\n            this.loadFrequenciesData(this.frequenciesDataUrl);\r\n        } else {\r\n            this.getFrequencies(this.drawSpectrogram);\r\n        }\r\n    }\r\n\r\n    updateCanvasStyle() {\r\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n        this.canvas.style.width = width;\r\n    }\r\n\r\n    drawSpectrogram(frequenciesData, my) {\r\n        const spectrCc = my.spectrCc;\r\n        const height = my.height;\r\n        const width = my.width;\r\n        const pixels = my.resample(frequenciesData);\r\n        const heightFactor = my.buffer ? 2 / my.buffer.numberOfChannels : 1;\r\n        if (spectrCc) {\r\n            const imageData = spectrCc.createImageData(width, height);\r\n            let i;\r\n            let j;\r\n            let k;\r\n\r\n            for (i = 0; i < pixels.length; i++) {\r\n                for (j = 0; j < pixels[i].length; j++) {\r\n                    const colorMap = my.colorMap[pixels[i][j]];\r\n                    /* eslint-disable max-depth */\r\n                    for (k = 0; k < heightFactor; k++) {\r\n                        let y = height - j * heightFactor;\r\n                        if (heightFactor === 2 && k === 1) {\r\n                            y--;\r\n                        }\r\n                        const redIndex = y * (width * 4) + i * 4;\r\n                        imageData.data[redIndex] = colorMap[0] * 255;\r\n                        imageData.data[redIndex + 1] = colorMap[1] * 255;\r\n                        imageData.data[redIndex + 2] = colorMap[2] * 255;\r\n                        imageData.data[redIndex + 3] = colorMap[3] * 255;\r\n                    }\r\n                    /* eslint-enable max-depth */\r\n                }\r\n            }\r\n            spectrCc.putImageData(imageData, 0, 0);\r\n        }\r\n    }\r\n\r\n    getFrequencies(callback) {\r\n        const fftSamples = this.fftSamples;\r\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\r\n        const channelOne = buffer.getChannelData(0);\r\n        const bufferLength = buffer.length;\r\n        const sampleRate = buffer.sampleRate;\r\n        const frequencies = [];\r\n\r\n        if (!buffer) {\r\n            this.fireEvent('error', 'Web Audio buffer is not available');\r\n            return;\r\n        }\r\n\r\n        let noverlap = this.noverlap;\r\n        if (!noverlap) {\r\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\r\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\r\n        }\r\n\r\n        const fft = new FFT(\r\n            fftSamples,\r\n            sampleRate,\r\n            this.windowFunc,\r\n            this.alpha\r\n        );\r\n        const maxSlicesCount = Math.floor(\r\n            bufferLength / (fftSamples - noverlap)\r\n        );\r\n        let currentOffset = 0;\r\n\r\n        while (currentOffset + fftSamples < channelOne.length) {\r\n            const segment = channelOne.slice(\r\n                currentOffset,\r\n                currentOffset + fftSamples\r\n            );\r\n            const spectrum = fft.calculateSpectrum(segment);\r\n            const array = new Uint8Array(fftSamples / 2);\r\n            let j;\r\n            for (j = 0; j < fftSamples / 2; j++) {\r\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\r\n            }\r\n            frequencies.push(array);\r\n            currentOffset += fftSamples - noverlap;\r\n        }\r\n        callback(frequencies, this);\r\n    }\r\n\r\n    loadFrequenciesData(url) {\r\n        const request = this.util.fetchFile({ url: url });\r\n\r\n        request.on('success', data =>\r\n            this.drawSpectrogram(JSON.parse(data), this)\r\n        );\r\n        request.on('error', e => this.fireEvent('error', e));\r\n\r\n        return request;\r\n    }\r\n\r\n    freqType(freq) {\r\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\r\n    }\r\n\r\n    unitType(freq) {\r\n        return freq >= 1000 ? 'KHz' : 'Hz';\r\n    }\r\n\r\n    loadLabels(\r\n        bgFill,\r\n        fontSizeFreq,\r\n        fontSizeUnit,\r\n        fontType,\r\n        textColorFreq,\r\n        textColorUnit,\r\n        textAlign,\r\n        container\r\n    ) {\r\n        const frequenciesHeight = this.height;\r\n        bgFill = bgFill || 'rgba(68,68,68,0)';\r\n        fontSizeFreq = fontSizeFreq || '12px';\r\n        fontSizeUnit = fontSizeUnit || '10px';\r\n        fontType = fontType || 'Helvetica';\r\n        textColorFreq = textColorFreq || '#fff';\r\n        textColorUnit = textColorUnit || '#fff';\r\n        textAlign = textAlign || 'center';\r\n        container = container || '#specLabels';\r\n        const bgWidth = 55;\r\n        const getMaxY = frequenciesHeight || 512;\r\n        const labelIndex = 5 * (getMaxY / 256);\r\n        const freqStart = 0;\r\n        const step =\r\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\r\n            labelIndex;\r\n\r\n        // prepare canvas element for labels\r\n        const ctx = this.labelsEl.getContext('2d');\r\n        this.labelsEl.height = this.height;\r\n        this.labelsEl.width = bgWidth;\r\n\r\n        if (ctx) {\r\n            // fill background\r\n            ctx.fillStyle = bgFill;\r\n            ctx.fillRect(0, 0, bgWidth, getMaxY);\r\n            ctx.fill();\r\n            let i;\r\n\r\n            // render labels\r\n            for (i = 0; i <= labelIndex; i++) {\r\n                ctx.textAlign = textAlign;\r\n                ctx.textBaseline = 'middle';\r\n\r\n                const freq = freqStart + step * i;\r\n                const index = Math.round(\r\n                    (freq / (this.sampleRate / 2)) * this.fftSamples\r\n                );\r\n                const label = this.freqType(freq);\r\n                const units = this.unitType(freq);\r\n                const yLabelOffset = 2;\r\n                const x = 16;\r\n                let y;\r\n\r\n                if (i == 0) {\r\n                    y = getMaxY + i - 10;\r\n                    // unit label\r\n                    ctx.fillStyle = textColorUnit;\r\n                    ctx.font = fontSizeUnit + ' ' + fontType;\r\n                    ctx.fillText(units, x + 24, y);\r\n                    // freq label\r\n                    ctx.fillStyle = textColorFreq;\r\n                    ctx.font = fontSizeFreq + ' ' + fontType;\r\n                    ctx.fillText(label, x, y);\r\n                } else {\r\n                    y = getMaxY - i * 50 + yLabelOffset;\r\n                    // unit label\r\n                    ctx.fillStyle = textColorUnit;\r\n                    ctx.font = fontSizeUnit + ' ' + fontType;\r\n                    ctx.fillText(units, x + 24, y);\r\n                    // freq label\r\n                    ctx.fillStyle = textColorFreq;\r\n                    ctx.font = fontSizeFreq + ' ' + fontType;\r\n                    ctx.fillText(label, x, y);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateScroll(e) {\r\n        if (this.wrapper) {\r\n            this.wrapper.scrollLeft = e.target.scrollLeft;\r\n        }\r\n    }\r\n\r\n    resample(oldMatrix) {\r\n        const columnsNumber = this.width;\r\n        const newMatrix = [];\r\n\r\n        const oldPiece = 1 / oldMatrix.length;\r\n        const newPiece = 1 / columnsNumber;\r\n        let i;\r\n\r\n        for (i = 0; i < columnsNumber; i++) {\r\n            const column = new Array(oldMatrix[0].length);\r\n            let j;\r\n\r\n            for (j = 0; j < oldMatrix.length; j++) {\r\n                const oldStart = j * oldPiece;\r\n                const oldEnd = oldStart + oldPiece;\r\n                const newStart = i * newPiece;\r\n                const newEnd = newStart + newPiece;\r\n\r\n                const overlap =\r\n                    oldEnd <= newStart || newEnd <= oldStart\r\n                        ? 0\r\n                        : Math.min(\r\n                            Math.max(oldEnd, newStart),\r\n                            Math.max(newEnd, oldStart)\r\n                        ) -\r\n                        Math.max(\r\n                            Math.min(oldEnd, newStart),\r\n                            Math.min(newEnd, oldStart)\r\n                        );\r\n                let k;\r\n                /* eslint-disable max-depth */\r\n                if (overlap > 0) {\r\n                    for (k = 0; k < oldMatrix[0].length; k++) {\r\n                        if (column[k] == null) {\r\n                            column[k] = 0;\r\n                        }\r\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\r\n                    }\r\n                }\r\n                /* eslint-enable max-depth */\r\n            }\r\n\r\n            const intColumn = new Uint8Array(oldMatrix[0].length);\r\n            let m;\r\n\r\n            for (m = 0; m < oldMatrix[0].length; m++) {\r\n                intColumn[m] = column[m];\r\n            }\r\n\r\n            newMatrix.push(intColumn);\r\n        }\r\n\r\n        return newMatrix;\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/spectrogram/index.js\");\n",""],"names":["FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","length","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","SpectrogramPlugin","params","ws","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onRender","render","_onWrapperClick","_wrapperClickHandler","_onReady","drawer","container","document","querySelector","colorMap","cmEntry","val","push","width","pixelRatio","fftSamples","height","noverlap","createWrapper","createCanvas","wrapper","addEventListener","on","isReady","once","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","event","preventDefault","relX","offsetX","layerX","fireEvent","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","pixels","resample","heightFactor","numberOfChannels","imageData","createImageData","j","y","redIndex","data","putImageData","callback","backend","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","maxSlicesCount","currentOffset","segment","slice","array","Uint8Array","log10","url","request","fetchFile","JSON","parse","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","frequenciesHeight","bgWidth","getMaxY","labelIndex","freqStart","step","ac","ctx","fillStyle","fillRect","fill","textBaseline","index","label","freqType","units","unitType","yLabelOffset","x","font","fillText","scrollLeft","target","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m","name","deferInit","staticProps","instance"],"sourceRoot":""}