{"version":3,"file":"wavesurfer.regions.js","mappings":"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","sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/regions/index.js","webpack://WaveSurfer.[name]/./src/plugin/regions/region.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/before-startup","webpack://WaveSurfer.[name]/webpack/startup","webpack://WaveSurfer.[name]/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(self, function() {\nreturn ","/**\r\n *  @since 4.0.0 This class has been split\r\n *\r\n * @typedef {Object} RegionsPluginParams\r\n * @property {?boolean} dragSelection Enable creating regions by dragging with\r\n * the mouse\r\n * @property {?RegionParams[]} regions Regions that should be added upon\r\n * initialisation\r\n * @property {number} slop=2 The sensitivity of the mouse dragging\r\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\r\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\r\n * `initPlugin('regions')`\r\n * @property {function} formatTimeCallback Allows custom formating for region tooltip.\r\n * @property {?number} edgeScrollWidth='5% from container edges' Optional width for edgeScroll to start\r\n */\r\n\r\n/**\r\n * @typedef {Object} RegionParams\r\n * @desc The parameters used to describe a region.\r\n * @example wavesurfer.addRegion(regionParams);\r\n * @property {string} id=→random The id of the region\r\n * @property {number} start=0 The start position of the region (in seconds).\r\n * @property {number} end=0 The end position of the region (in seconds).\r\n * @property {?boolean} loop Whether to loop the region when played back.\r\n * @property {boolean} drag=true Allow/disallow dragging the region.\r\n * @property {boolean} resize=true Allow/disallow resizing the region.\r\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\r\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\r\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\r\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\r\n * @property {boolean} showTooltip=true Enable/disable tooltip displaying start and end times when hovering over region.\r\n */\r\n\r\nimport {Region} from \"./region.js\";\r\n\r\n/**\r\n * Regions are visual overlays on waveform that can be used to play and loop\r\n * portions of audio. Regions can be dragged and resized.\r\n *\r\n * Visual customization is possible via CSS (using the selectors\r\n * `.wavesurfer-region` and `.wavesurfer-handle`).\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n *\r\n * @example\r\n * // es6\r\n * import RegionsPlugin from 'wavesurfer.regions.js';\r\n *\r\n * // commonjs\r\n * var RegionsPlugin = require('wavesurfer.regions.js');\r\n *\r\n * // if you are using <script> tags\r\n * var RegionsPlugin = window.WaveSurfer.regions;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     RegionsPlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class RegionsPlugin {\r\n    /**\r\n     * Regions plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'regions',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            staticProps: {\r\n                addRegion(options) {\r\n                    if (!this.initialisedPluginList.regions) {\r\n                        this.initPlugin('regions');\r\n                    }\r\n                    return this.regions.add(options);\r\n                },\r\n\r\n                clearRegions() {\r\n                    this.regions && this.regions.clear();\r\n                },\r\n\r\n                enableDragSelection(options) {\r\n                    if (!this.initialisedPluginList.regions) {\r\n                        this.initPlugin('regions');\r\n                    }\r\n                    this.regions.enableDragSelection(options);\r\n                },\r\n\r\n                disableDragSelection() {\r\n                    this.regions.disableDragSelection();\r\n                }\r\n            },\r\n            instance: RegionsPlugin\r\n        };\r\n    }\r\n\r\n    constructor(params, ws) {\r\n        this.params = params;\r\n        this.wavesurfer = ws;\r\n        this.util = {\r\n            ...ws.util,\r\n            getRegionSnapToGridValue: value => {\r\n                return this.getRegionSnapToGridValue(value, params);\r\n            }\r\n        };\r\n        this.maxRegions = params.maxRegions;\r\n        this.regionsMinLength = params.regionsMinLength || null;\r\n\r\n        // turn the plugin instance into an observer\r\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n            this.util.Observer.prototype\r\n        );\r\n        observerPrototypeKeys.forEach(key => {\r\n            Region.prototype[key] = this.util.Observer.prototype[key];\r\n        });\r\n        this.wavesurfer.Region = Region;\r\n\r\n        // By default, scroll the container if the user drags a region\r\n        // within 5% (based on its initial size) of its edge\r\n        const scrollWidthProportion = 0.05;\r\n        this._onBackendCreated = () => {\r\n            this.wrapper = this.wavesurfer.drawer.wrapper;\r\n            this.orientation = this.wavesurfer.drawer.orientation;\r\n            this.defaultEdgeScrollWidth = this.wrapper.clientWidth * scrollWidthProportion;\r\n            if (this.params.regions) {\r\n                this.params.regions.forEach(region => {\r\n                    this.add(region);\r\n                });\r\n            }\r\n        };\r\n\r\n        // Id-based hash of regions\r\n        this.list = {};\r\n        this._onReady = () => {\r\n            this.wrapper = this.wavesurfer.drawer.wrapper;\r\n            this.vertical = this.wavesurfer.drawer.params.vertical;\r\n            if (this.params.dragSelection) {\r\n                this.enableDragSelection(this.params);\r\n            }\r\n            Object.keys(this.list).forEach(id => {\r\n                this.list[id].updateRender();\r\n            });\r\n        };\r\n    }\r\n\r\n    init() {\r\n        // Check if ws is ready\r\n        if (this.wavesurfer.isReady) {\r\n            this._onBackendCreated();\r\n            this._onReady();\r\n        } else {\r\n            this.wavesurfer.once('ready', this._onReady);\r\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.wavesurfer.un('ready', this._onReady);\r\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\r\n        // Disabling `region-removed' because destroying the plugin calls\r\n        // the Region.remove() method that is also used to remove regions based\r\n        // on user input. This can cause confusion since teardown is not a\r\n        // user event, but would emit `region-removed` as if it was.\r\n        this.wavesurfer.setDisabledEventEmissions(['region-removed']);\r\n        this.disableDragSelection();\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * check to see if adding a new region would exceed maxRegions\r\n     * @return {boolean} whether we should proceed and create a region\r\n     * @private\r\n     */\r\n    wouldExceedMaxRegions() {\r\n        return (\r\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Add a region\r\n     *\r\n     * @param {object} params Region parameters\r\n     * @return {Region} The created region\r\n     */\r\n    add(params) {\r\n        if (this.wouldExceedMaxRegions()) {\r\n            return null;\r\n        }\r\n\r\n        params = {\r\n            edgeScrollWidth: this.params.edgeScrollWidth || this.defaultEdgeScrollWidth,\r\n            ...params\r\n        };\r\n\r\n        // Take formatTimeCallback from plugin params if not already set\r\n        if (!params.formatTimeCallback && this.params.formatTimeCallback) {\r\n            params = {...params, formatTimeCallback: this.params.formatTimeCallback};\r\n        }\r\n\r\n        if (!params.minLength && this.regionsMinLength) {\r\n            params = {...params, minLength: this.regionsMinLength};\r\n        }\r\n\r\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\r\n\r\n        this.list[region.id] = region;\r\n\r\n        region.on('remove', () => {\r\n            delete this.list[region.id];\r\n        });\r\n\r\n        return region;\r\n    }\r\n\r\n    /**\r\n     * Remove all regions\r\n     */\r\n    clear() {\r\n        Object.keys(this.list).forEach(id => {\r\n            this.list[id].remove();\r\n        });\r\n    }\r\n\r\n    enableDragSelection(params) {\r\n        this.disableDragSelection();\r\n\r\n        const slop = params.slop || 2;\r\n        const container = this.wavesurfer.drawer.container;\r\n        const scroll =\r\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\r\n        const scrollSpeed = params.scrollSpeed || 1;\r\n        const scrollThreshold = params.scrollThreshold || 10;\r\n        let drag;\r\n        let duration = this.wavesurfer.getDuration();\r\n        let maxScroll;\r\n        let start;\r\n        let region;\r\n        let touchId;\r\n        let pxMove = 0;\r\n        let scrollDirection;\r\n        let wrapperRect;\r\n\r\n        // Scroll when the user is dragging within the threshold\r\n        const edgeScroll = e => {\r\n            if (!region || !scrollDirection) {\r\n                return;\r\n            }\r\n\r\n            // Update scroll position\r\n            let scrollLeft =\r\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\r\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\r\n                maxScroll,\r\n                Math.max(0, scrollLeft)\r\n            );\r\n\r\n            // Update range\r\n            const end = this.wavesurfer.drawer.handleEvent(e);\r\n            region.update({\r\n                start: Math.min(end * duration, start * duration),\r\n                end: Math.max(end * duration, start * duration)\r\n            });\r\n\r\n            // Check that there is more to scroll and repeat\r\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\r\n                window.requestAnimationFrame(() => {\r\n                    edgeScroll(e);\r\n                });\r\n            }\r\n        };\r\n\r\n        const eventDown = e => {\r\n            if (e.touches && e.touches.length > 1) {\r\n                return;\r\n            }\r\n            duration = this.wavesurfer.getDuration();\r\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\r\n\r\n            // Store for scroll calculations\r\n            maxScroll = this.wrapper.scrollWidth -\r\n                this.wrapper.clientWidth;\r\n            wrapperRect = this.util.withOrientation(\r\n                this.wrapper.getBoundingClientRect(),\r\n                this.vertical\r\n            );\r\n\r\n            // set the region channel index based on the clicked area\r\n            if (this.wavesurfer.params.splitChannels) {\r\n                const y = (e.touches ? e.touches[0].clientY : e.clientY) - wrapperRect.top;\r\n                const channelCount = this.wavesurfer.backend.buffer != null ? this.wavesurfer.backend.buffer.numberOfChannels : 1;\r\n                const channelHeight = this.wrapper.clientHeight / channelCount;\r\n                const channelIdx = Math.floor(y / channelHeight);\r\n                params.channelIdx = channelIdx;\r\n                const channelColors = this.wavesurfer.params.splitChannelsOptions.channelColors[channelIdx];\r\n                if (channelColors && channelColors.dragColor) {\r\n                    params.color = channelColors.dragColor;\r\n                }\r\n            }\r\n\r\n            drag = true;\r\n            start = this.wavesurfer.drawer.handleEvent(e, true);\r\n            region = null;\r\n            scrollDirection = null;\r\n        };\r\n        this.wrapper.addEventListener('mousedown', eventDown);\r\n        this.wrapper.addEventListener('touchstart', eventDown);\r\n        this.on('disable-drag-selection', () => {\r\n            this.wrapper.removeEventListener('touchstart', eventDown);\r\n            this.wrapper.removeEventListener('mousedown', eventDown);\r\n        });\r\n\r\n        const eventUp = e => {\r\n            if (e.touches && e.touches.length > 1) {\r\n                return;\r\n            }\r\n\r\n            drag = false;\r\n            pxMove = 0;\r\n            scrollDirection = null;\r\n\r\n            if (region) {\r\n                this.util.preventClick();\r\n                region.fireEvent('update-end', e);\r\n                this.wavesurfer.fireEvent('region-update-end', region, e);\r\n            }\r\n\r\n            region = null;\r\n        };\r\n        this.wrapper.addEventListener('mouseleave', eventUp);\r\n        this.wrapper.addEventListener('mouseup', eventUp);\r\n        this.wrapper.addEventListener('touchend', eventUp);\r\n\r\n        document.body.addEventListener('mouseup', eventUp);\r\n        document.body.addEventListener('touchend', eventUp);\r\n        this.on('disable-drag-selection', () => {\r\n            document.body.removeEventListener('mouseup', eventUp);\r\n            document.body.removeEventListener('touchend', eventUp);\r\n            this.wrapper.removeEventListener('touchend', eventUp);\r\n            this.wrapper.removeEventListener('mouseup', eventUp);\r\n            this.wrapper.removeEventListener('mouseleave', eventUp);\r\n        });\r\n\r\n        const eventMove = event => {\r\n            if (!drag) {\r\n                return;\r\n            }\r\n            if (++pxMove <= slop) {\r\n                return;\r\n            }\r\n\r\n            if (event.touches && event.touches.length > 1) {\r\n                return;\r\n            }\r\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\r\n                return;\r\n            }\r\n\r\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\r\n            if (!region) {\r\n                region = this.add(params || {});\r\n                if (!region) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const end = this.wavesurfer.drawer.handleEvent(event);\r\n            const startUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                start * duration\r\n            );\r\n            const endUpdate = this.wavesurfer.regions.util.getRegionSnapToGridValue(\r\n                end * duration\r\n            );\r\n            region.update({\r\n                start: Math.min(endUpdate, startUpdate),\r\n                end: Math.max(endUpdate, startUpdate)\r\n            });\r\n\r\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\r\n\r\n            // If scrolling is enabled\r\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\r\n                // Check threshold based on mouse\r\n                const x = orientedEvent.clientX - wrapperRect.left;\r\n                if (x <= scrollThreshold) {\r\n                    scrollDirection = -1;\r\n                } else if (x >= wrapperRect.right - scrollThreshold) {\r\n                    scrollDirection = 1;\r\n                } else {\r\n                    scrollDirection = null;\r\n                }\r\n                scrollDirection && edgeScroll(event);\r\n            }\r\n        };\r\n        this.wrapper.addEventListener('mousemove', eventMove);\r\n        this.wrapper.addEventListener('touchmove', eventMove);\r\n        this.on('disable-drag-selection', () => {\r\n            this.wrapper.removeEventListener('touchmove', eventMove);\r\n            this.wrapper.removeEventListener('mousemove', eventMove);\r\n        });\r\n\r\n        this.wavesurfer.on('region-created', region => {\r\n            if (this.regionsMinLength) {\r\n                region.minLength = this.regionsMinLength;\r\n            }\r\n        });\r\n    }\r\n\r\n    disableDragSelection() {\r\n        this.fireEvent('disable-drag-selection');\r\n    }\r\n\r\n    /**\r\n     * Get current region\r\n     *\r\n     * The smallest region that contains the current time. If several such\r\n     * regions exist, take the first. Return `null` if none exist.\r\n     *\r\n     * @returns {Region} The current region\r\n     */\r\n    getCurrentRegion() {\r\n        const time = this.wavesurfer.getCurrentTime();\r\n        let min = null;\r\n        Object.keys(this.list).forEach(id => {\r\n            const cur = this.list[id];\r\n            if (cur.start <= time && cur.end >= time) {\r\n                if (!min || cur.end - cur.start < min.end - min.start) {\r\n                    min = cur;\r\n                }\r\n            }\r\n        });\r\n\r\n        return min;\r\n    }\r\n\r\n    /**\r\n     * Match the value to the grid, if required\r\n     *\r\n     * If the regions plugin params have a snapToGridInterval set, return the\r\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\r\n     * the passed value will be returned without modification.\r\n     *\r\n     * @param {number} value the value to snap to the grid, if needed\r\n     * @param {Object} params the regions plugin params\r\n     * @returns {number} value\r\n     */\r\n    getRegionSnapToGridValue(value, params) {\r\n        if (params.snapToGridInterval) {\r\n            // the regions should snap to a grid\r\n            const offset = params.snapToGridOffset || 0;\r\n            return (\r\n                Math.round((value - offset) / params.snapToGridInterval) *\r\n                    params.snapToGridInterval +\r\n                offset\r\n            );\r\n        }\r\n\r\n        // no snap-to-grid\r\n        return value;\r\n    }\r\n}\r\n","/**\r\n *  @since 4.0.0\r\n *\r\n * (Single) Region plugin class\r\n *\r\n * Must be turned into an observer before instantiating. This is done in\r\n * `RegionsPlugin` (main plugin class).\r\n *\r\n * @extends {Observer}\r\n */\r\nexport class Region {\r\n    constructor(params, regionsUtils, ws) {\r\n        this.wavesurfer = ws;\r\n        this.wrapper = ws.drawer.wrapper;\r\n        this.util = ws.util;\r\n        this.style = this.util.style;\r\n        this.regionsUtil = regionsUtils;\r\n        this.vertical = ws.drawer.params.vertical;\r\n\r\n        this.id = params.id == null ? ws.util.getId() : params.id;\r\n        this.start = Number(params.start) || 0;\r\n        this.end =\r\n            params.end == null\r\n                ? // small marker-like region\r\n                this.start +\r\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\r\n                : Number(params.end);\r\n        this.resize =\r\n            params.resize === undefined ? true : Boolean(params.resize);\r\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\r\n        // reflect resize and drag state of region for region-updated listener\r\n        this.isResizing = false;\r\n        this.isDragging = false;\r\n        this.loop = Boolean(params.loop);\r\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\r\n        // The left and right handleStyle properties can be set to 'none' for\r\n        // no styling or can be assigned an object containing CSS properties.\r\n        this.handleStyle = params.handleStyle || {\r\n            left: {},\r\n            right: {}\r\n        };\r\n        this.handleLeftEl = null;\r\n        this.handleRightEl = null;\r\n        this.data = params.data || {};\r\n        this.attributes = params.attributes || {};\r\n        this.showTooltip = params.showTooltip ?? true;\r\n\r\n        this.maxLength = params.maxLength;\r\n        // It assumes the minLength parameter value, or the regionsMinLength parameter value, if the first one not provided\r\n        this.minLength = params.minLength;\r\n        this._onRedraw = () => this.updateRender();\r\n\r\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\r\n        this.scrollSpeed = params.scrollSpeed || 1;\r\n        this.scrollThreshold = params.scrollThreshold || 10;\r\n        // Determines whether the context menu is prevented from being opened.\r\n        this.preventContextMenu =\r\n            params.preventContextMenu === undefined\r\n                ? false\r\n                : Boolean(params.preventContextMenu);\r\n\r\n        // select channel ID to set region\r\n        let channelIdx =\r\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\r\n        this.channelIdx = channelIdx;\r\n        this.regionHeight = '100%';\r\n        this.marginTop = '0px';\r\n\r\n        if (channelIdx !== -1) {\r\n            let channelCount =\r\n                this.wavesurfer.backend.buffer != null\r\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\r\n                    : -1;\r\n            if (channelCount >= 0 && channelIdx < channelCount) {\r\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\r\n                this.marginTop =\r\n                    this.wavesurfer.getHeight() * channelIdx + 'px';\r\n            }\r\n        }\r\n\r\n        this.formatTimeCallback = params.formatTimeCallback;\r\n        this.edgeScrollWidth = params.edgeScrollWidth;\r\n        this.bindInOut();\r\n        this.render();\r\n        this.wavesurfer.on('zoom', this._onRedraw);\r\n        this.wavesurfer.on('redraw', this._onRedraw);\r\n        this.wavesurfer.fireEvent('region-created', this);\r\n    }\r\n\r\n    /* Update region params. */\r\n    update(params, eventParams) {\r\n        if (params.start != null) {\r\n            this.start = Number(params.start);\r\n        }\r\n        if (params.end != null) {\r\n            this.end = Number(params.end);\r\n        }\r\n        if (params.loop != null) {\r\n            this.loop = Boolean(params.loop);\r\n        }\r\n        if (params.color != null) {\r\n            this.color = params.color;\r\n        }\r\n        if (params.handleStyle != null) {\r\n            this.handleStyle = params.handleStyle;\r\n        }\r\n        if (params.data != null) {\r\n            this.data = params.data;\r\n        }\r\n        if (params.resize != null) {\r\n            this.resize = Boolean(params.resize);\r\n            this.updateHandlesResize(this.resize);\r\n        }\r\n        if (params.drag != null) {\r\n            this.drag = Boolean(params.drag);\r\n        }\r\n        if (params.maxLength != null) {\r\n            this.maxLength = Number(params.maxLength);\r\n        }\r\n        if (params.minLength != null) {\r\n            this.minLength = Number(params.minLength);\r\n        }\r\n        if (params.attributes != null) {\r\n            this.attributes = params.attributes;\r\n        }\r\n\r\n        this.updateRender();\r\n        this.fireEvent('update');\r\n        this.wavesurfer.fireEvent('region-updated', this, eventParams);\r\n    }\r\n\r\n    /* Remove a single region. */\r\n    remove() {\r\n        if (this.element) {\r\n            this.wrapper.removeChild(this.element.domElement);\r\n            this.element = null;\r\n            this.fireEvent('remove');\r\n            this.wavesurfer.un('zoom', this._onRedraw);\r\n            this.wavesurfer.un('redraw', this._onRedraw);\r\n            this.wavesurfer.fireEvent('region-removed', this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Play the audio region.\r\n     * @param {number} start Optional offset to start playing at\r\n     */\r\n    play(start) {\r\n        const s = start || this.start;\r\n        this.wavesurfer.play(s, this.end);\r\n        this.fireEvent('play');\r\n        this.wavesurfer.fireEvent('region-play', this);\r\n    }\r\n\r\n    /**\r\n     * Play the audio region in a loop.\r\n     * @param {number} start Optional offset to start playing at\r\n     * */\r\n    playLoop(start) {\r\n        this.loop = true;\r\n        this.play(start);\r\n    }\r\n\r\n    /**\r\n     * Set looping on/off.\r\n     * @param {boolean} loop True if should play in loop\r\n     */\r\n    setLoop(loop) {\r\n        this.loop = loop;\r\n    }\r\n\r\n    /* Render a region as a DOM element. */\r\n    render() {\r\n        this.element = this.util.withOrientation(\r\n            this.wrapper.appendChild(document.createElement('region')),\r\n            this.vertical\r\n        );\r\n\r\n        this.element.className = 'wavesurfer-region';\r\n        if (this.showTooltip) {\r\n            this.element.title = this.formatTime(this.start, this.end);\r\n        }\r\n        this.element.setAttribute('data-id', this.id);\r\n\r\n        for (const attrname in this.attributes) {\r\n            this.element.setAttribute(\r\n                'data-region-' + attrname,\r\n                this.attributes[attrname]\r\n            );\r\n        }\r\n\r\n        this.style(this.element, {\r\n            position: 'absolute',\r\n            zIndex: 3,\r\n            height: this.regionHeight,\r\n            top: this.marginTop\r\n        });\r\n\r\n        /* Resize handles */\r\n        if (this.resize) {\r\n            this.handleLeftEl = this.util.withOrientation(\r\n                this.element.appendChild(document.createElement('handle')),\r\n                this.vertical\r\n            );\r\n            this.handleRightEl = this.util.withOrientation(\r\n                this.element.appendChild(document.createElement('handle')),\r\n                this.vertical\r\n            );\r\n\r\n            this.handleLeftEl.className = 'wavesurfer-handle wavesurfer-handle-start';\r\n            this.handleRightEl.className = 'wavesurfer-handle wavesurfer-handle-end';\r\n\r\n            // Default CSS properties for both handles.\r\n            const css = {\r\n                cursor: this.vertical ? 'row-resize' : 'col-resize',\r\n                position: 'absolute',\r\n                top: '0px',\r\n                width: '2px',\r\n                height: '100%',\r\n                backgroundColor: 'rgba(0, 0, 0, 1)'\r\n            };\r\n\r\n            // Merge CSS properties per handle.\r\n            const handleLeftCss =\r\n                this.handleStyle.left !== 'none'\r\n                    ? Object.assign(\r\n                        { left: '0px' },\r\n                        css,\r\n                        this.handleStyle.left\r\n                    )\r\n                    : null;\r\n            const handleRightCss =\r\n                this.handleStyle.right !== 'none'\r\n                    ? Object.assign(\r\n                        { right: '0px' },\r\n                        css,\r\n                        this.handleStyle.right\r\n                    )\r\n                    : null;\r\n\r\n            if (handleLeftCss) {\r\n                this.style(this.handleLeftEl, handleLeftCss);\r\n            }\r\n\r\n            if (handleRightCss) {\r\n                this.style(this.handleRightEl, handleRightCss);\r\n            }\r\n        }\r\n\r\n        this.updateRender();\r\n        this.bindEvents();\r\n    }\r\n\r\n    formatTime(start, end) {\r\n        if (this.formatTimeCallback) {\r\n            return this.formatTimeCallback(start, end);\r\n        }\r\n        return (start == end ? [start] : [start, end])\r\n            .map((time) =>\r\n                [\r\n                    Math.floor((time % 3600) / 60), // minutes\r\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\r\n                ].join(':')\r\n            )\r\n            .join('-');\r\n    }\r\n\r\n    getWidth() {\r\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\r\n    }\r\n\r\n    /* Update element's position, width, color. */\r\n    updateRender() {\r\n        // duration varies during loading process, so don't overwrite important data\r\n        const dur = this.wavesurfer.getDuration();\r\n        const width = this.getWidth();\r\n\r\n        let startLimited = this.start;\r\n        let endLimited = this.end;\r\n        if (startLimited < 0) {\r\n            startLimited = 0;\r\n            endLimited = endLimited - startLimited;\r\n        }\r\n        if (endLimited > dur) {\r\n            endLimited = dur;\r\n            startLimited = dur - (endLimited - startLimited);\r\n        }\r\n\r\n        if (this.minLength != null) {\r\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\r\n        }\r\n\r\n        if (this.maxLength != null) {\r\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\r\n        }\r\n\r\n        if (this.element != null) {\r\n            // Calculate the left and width values of the region such that\r\n            // no gaps appear between regions.\r\n            const left = Math.round((startLimited / dur) * width);\r\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\r\n\r\n            this.style(this.element, {\r\n                left: left + 'px',\r\n                width: regionWidth + 'px',\r\n                backgroundColor: this.color,\r\n                cursor: this.drag ? 'move' : 'default'\r\n            });\r\n\r\n            for (const attrname in this.attributes) {\r\n                this.element.setAttribute(\r\n                    'data-region-' + attrname,\r\n                    this.attributes[attrname]\r\n                );\r\n            }\r\n\r\n            if (this.showTooltip) {\r\n                this.element.title = this.formatTime(this.start, this.end);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Bind audio events. */\r\n    bindInOut() {\r\n        this.firedIn = false;\r\n        this.firedOut = false;\r\n\r\n        const onProcess = (time) => {\r\n            let start = Math.round(this.start * 10) / 10;\r\n            let end = Math.round(this.end * 10) / 10;\r\n            time = Math.round(time * 10) / 10;\r\n\r\n            if (\r\n                !this.firedOut &&\r\n                this.firedIn &&\r\n                (start > time || end <= time)\r\n            ) {\r\n                this.firedOut = true;\r\n                this.firedIn = false;\r\n                this.fireEvent('out');\r\n                this.wavesurfer.fireEvent('region-out', this);\r\n            }\r\n            if (!this.firedIn && start <= time && end > time) {\r\n                this.firedIn = true;\r\n                this.firedOut = false;\r\n                this.fireEvent('in');\r\n                this.wavesurfer.fireEvent('region-in', this);\r\n            }\r\n        };\r\n\r\n        this.wavesurfer.backend.on('audioprocess', onProcess);\r\n\r\n        this.on('remove', () => {\r\n            this.wavesurfer.backend.un('audioprocess', onProcess);\r\n        });\r\n\r\n        /* Loop playback. */\r\n        this.on('out', () => {\r\n            if (this.loop) {\r\n                const realTime = this.wavesurfer.getCurrentTime();\r\n                if (realTime >= this.start && realTime <= this.end) {\r\n                    this.wavesurfer.play(this.start);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /* Bind DOM events. */\r\n    bindEvents() {\r\n        const preventContextMenu = this.preventContextMenu;\r\n\r\n        this.element.addEventListener('mouseenter', (e) => {\r\n            this.fireEvent('mouseenter', e);\r\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('mouseleave', (e) => {\r\n            this.fireEvent('mouseleave', e);\r\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            this.fireEvent('click', e);\r\n            this.wavesurfer.fireEvent('region-click', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('dblclick', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.fireEvent('dblclick', e);\r\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\r\n        });\r\n\r\n        this.element.addEventListener('contextmenu', (e) => {\r\n            if (preventContextMenu) {\r\n                e.preventDefault();\r\n            }\r\n            this.fireEvent('contextmenu', e);\r\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\r\n        });\r\n\r\n        /* Drag or resize on mousemove. */\r\n        if (this.drag || this.resize) {\r\n            this.bindDragEvents();\r\n        }\r\n    }\r\n\r\n    bindDragEvents() {\r\n        const container = this.wavesurfer.drawer.container;\r\n        const scrollSpeed = this.scrollSpeed;\r\n        const scrollThreshold = this.scrollThreshold;\r\n        let startTime;\r\n        let touchId;\r\n        let drag;\r\n        let maxScroll;\r\n        let resize;\r\n        let updated = false;\r\n        let scrollDirection;\r\n        let wrapperRect;\r\n        let regionLeftHalfTime;\r\n        let regionRightHalfTime;\r\n\r\n        // Scroll when the user is dragging within the threshold\r\n        const edgeScroll = (event) => {\r\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\r\n            const duration = this.wavesurfer.getDuration();\r\n            if (!scrollDirection || (!drag && !resize)) {\r\n                return;\r\n            }\r\n\r\n            const x = orientedEvent.clientX;\r\n            let distanceBetweenCursorAndWrapperEdge = 0;\r\n            let regionHalfTimeWidth = 0;\r\n            let adjustment = 0;\r\n\r\n            // Get the currently selected time according to the mouse position\r\n            let time = this.regionsUtil.getRegionSnapToGridValue(\r\n                this.wavesurfer.drawer.handleEvent(event) * duration\r\n            );\r\n\r\n            if (drag) {\r\n                // Considering the point of contact with the region while edgescrolling\r\n                if (scrollDirection === -1) {\r\n                    regionHalfTimeWidth = regionLeftHalfTime * this.wavesurfer.params.minPxPerSec;\r\n                    distanceBetweenCursorAndWrapperEdge = x - wrapperRect.left;\r\n                } else {\r\n                    regionHalfTimeWidth = regionRightHalfTime * this.wavesurfer.params.minPxPerSec;\r\n                    distanceBetweenCursorAndWrapperEdge = wrapperRect.right - x;\r\n                }\r\n            } else {\r\n                // Considering minLength while edgescroll\r\n                let minLength = this.minLength;\r\n                if (!minLength) {\r\n                    minLength = 0;\r\n                }\r\n\r\n                if (resize === 'start') {\r\n                    if (time > this.end - minLength) {\r\n                        time = this.end - minLength;\r\n                        adjustment = scrollSpeed * scrollDirection;\r\n                    }\r\n\r\n                    if (time < 0) {\r\n                        time = 0;\r\n                    }\r\n                } else if (resize === 'end') {\r\n                    if (time < this.start + minLength) {\r\n                        time = this.start + minLength;\r\n                        adjustment = scrollSpeed * scrollDirection;\r\n                    }\r\n\r\n                    if (time > duration) {\r\n                        time = duration;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Don't edgescroll if region has reached min or max limit\r\n            const wrapperScrollLeft = this.wrapper.scrollLeft;\r\n\r\n            if (scrollDirection === -1) {\r\n                if (Math.round(wrapperScrollLeft) === 0) {\r\n                    return;\r\n                }\r\n\r\n                if (Math.round(wrapperScrollLeft - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge) <= 0) {\r\n                    return;\r\n                }\r\n            } else {\r\n                if (Math.round(wrapperScrollLeft) === maxScroll) {\r\n                    return;\r\n                }\r\n\r\n                if (Math.round(wrapperScrollLeft + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge) >= maxScroll) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Update scroll position\r\n            let scrollLeft = wrapperScrollLeft - adjustment + scrollSpeed * scrollDirection;\r\n\r\n            if (scrollDirection === -1) {\r\n                const calculatedLeft = Math.max(0 + regionHalfTimeWidth - distanceBetweenCursorAndWrapperEdge, scrollLeft);\r\n                this.wrapper.scrollLeft = scrollLeft = calculatedLeft;\r\n            } else {\r\n                const calculatedRight = Math.min(maxScroll - regionHalfTimeWidth + distanceBetweenCursorAndWrapperEdge, scrollLeft);\r\n                this.wrapper.scrollLeft = scrollLeft = calculatedRight;\r\n            }\r\n\r\n            const delta = time - startTime;\r\n            startTime = time;\r\n\r\n            // Continue dragging or resizing\r\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\r\n\r\n            // Repeat\r\n            window.requestAnimationFrame(() => {\r\n                edgeScroll(event);\r\n            });\r\n        };\r\n\r\n        const onDown = (event) => {\r\n            const duration = this.wavesurfer.getDuration();\r\n            if (event.touches && event.touches.length > 1) {\r\n                return;\r\n            }\r\n            touchId = event.targetTouches ? event.targetTouches[0].identifier : null;\r\n\r\n            // stop the event propagation, if this region is resizable or draggable\r\n            // and the event is therefore handled here.\r\n            if (this.drag || this.resize) {\r\n                event.stopPropagation();\r\n            }\r\n\r\n            // Store the selected startTime we begun dragging or resizing\r\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\r\n                this.wavesurfer.drawer.handleEvent(event, true) * duration\r\n            );\r\n\r\n            // Store the selected point of contact when we begin dragging\r\n            regionLeftHalfTime = startTime - this.start;\r\n            regionRightHalfTime = this.end - startTime;\r\n\r\n            // Store for scroll calculations\r\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n\r\n            wrapperRect = this.util.withOrientation(\r\n                this.wrapper.getBoundingClientRect(),\r\n                this.vertical\r\n            );\r\n\r\n            this.isResizing = false;\r\n            this.isDragging = false;\r\n            if (event.target.tagName.toLowerCase() === 'handle') {\r\n                this.isResizing = true;\r\n                resize = event.target.classList.contains('wavesurfer-handle-start')\r\n                    ? 'start'\r\n                    : 'end';\r\n            } else {\r\n                this.isDragging = true;\r\n                drag = true;\r\n                resize = false;\r\n            }\r\n        };\r\n        const onUp = (event) => {\r\n            if (event.touches && event.touches.length > 1) {\r\n                return;\r\n            }\r\n\r\n            if (drag || resize) {\r\n                this.isDragging = false;\r\n                this.isResizing = false;\r\n                drag = false;\r\n                scrollDirection = null;\r\n                resize = false;\r\n            }\r\n\r\n            if (updated) {\r\n                updated = false;\r\n                this.util.preventClick();\r\n                this.fireEvent('update-end', event);\r\n                this.wavesurfer.fireEvent('region-update-end', this, event);\r\n            }\r\n        };\r\n        const onMove = (event) => {\r\n            const duration = this.wavesurfer.getDuration();\r\n            let orientedEvent = this.util.withOrientation(event, this.vertical);\r\n\r\n            if (event.touches && event.touches.length > 1) {\r\n                return;\r\n            }\r\n            if (event.targetTouches && event.targetTouches[0].identifier != touchId) {\r\n                return;\r\n            }\r\n            if (!drag && !resize) {\r\n                return;\r\n            }\r\n\r\n            const oldTime = startTime;\r\n            let time = this.regionsUtil.getRegionSnapToGridValue(\r\n                this.wavesurfer.drawer.handleEvent(event) * duration\r\n            );\r\n\r\n            if (drag) {\r\n                // To maintain relative cursor start point while dragging\r\n                const maxEnd = this.wavesurfer.getDuration();\r\n                if (time > maxEnd - regionRightHalfTime) {\r\n                    time = maxEnd - regionRightHalfTime;\r\n                }\r\n\r\n                if (time - regionLeftHalfTime < 0) {\r\n                    time = regionLeftHalfTime;\r\n                }\r\n            }\r\n\r\n            if (resize) {\r\n                // To maintain relative cursor start point while resizing\r\n                // we have to handle for minLength\r\n                let minLength = this.minLength;\r\n                if (!minLength) {\r\n                    minLength = 0;\r\n                }\r\n\r\n                if (resize === 'start') {\r\n                    if (time > this.end - minLength) {\r\n                        time = this.end - minLength;\r\n                    }\r\n\r\n                    if (time < 0) {\r\n                        time = 0;\r\n                    }\r\n                } else if (resize === 'end') {\r\n                    if (time < this.start + minLength) {\r\n                        time = this.start + minLength;\r\n                    }\r\n\r\n                    if (time > duration) {\r\n                        time = duration;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let delta = time - startTime;\r\n            startTime = time;\r\n\r\n            // Drag\r\n            if (this.drag && drag) {\r\n                updated = updated || !!delta;\r\n                this.onDrag(delta);\r\n            }\r\n\r\n            // Resize\r\n            if (this.resize && resize) {\r\n                updated = updated || !!delta;\r\n                this.onResize(delta, resize);\r\n            }\r\n\r\n            if (\r\n                this.scroll && container.clientWidth < this.wrapper.scrollWidth\r\n            ) {\r\n                // Triggering edgescroll from within edgeScrollWidth\r\n                let x = orientedEvent.clientX;\r\n\r\n                // Check direction\r\n                if (x < wrapperRect.left + this.edgeScrollWidth) {\r\n                    scrollDirection = -1;\r\n                } else if (x > wrapperRect.right - this.edgeScrollWidth) {\r\n                    scrollDirection = 1;\r\n                } else {\r\n                    scrollDirection = null;\r\n                }\r\n\r\n                if (scrollDirection) {\r\n                    edgeScroll(event);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.element.addEventListener('mousedown', onDown);\r\n        this.element.addEventListener('touchstart', onDown);\r\n\r\n        document.body.addEventListener('mousemove', onMove);\r\n        document.body.addEventListener('touchmove', onMove, {passive: false});\r\n\r\n        document.addEventListener('mouseup', onUp);\r\n        document.body.addEventListener('touchend', onUp);\r\n\r\n        this.on('remove', () => {\r\n            document.removeEventListener('mouseup', onUp);\r\n            document.body.removeEventListener('touchend', onUp);\r\n            document.body.removeEventListener('mousemove', onMove);\r\n            document.body.removeEventListener('touchmove', onMove);\r\n        });\r\n\r\n        this.wavesurfer.on('destroy', () => {\r\n            document.removeEventListener('mouseup', onUp);\r\n            document.body.removeEventListener('touchend', onUp);\r\n        });\r\n    }\r\n\r\n    onDrag(delta) {\r\n        const maxEnd = this.wavesurfer.getDuration();\r\n        if (this.end + delta > maxEnd) {\r\n            delta = maxEnd - this.end;\r\n        }\r\n\r\n        if (this.start + delta < 0) {\r\n            delta = this.start * -1;\r\n        }\r\n\r\n        const eventParams = {\r\n            direction: this._getDragDirection(delta),\r\n            action: 'drag'\r\n        };\r\n\r\n        this.update({\r\n            start: this.start + delta,\r\n            end: this.end + delta\r\n        }, eventParams);\r\n    }\r\n\r\n    /**\r\n     * Returns the direction of dragging region based on delta\r\n     * Negative delta means region is moving to the left\r\n     * Positive - to the right\r\n     * For zero delta the direction is not defined\r\n     * @param {number} delta Drag offset\r\n     * @returns {string|null} Direction 'left', 'right' or null\r\n     */\r\n    _getDragDirection(delta) {\r\n        if (delta < 0) {\r\n            return 'left';\r\n        }\r\n        if (delta > 0) {\r\n            return 'right';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @example\r\n     * onResize(-5, 'start') // Moves the start point 5 seconds back\r\n     * onResize(0.5, 'end') // Moves the end point 0.5 seconds forward\r\n     *\r\n     * @param {number} delta How much to add or subtract, given in seconds\r\n     * @param {string} direction 'start 'or 'end'\r\n     */\r\n    onResize(delta, direction) {\r\n        const duration = this.wavesurfer.getDuration();\r\n        const eventParams = {\r\n            action: 'resize',\r\n            direction: direction === 'start' ? 'left' : 'right'\r\n        };\r\n\r\n        if (direction === 'start') {\r\n            // Check if changing the start by the given delta would result in the region being smaller than minLength\r\n            if (delta > 0 && this.end - (this.start + delta) < this.minLength) {\r\n                delta = this.end - this.minLength - this.start;\r\n            }\r\n\r\n            // Check if changing the start by the given delta would result in the region being larger than maxLength\r\n            if (delta < 0 && this.end - (this.start + delta) > this.maxLength) {\r\n                delta = this.end - this.start - this.maxLength;\r\n            }\r\n\r\n            if (delta < 0 && (this.start + delta) < 0) {\r\n                delta = this.start * -1;\r\n            }\r\n\r\n            this.update({\r\n                start: Math.min(this.start + delta, this.end),\r\n                end: Math.max(this.start + delta, this.end)\r\n            }, eventParams);\r\n        } else {\r\n            // Check if changing the end by the given delta would result in the region being smaller than minLength\r\n            if (delta < 0 && this.end + delta - this.start < this.minLength) {\r\n                delta = this.start + this.minLength - this.end;\r\n            }\r\n\r\n            // Check if changing the end by the given delta would result in the region being larger than maxLength\r\n            if (delta > 0 && this.end + delta - this.start > this.maxLength) {\r\n                delta = this.maxLength - (this.end - this.start);\r\n            }\r\n\r\n            if (delta > 0 && (this.end + delta) > duration) {\r\n                delta = duration - this.end;\r\n            }\r\n\r\n            this.update({\r\n                start: Math.min(this.end + delta, this.start),\r\n                end: Math.max(this.end + delta, this.start)\r\n            }, eventParams);\r\n        }\r\n    }\r\n\r\n    updateHandlesResize(resize) {\r\n        let cursorStyle;\r\n        if (resize) {\r\n            cursorStyle = this.vertical ? 'row-resize' : 'col-resize';\r\n        } else {\r\n            cursorStyle = 'auto';\r\n        }\r\n\r\n        this.handleLeftEl && this.style(this.handleLeftEl, { cursor: cursorStyle });\r\n        this.handleRightEl && this.style(this.handleRightEl, { cursor: cursorStyle });\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/plugin/regions/index.js\");\n",""],"names":["RegionsPlugin","params","ws","wavesurfer","util","getRegionSnapToGridValue","value","maxRegions","regionsMinLength","observerPrototypeKeys","Object","getOwnPropertyNames","Observer","prototype","forEach","key","Region","scrollWidthProportion","_onBackendCreated","wrapper","drawer","orientation","defaultEdgeScrollWidth","clientWidth","regions","region","add","list","_onReady","vertical","dragSelection","enableDragSelection","keys","id","updateRender","isReady","once","un","setDisabledEventEmissions","disableDragSelection","clear","length","wouldExceedMaxRegions","edgeScrollWidth","formatTimeCallback","minLength","on","remove","slop","container","scroll","scrollParent","scrollSpeed","scrollThreshold","drag","duration","getDuration","maxScroll","start","touchId","pxMove","scrollDirection","wrapperRect","edgeScroll","e","scrollLeft","Math","min","max","end","handleEvent","update","window","requestAnimationFrame","eventDown","touches","targetTouches","identifier","scrollWidth","withOrientation","getBoundingClientRect","splitChannels","y","clientY","top","channelCount","backend","buffer","numberOfChannels","channelHeight","clientHeight","channelIdx","floor","channelColors","splitChannelsOptions","dragColor","color","addEventListener","removeEventListener","eventUp","preventClick","fireEvent","document","body","eventMove","event","startUpdate","endUpdate","orientedEvent","x","clientX","left","right","time","getCurrentTime","cur","snapToGridInterval","offset","snapToGridOffset","round","name","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","instance","regionsUtils","style","regionsUtil","getId","Number","resize","undefined","Boolean","isResizing","isDragging","loop","handleStyle","handleLeftEl","handleRightEl","data","attributes","showTooltip","maxLength","_onRedraw","preventContextMenu","parseInt","regionHeight","marginTop","getHeight","bindInOut","render","eventParams","updateHandlesResize","element","removeChild","domElement","s","play","appendChild","createElement","className","title","formatTime","setAttribute","attrname","position","zIndex","height","css","cursor","width","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","regionWidth","firedIn","firedOut","onProcess","realTime","preventDefault","stopPropagation","bindDragEvents","startTime","updated","regionLeftHalfTime","regionRightHalfTime","distanceBetweenCursorAndWrapperEdge","regionHalfTimeWidth","adjustment","minPxPerSec","wrapperScrollLeft","calculatedLeft","calculatedRight","delta","onDrag","onResize","onDown","target","tagName","toLowerCase","classList","contains","onUp","onMove","oldTime","maxEnd","passive","direction","_getDragDirection","action","cursorStyle"],"sourceRoot":""}