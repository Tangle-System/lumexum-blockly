{"version":3,"file":"wavesurfer.markers.min.js","mappings":"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","sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/markers/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"markers\"] = factory();\n})(self, function() {\nreturn ","/**\r\n * @typedef {Object} MarkerParams\r\n * @desc The parameters used to describe a marker.\r\n * @example wavesurfer.addMarker(regionParams);\r\n * @property {number} time The time to set the marker at\r\n * @property {?label} string An optional marker label\r\n * @property {?color} string Background color for marker\r\n * @property {?position} string \"top\" or \"bottom\", defaults to \"bottom\"\r\n * @property {?markerElement} element An HTML element to display instead of the default marker image\r\n * @property {?draggable} boolean Set marker as draggable, defaults to false\r\n */\r\n\r\n\r\n/**\r\n * Markers are points in time in the audio that can be jumped to.\r\n *\r\n * @implements {PluginClass}\r\n *\r\n * @example\r\n * import MarkersPlugin from 'wavesurfer.markers.js';\r\n *\r\n * // if you are using <script> tags\r\n * var MarkerPlugin = window.WaveSurfer.markers;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     MarkersPlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\n\r\nconst DEFAULT_FILL_COLOR = \"#D8D8D8\";\r\nconst DEFAULT_POSITION = \"bottom\";\r\n\r\nexport default class MarkersPlugin {\r\n    /**\r\n     * @typedef {Object} MarkersPluginParams\r\n     * @property {?MarkerParams[]} markers Initial set of markers\r\n     * @fires MarkersPlugin#marker-click\r\n     * @fires MarkersPlugin#marker-drag\r\n     * @fires MarkersPlugin#marker-drop\r\n     */\r\n\r\n    /**\r\n     * Markers plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param {MarkersPluginParams} params parameters use to initialise the plugin\r\n     * @since 4.6.0\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'markers',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            staticProps: {\r\n                addMarker(options) {\r\n                    if (!this.initialisedPluginList.markers) {\r\n                        this.initPlugin('markers');\r\n                    }\r\n                    return this.markers.add(options);\r\n                },\r\n                clearMarkers() {\r\n                    this.markers && this.markers.clear();\r\n                }\r\n            },\r\n            instance: MarkersPlugin\r\n        };\r\n    }\r\n\r\n    constructor(params, ws) {\r\n        this.params = params;\r\n        this.wavesurfer = ws;\r\n        this.util = ws.util;\r\n        this.style = this.util.style;\r\n        this.markerLineWidth = 1;\r\n        this.markerWidth = 11;\r\n        this.markerHeight = 22;\r\n        this.dragging = false;\r\n\r\n\r\n        this._onResize = () => {\r\n            this._updateMarkerPositions();\r\n        };\r\n\r\n        this._onBackendCreated = () => {\r\n            this.wrapper = this.wavesurfer.drawer.wrapper;\r\n            if (this.params.markers) {\r\n                this.params.markers.forEach(marker => this.add(marker));\r\n            }\r\n            window.addEventListener('resize', this._onResize, true);\r\n            window.addEventListener('orientationchange', this._onResize, true);\r\n            this.wavesurfer.on('zoom', this._onResize);\r\n\r\n            if (!this.markers.find(marker => marker.draggable)){\r\n                return;\r\n            }\r\n\r\n            this.onMouseMove = (e) => this._onMouseMove(e);\r\n            window.addEventListener('mousemove', this.onMouseMove);\r\n\r\n            this.onMouseUp = (e) => this._onMouseUp(e);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        };\r\n\r\n        this.markers = [];\r\n        this._onReady = () => {\r\n            this.wrapper = this.wavesurfer.drawer.wrapper;\r\n            this._updateMarkerPositions();\r\n        };\r\n    }\r\n\r\n    init() {\r\n        // Check if ws is ready\r\n        if (this.wavesurfer.isReady) {\r\n            this._onBackendCreated();\r\n            this._onReady();\r\n        } else {\r\n            this.wavesurfer.once('ready', this._onReady);\r\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.wavesurfer.un('ready', this._onReady);\r\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\r\n\r\n        this.wavesurfer.un('zoom', this._onResize);\r\n\r\n        window.removeEventListener('resize', this._onResize, true);\r\n        window.removeEventListener('orientationchange', this._onResize, true);\r\n\r\n        if (this.onMouseMove) {\r\n            window.removeEventListener('mousemove', this.onMouseMove);\r\n        }\r\n        if (this.onMouseUp) {\r\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Add a marker\r\n     *\r\n     * @param {MarkerParams} params Marker definition\r\n     * @return {object} The created marker\r\n     */\r\n    add(params) {\r\n        let marker = {\r\n            time: params.time,\r\n            label: params.label,\r\n            color: params.color || DEFAULT_FILL_COLOR,\r\n            position: params.position || DEFAULT_POSITION,\r\n            draggable: !!params.draggable\r\n        };\r\n\r\n        marker.el = this._createMarkerElement(marker, params.markerElement);\r\n\r\n        this.wrapper.appendChild(marker.el);\r\n        this.markers.push(marker);\r\n        this._updateMarkerPositions();\r\n\r\n        return marker;\r\n    }\r\n\r\n    /**\r\n     * Remove a marker\r\n     *\r\n     * @param {number} index Index of the marker to remove\r\n     */\r\n    remove(index) {\r\n        let marker = this.markers[index];\r\n        if (!marker) {\r\n            return;\r\n        }\r\n\r\n        this.wrapper.removeChild(marker.el);\r\n        this.markers.splice(index, 1);\r\n    }\r\n\r\n    _createPointerSVG(color, position) {\r\n        const svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\n        const el = document.createElementNS(svgNS, \"svg\");\r\n        const polygon = document.createElementNS(svgNS, \"polygon\");\r\n\r\n        el.setAttribute(\"viewBox\", \"0 0 40 80\");\r\n\r\n        polygon.setAttribute(\"id\", \"polygon\");\r\n        polygon.setAttribute(\"stroke\", \"#979797\");\r\n        polygon.setAttribute(\"fill\", color);\r\n        polygon.setAttribute(\"points\", \"20 0 40 30 40 80 0 80 0 30\");\r\n        if ( position == \"top\" ) {\r\n            polygon.setAttribute(\"transform\", \"rotate(180, 20 40)\");\r\n        }\r\n\r\n        el.appendChild(polygon);\r\n\r\n        this.style(el, {\r\n            width: this.markerWidth + \"px\",\r\n            height: this.markerHeight + \"px\",\r\n            \"min-width\": this.markerWidth + \"px\",\r\n            \"margin-right\": \"5px\",\r\n            \"z-index\": 4\r\n        });\r\n        return el;\r\n    }\r\n\r\n    _createMarkerElement(marker, markerElement) {\r\n        let label = marker.label;\r\n\r\n        const el = document.createElement('marker');\r\n        el.className = \"wavesurfer-marker\";\r\n\r\n        this.style(el, {\r\n            position: \"absolute\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            overflow: \"hidden\",\r\n            \"flex-direction\": (marker.position == \"top\" ? \"column-reverse\" : \"column\")\r\n        });\r\n\r\n        const line = document.createElement('div');\r\n        const width = markerElement ? markerElement.width : this.markerWidth;\r\n        marker.offset = (width - this.markerLineWidth) / 2;\r\n        this.style(line, {\r\n            \"flex-grow\": 1,\r\n            \"margin-left\": marker.offset + \"px\",\r\n            background: \"black\",\r\n            width: this.markerLineWidth + \"px\",\r\n            opacity: 0.1\r\n        });\r\n        el.appendChild(line);\r\n\r\n        const labelDiv = document.createElement('div');\r\n        const point = markerElement || this._createPointerSVG(marker.color, marker.position);\r\n        if (marker.draggable){\r\n            point.draggable = false;\r\n        }\r\n        labelDiv.appendChild(point);\r\n\r\n        if ( label ) {\r\n            const labelEl = document.createElement('span');\r\n            labelEl.innerText = label;\r\n            this.style(labelEl, {\r\n                \"font-family\": \"monospace\",\r\n                \"font-size\": \"90%\"\r\n            });\r\n            labelDiv.appendChild(labelEl);\r\n        }\r\n\r\n        this.style(labelDiv, {\r\n            display: \"flex\",\r\n            \"align-items\": \"center\",\r\n            cursor: \"pointer\"\r\n        });\r\n\r\n        el.appendChild(labelDiv);\r\n\r\n        labelDiv.addEventListener(\"click\", e => {\r\n            e.stopPropagation();\r\n            // Click event is caught when the marker-drop event was dispatched.\r\n            // Drop event was dispatched at this moment, but this.dragging\r\n            // is waiting for the next tick to set as false\r\n            if (this.dragging){\r\n                return;\r\n            }\r\n            this.wavesurfer.setCurrentTime(marker.time);\r\n            this.wavesurfer.fireEvent(\"marker-click\", marker, e);\r\n        });\r\n\r\n        if (marker.draggable) {\r\n            labelDiv.addEventListener(\"mousedown\", e => {\r\n                this.selectedMarker = marker;\r\n            });\r\n        }\r\n        return el;\r\n    }\r\n\r\n    _updateMarkerPositions() {\r\n        for ( let i = 0 ; i < this.markers.length; i++ ) {\r\n            let marker = this.markers[i];\r\n            this._updateMarkerPosition(marker);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update a marker position based on its time property.\r\n     *\r\n     * @private\r\n     * @param {MarkerParams} params The marker to update.\r\n     * @returns {void}\r\n     */\r\n    _updateMarkerPosition(params) {\r\n        const duration = this.wavesurfer.getDuration();\r\n        const elementWidth =\r\n            this.wavesurfer.drawer.width /\r\n            this.wavesurfer.params.pixelRatio;\r\n\r\n        const positionPct = Math.min(params.time / duration, 1);\r\n        const leftPx = ((elementWidth * positionPct) - params.offset);\r\n        this.style(params.el, {\r\n            \"left\": leftPx + \"px\",\r\n            \"max-width\": (elementWidth - leftPx) + \"px\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fires `marker-drag` event, update the `time` property for the\r\n     * selected marker based on the mouse position, and calls to update\r\n     * its position.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event The mouse event.\r\n     * @returns {void}\r\n     */\r\n    _onMouseMove(event) {\r\n        if (!this.selectedMarker){\r\n            return;\r\n        }\r\n        if (!this.dragging){\r\n            this.dragging = true;\r\n            this.wavesurfer.fireEvent(\"marker-drag\", this.selectedMarker, event);\r\n        }\r\n        this.selectedMarker.time = this.wavesurfer.drawer.handleEvent(event) * this.wavesurfer.getDuration();\r\n        this._updateMarkerPositions();\r\n    }\r\n\r\n    /**\r\n     * Fires `marker-drop` event and unselect the dragged marker.\r\n     *\r\n     * @private\r\n     * @param {MouseEvent} event The mouse event.\r\n     * @returns {void}\r\n     */\r\n    _onMouseUp(event) {\r\n        if (this.selectedMarker) {\r\n            setTimeout(() => {\r\n                this.selectedMarker = false;\r\n                this.dragging = false;\r\n            }, 0);\r\n        }\r\n\r\n        if (!this.dragging) {\r\n            return;\r\n        }\r\n\r\n        event.stopPropagation();\r\n        const duration = this.wavesurfer.getDuration();\r\n        this.selectedMarker.time = this.wavesurfer.drawer.handleEvent(event) * duration;\r\n        this._updateMarkerPositions();\r\n        this.wavesurfer.fireEvent(\"marker-drop\", this.selectedMarker, event);\r\n    }\r\n\r\n    /**\r\n     * Remove all markers\r\n     */\r\n    clear() {\r\n        while ( this.markers.length > 0 ) {\r\n            this.remove(0);\r\n        }\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(188);\n"],"names":["root","factory","exports","module","define","amd","self","MarkersPlugin","params","ws","this","wavesurfer","util","style","markerLineWidth","markerWidth","markerHeight","dragging","_onResize","_updateMarkerPositions","_onBackendCreated","wrapper","drawer","markers","forEach","marker","add","window","addEventListener","on","find","draggable","onMouseMove","e","_onMouseMove","onMouseUp","_onMouseUp","_onReady","name","deferInit","staticProps","addMarker","options","initialisedPluginList","initPlugin","clearMarkers","clear","instance","isReady","once","un","removeEventListener","time","label","color","position","el","_createMarkerElement","markerElement","appendChild","push","index","removeChild","splice","svgNS","document","createElementNS","polygon","setAttribute","width","height","createElement","className","display","overflow","line","offset","background","opacity","labelDiv","point","_createPointerSVG","labelEl","innerText","cursor","stopPropagation","setCurrentTime","fireEvent","selectedMarker","i","length","_updateMarkerPosition","duration","getDuration","elementWidth","pixelRatio","leftPx","Math","min","event","handleEvent","setTimeout","remove","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}